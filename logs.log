2025-03-27 18:05:47,867:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-27 18:05:47,867:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-27 18:05:47,867:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-27 18:05:47,868:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 10:56:52,297:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pandas\plotting\_matplotlib\core.py:1266: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  scatter = ax.scatter(

2025-03-29 11:25:02,422:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pandas\plotting\_matplotlib\core.py:1266: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  scatter = ax.scatter(

2025-03-29 11:25:42,393:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pandas\plotting\_matplotlib\core.py:1266: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  scatter = ax.scatter(

2025-03-29 11:29:44,929:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pandas\plotting\_matplotlib\core.py:1266: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  scatter = ax.scatter(

2025-03-29 11:34:27,425:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pandas\plotting\_matplotlib\core.py:1266: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  scatter = ax.scatter(

2025-03-29 11:42:58,348:INFO:PyCaret RegressionExperiment
2025-03-29 11:42:58,348:INFO:Logging name: reg-default-name
2025-03-29 11:42:58,348:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-29 11:42:58,348:INFO:version 3.3.2
2025-03-29 11:42:58,348:INFO:Initializing setup()
2025-03-29 11:42:58,348:INFO:self.USI: 287c
2025-03-29 11:42:58,348:INFO:self._variable_keys: {'_ml_usecase', 'X_train', 'transform_target_param', 'y_test', 'fold_generator', 'n_jobs_param', 'html_param', 'fold_shuffle_param', 'log_plots_param', '_available_plots', 'USI', 'exp_name_log', 'target_param', 'exp_id', 'y', 'seed', 'fold_groups_param', 'idx', 'y_train', 'gpu_n_jobs_param', 'X', 'X_test', 'pipeline', 'memory', 'data', 'gpu_param', 'logging_param'}
2025-03-29 11:42:58,348:INFO:Checking environment
2025-03-29 11:42:58,348:INFO:python_version: 3.11.11
2025-03-29 11:42:58,348:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-03-29 11:42:58,349:INFO:machine: AMD64
2025-03-29 11:42:58,349:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-29 11:42:58,355:INFO:Memory: svmem(total=16943763456, available=5923205120, percent=65.0, used=11020558336, free=5923205120)
2025-03-29 11:42:58,355:INFO:Physical Core: 4
2025-03-29 11:42:58,355:INFO:Logical Core: 8
2025-03-29 11:42:58,355:INFO:Checking libraries
2025-03-29 11:42:58,356:INFO:System:
2025-03-29 11:42:58,356:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-03-29 11:42:58,356:INFO:executable: c:\Users\kgust\miniconda3\envs\halfmarathon_time\python.exe
2025-03-29 11:42:58,356:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-29 11:42:58,356:INFO:PyCaret required dependencies:
2025-03-29 11:42:58,423:INFO:                 pip: 25.0
2025-03-29 11:42:58,423:INFO:          setuptools: 75.8.0
2025-03-29 11:42:58,423:INFO:             pycaret: 3.3.2
2025-03-29 11:42:58,424:INFO:             IPython: 9.0.2
2025-03-29 11:42:58,424:INFO:          ipywidgets: 8.1.5
2025-03-29 11:42:58,424:INFO:                tqdm: 4.67.1
2025-03-29 11:42:58,424:INFO:               numpy: 1.26.4
2025-03-29 11:42:58,424:INFO:              pandas: 2.1.4
2025-03-29 11:42:58,424:INFO:              jinja2: 3.1.6
2025-03-29 11:42:58,424:INFO:               scipy: 1.11.4
2025-03-29 11:42:58,424:INFO:              joblib: 1.3.2
2025-03-29 11:42:58,424:INFO:             sklearn: 1.4.2
2025-03-29 11:42:58,424:INFO:                pyod: 2.0.4
2025-03-29 11:42:58,424:INFO:            imblearn: 0.13.0
2025-03-29 11:42:58,424:INFO:   category_encoders: 2.7.0
2025-03-29 11:42:58,424:INFO:            lightgbm: 4.6.0
2025-03-29 11:42:58,424:INFO:               numba: 0.61.0
2025-03-29 11:42:58,424:INFO:            requests: 2.32.3
2025-03-29 11:42:58,424:INFO:          matplotlib: 3.7.5
2025-03-29 11:42:58,424:INFO:          scikitplot: 0.3.7
2025-03-29 11:42:58,424:INFO:         yellowbrick: 1.5
2025-03-29 11:42:58,424:INFO:              plotly: 5.24.1
2025-03-29 11:42:58,425:INFO:    plotly-resampler: Not installed
2025-03-29 11:42:58,425:INFO:             kaleido: 0.2.1
2025-03-29 11:42:58,425:INFO:           schemdraw: 0.15
2025-03-29 11:42:58,425:INFO:         statsmodels: 0.14.4
2025-03-29 11:42:58,425:INFO:              sktime: 0.26.0
2025-03-29 11:42:58,425:INFO:               tbats: 1.1.3
2025-03-29 11:42:58,425:INFO:            pmdarima: 2.0.4
2025-03-29 11:42:58,425:INFO:              psutil: 7.0.0
2025-03-29 11:42:58,425:INFO:          markupsafe: 3.0.2
2025-03-29 11:42:58,425:INFO:             pickle5: Not installed
2025-03-29 11:42:58,425:INFO:         cloudpickle: 3.1.1
2025-03-29 11:42:58,425:INFO:         deprecation: 2.1.0
2025-03-29 11:42:58,425:INFO:              xxhash: 3.5.0
2025-03-29 11:42:58,425:INFO:           wurlitzer: Not installed
2025-03-29 11:42:58,425:INFO:PyCaret optional dependencies:
2025-03-29 11:42:58,443:INFO:                shap: Not installed
2025-03-29 11:42:58,444:INFO:           interpret: Not installed
2025-03-29 11:42:58,444:INFO:                umap: Not installed
2025-03-29 11:42:58,444:INFO:     ydata_profiling: Not installed
2025-03-29 11:42:58,444:INFO:  explainerdashboard: Not installed
2025-03-29 11:42:58,444:INFO:             autoviz: Not installed
2025-03-29 11:42:58,444:INFO:           fairlearn: Not installed
2025-03-29 11:42:58,444:INFO:          deepchecks: Not installed
2025-03-29 11:42:58,444:INFO:             xgboost: Not installed
2025-03-29 11:42:58,444:INFO:            catboost: Not installed
2025-03-29 11:42:58,444:INFO:              kmodes: Not installed
2025-03-29 11:42:58,444:INFO:             mlxtend: Not installed
2025-03-29 11:42:58,444:INFO:       statsforecast: Not installed
2025-03-29 11:42:58,444:INFO:        tune_sklearn: Not installed
2025-03-29 11:42:58,444:INFO:                 ray: Not installed
2025-03-29 11:42:58,444:INFO:            hyperopt: Not installed
2025-03-29 11:42:58,444:INFO:              optuna: Not installed
2025-03-29 11:42:58,444:INFO:               skopt: Not installed
2025-03-29 11:42:58,444:INFO:              mlflow: Not installed
2025-03-29 11:42:58,445:INFO:              gradio: Not installed
2025-03-29 11:42:58,445:INFO:             fastapi: Not installed
2025-03-29 11:42:58,445:INFO:             uvicorn: Not installed
2025-03-29 11:42:58,445:INFO:              m2cgen: Not installed
2025-03-29 11:42:58,445:INFO:           evidently: Not installed
2025-03-29 11:42:58,445:INFO:               fugue: Not installed
2025-03-29 11:42:58,445:INFO:           streamlit: 1.44.0
2025-03-29 11:42:58,445:INFO:             prophet: Not installed
2025-03-29 11:42:58,445:INFO:None
2025-03-29 11:42:58,445:INFO:Set up data.
2025-03-29 11:42:58,466:INFO:Set up folding strategy.
2025-03-29 11:42:58,467:INFO:Set up train/test split.
2025-03-29 11:42:58,490:INFO:Set up index.
2025-03-29 11:42:58,491:INFO:Assigning column types.
2025-03-29 11:42:58,503:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-29 11:42:58,503:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-29 11:42:58,511:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-29 11:42:58,517:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 11:42:58,593:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 11:42:58,645:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 11:42:58,646:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:42:58,646:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:42:58,647:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-29 11:42:58,651:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-29 11:42:58,655:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 11:42:58,723:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 11:42:58,769:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 11:42:58,770:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:42:58,770:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:42:58,771:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-29 11:42:58,778:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-29 11:42:58,783:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 11:42:58,857:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 11:42:58,915:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 11:42:58,916:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:42:58,916:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:42:58,922:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-29 11:42:58,928:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 11:42:59,004:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 11:42:59,052:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 11:42:59,052:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:42:59,052:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:42:59,053:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-29 11:42:59,064:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 11:42:59,137:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 11:42:59,182:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 11:42:59,183:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:42:59,183:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:42:59,194:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 11:42:59,261:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 11:42:59,308:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 11:42:59,308:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:42:59,310:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:42:59,310:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-29 11:42:59,378:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 11:42:59,426:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 11:42:59,427:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:42:59,427:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:42:59,505:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 11:42:59,545:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 11:42:59,549:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:42:59,549:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:42:59,549:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-29 11:42:59,614:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 11:42:59,664:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:42:59,664:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:42:59,774:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 11:42:59,815:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:42:59,815:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:42:59,816:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-29 11:42:59,945:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:42:59,946:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:43:00,076:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:43:00,076:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:43:00,078:INFO:Preparing preprocessing pipeline...
2025-03-29 11:43:00,078:INFO:Set up simple imputation.
2025-03-29 11:43:00,090:INFO:Set up encoding of ordinal features.
2025-03-29 11:43:00,097:INFO:Set up encoding of categorical features.
2025-03-29 11:43:00,099:INFO:Set up column name cleaning.
2025-03-29 11:43:00,271:INFO:Finished creating preprocessing pipeline.
2025-03-29 11:43:00,305:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\kgust\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo',
                                             '10 km Czas', '10 km Tempo',
                                             '15 km Czas', '15 km Tempo',
                                             '20 km Czas', '20 km Tempo',
                                             'Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć', 'Kategoria wiekowa'],
                                    tr...
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Kategoria wiekowa'],
                                    transformer=OneHotEncoder(cols=['Kategoria '
                                                                    'wiekowa'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-29 11:43:00,305:INFO:Creating final display dataframe.
2025-03-29 11:43:00,727:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target              Czas
2                   Target type        Regression
3           Original data shape       (17707, 13)
4        Transformed data shape       (17707, 25)
5   Transformed train set shape       (12394, 25)
6    Transformed test set shape        (5313, 25)
7              Numeric features                10
8          Categorical features                 2
9      Rows with missing values              0.4%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              287c
2025-03-29 11:43:00,883:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:43:00,883:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:43:00,996:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:43:00,996:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 11:43:00,997:INFO:setup() successfully completed in 2.72s...............
2025-03-29 11:48:22,122:INFO:Initializing compare_models()
2025-03-29 11:48:22,122:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-03-29 11:48:22,122:INFO:Checking exceptions
2025-03-29 11:48:22,135:INFO:Preparing display monitor
2025-03-29 11:48:22,179:INFO:Initializing Linear Regression
2025-03-29 11:48:22,179:INFO:Total runtime is 0.0 minutes
2025-03-29 11:48:22,185:INFO:SubProcess create_model() called ==================================
2025-03-29 11:48:22,186:INFO:Initializing create_model()
2025-03-29 11:48:22,186:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC12DE190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 11:48:22,186:INFO:Checking exceptions
2025-03-29 11:48:22,187:INFO:Importing libraries
2025-03-29 11:48:22,187:INFO:Copying training dataset
2025-03-29 11:48:22,206:INFO:Defining folds
2025-03-29 11:48:22,207:INFO:Declaring metric variables
2025-03-29 11:48:22,211:INFO:Importing untrained model
2025-03-29 11:48:22,217:INFO:Linear Regression Imported successfully
2025-03-29 11:48:22,228:INFO:Starting cross validation
2025-03-29 11:48:22,278:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 11:48:32,057:INFO:Calculating mean and std
2025-03-29 11:48:32,059:INFO:Creating metrics dataframe
2025-03-29 11:48:32,065:INFO:Uploading results into container
2025-03-29 11:48:32,067:INFO:Uploading model into container now
2025-03-29 11:48:32,069:INFO:_master_model_container: 1
2025-03-29 11:48:32,070:INFO:_display_container: 2
2025-03-29 11:48:32,070:INFO:LinearRegression(n_jobs=-1)
2025-03-29 11:48:32,071:INFO:create_model() successfully completed......................................
2025-03-29 11:48:32,352:INFO:SubProcess create_model() end ==================================
2025-03-29 11:48:32,352:INFO:Creating metrics dataframe
2025-03-29 11:48:32,363:INFO:Initializing Lasso Regression
2025-03-29 11:48:32,363:INFO:Total runtime is 0.16973063151041667 minutes
2025-03-29 11:48:32,370:INFO:SubProcess create_model() called ==================================
2025-03-29 11:48:32,370:INFO:Initializing create_model()
2025-03-29 11:48:32,370:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC12DE190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 11:48:32,370:INFO:Checking exceptions
2025-03-29 11:48:32,370:INFO:Importing libraries
2025-03-29 11:48:32,371:INFO:Copying training dataset
2025-03-29 11:48:32,393:INFO:Defining folds
2025-03-29 11:48:32,393:INFO:Declaring metric variables
2025-03-29 11:48:32,400:INFO:Importing untrained model
2025-03-29 11:48:32,408:INFO:Lasso Regression Imported successfully
2025-03-29 11:48:32,421:INFO:Starting cross validation
2025-03-29 11:48:32,424:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 11:48:33,422:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.115e+07, tolerance: 1.470e+06
  model = cd_fast.enet_coordinate_descent(

2025-03-29 11:48:33,482:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.150e+07, tolerance: 1.459e+06
  model = cd_fast.enet_coordinate_descent(

2025-03-29 11:48:33,513:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.166e+07, tolerance: 1.469e+06
  model = cd_fast.enet_coordinate_descent(

2025-03-29 11:48:33,515:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.150e+07, tolerance: 1.479e+06
  model = cd_fast.enet_coordinate_descent(

2025-03-29 11:48:33,535:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.146e+07, tolerance: 1.466e+06
  model = cd_fast.enet_coordinate_descent(

2025-03-29 11:48:33,537:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.102e+07, tolerance: 1.471e+06
  model = cd_fast.enet_coordinate_descent(

2025-03-29 11:48:33,541:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.151e+07, tolerance: 1.471e+06
  model = cd_fast.enet_coordinate_descent(

2025-03-29 11:48:33,547:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.150e+07, tolerance: 1.462e+06
  model = cd_fast.enet_coordinate_descent(

2025-03-29 11:48:33,808:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.119e+07, tolerance: 1.460e+06
  model = cd_fast.enet_coordinate_descent(

2025-03-29 11:48:33,810:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.152e+07, tolerance: 1.463e+06
  model = cd_fast.enet_coordinate_descent(

2025-03-29 11:48:33,863:INFO:Calculating mean and std
2025-03-29 11:48:33,866:INFO:Creating metrics dataframe
2025-03-29 11:48:33,869:INFO:Uploading results into container
2025-03-29 11:48:33,871:INFO:Uploading model into container now
2025-03-29 11:48:33,871:INFO:_master_model_container: 2
2025-03-29 11:48:33,872:INFO:_display_container: 2
2025-03-29 11:48:33,873:INFO:Lasso(random_state=123)
2025-03-29 11:48:33,873:INFO:create_model() successfully completed......................................
2025-03-29 11:48:34,064:INFO:SubProcess create_model() end ==================================
2025-03-29 11:48:34,064:INFO:Creating metrics dataframe
2025-03-29 11:48:34,083:INFO:Initializing Ridge Regression
2025-03-29 11:48:34,083:INFO:Total runtime is 0.19839487075805665 minutes
2025-03-29 11:48:34,090:INFO:SubProcess create_model() called ==================================
2025-03-29 11:48:34,090:INFO:Initializing create_model()
2025-03-29 11:48:34,092:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC12DE190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 11:48:34,092:INFO:Checking exceptions
2025-03-29 11:48:34,092:INFO:Importing libraries
2025-03-29 11:48:34,092:INFO:Copying training dataset
2025-03-29 11:48:34,110:INFO:Defining folds
2025-03-29 11:48:34,110:INFO:Declaring metric variables
2025-03-29 11:48:34,116:INFO:Importing untrained model
2025-03-29 11:48:34,121:INFO:Ridge Regression Imported successfully
2025-03-29 11:48:34,134:INFO:Starting cross validation
2025-03-29 11:48:34,137:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 11:48:34,544:INFO:Calculating mean and std
2025-03-29 11:48:34,545:INFO:Creating metrics dataframe
2025-03-29 11:48:34,546:INFO:Uploading results into container
2025-03-29 11:48:34,547:INFO:Uploading model into container now
2025-03-29 11:48:34,547:INFO:_master_model_container: 3
2025-03-29 11:48:34,547:INFO:_display_container: 2
2025-03-29 11:48:34,548:INFO:Ridge(random_state=123)
2025-03-29 11:48:34,548:INFO:create_model() successfully completed......................................
2025-03-29 11:48:34,727:INFO:SubProcess create_model() end ==================================
2025-03-29 11:48:34,728:INFO:Creating metrics dataframe
2025-03-29 11:48:34,744:INFO:Initializing Elastic Net
2025-03-29 11:48:34,744:INFO:Total runtime is 0.20942520697911582 minutes
2025-03-29 11:48:34,749:INFO:SubProcess create_model() called ==================================
2025-03-29 11:48:34,750:INFO:Initializing create_model()
2025-03-29 11:48:34,750:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC12DE190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 11:48:34,750:INFO:Checking exceptions
2025-03-29 11:48:34,750:INFO:Importing libraries
2025-03-29 11:48:34,750:INFO:Copying training dataset
2025-03-29 11:48:34,769:INFO:Defining folds
2025-03-29 11:48:34,769:INFO:Declaring metric variables
2025-03-29 11:48:34,775:INFO:Importing untrained model
2025-03-29 11:48:34,780:INFO:Elastic Net Imported successfully
2025-03-29 11:48:34,793:INFO:Starting cross validation
2025-03-29 11:48:34,795:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 11:48:35,984:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.403e+07, tolerance: 1.471e+06
  model = cd_fast.enet_coordinate_descent(

2025-03-29 11:48:35,997:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.650e+07, tolerance: 1.459e+06
  model = cd_fast.enet_coordinate_descent(

2025-03-29 11:48:36,024:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.467e+07, tolerance: 1.470e+06
  model = cd_fast.enet_coordinate_descent(

2025-03-29 11:48:36,040:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.824e+07, tolerance: 1.469e+06
  model = cd_fast.enet_coordinate_descent(

2025-03-29 11:48:36,078:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.718e+07, tolerance: 1.471e+06
  model = cd_fast.enet_coordinate_descent(

2025-03-29 11:48:36,079:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.648e+07, tolerance: 1.479e+06
  model = cd_fast.enet_coordinate_descent(

2025-03-29 11:48:36,107:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.654e+07, tolerance: 1.462e+06
  model = cd_fast.enet_coordinate_descent(

2025-03-29 11:48:36,385:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.526e+07, tolerance: 1.460e+06
  model = cd_fast.enet_coordinate_descent(

2025-03-29 11:48:36,393:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.698e+07, tolerance: 1.463e+06
  model = cd_fast.enet_coordinate_descent(

2025-03-29 11:48:36,435:INFO:Calculating mean and std
2025-03-29 11:48:36,439:INFO:Creating metrics dataframe
2025-03-29 11:48:36,444:INFO:Uploading results into container
2025-03-29 11:48:36,446:INFO:Uploading model into container now
2025-03-29 11:48:36,447:INFO:_master_model_container: 4
2025-03-29 11:48:36,447:INFO:_display_container: 2
2025-03-29 11:48:36,448:INFO:ElasticNet(random_state=123)
2025-03-29 11:48:36,448:INFO:create_model() successfully completed......................................
2025-03-29 11:48:36,659:INFO:SubProcess create_model() end ==================================
2025-03-29 11:48:36,659:INFO:Creating metrics dataframe
2025-03-29 11:48:36,679:INFO:Initializing Least Angle Regression
2025-03-29 11:48:36,679:INFO:Total runtime is 0.24167462984720867 minutes
2025-03-29 11:48:36,687:INFO:SubProcess create_model() called ==================================
2025-03-29 11:48:36,687:INFO:Initializing create_model()
2025-03-29 11:48:36,688:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC12DE190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 11:48:36,688:INFO:Checking exceptions
2025-03-29 11:48:36,688:INFO:Importing libraries
2025-03-29 11:48:36,689:INFO:Copying training dataset
2025-03-29 11:48:36,709:INFO:Defining folds
2025-03-29 11:48:36,709:INFO:Declaring metric variables
2025-03-29 11:48:36,714:INFO:Importing untrained model
2025-03-29 11:48:36,721:INFO:Least Angle Regression Imported successfully
2025-03-29 11:48:36,731:INFO:Starting cross validation
2025-03-29 11:48:36,734:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 11:48:37,221:INFO:Calculating mean and std
2025-03-29 11:48:37,223:INFO:Creating metrics dataframe
2025-03-29 11:48:37,228:INFO:Uploading results into container
2025-03-29 11:48:37,229:INFO:Uploading model into container now
2025-03-29 11:48:37,231:INFO:_master_model_container: 5
2025-03-29 11:48:37,231:INFO:_display_container: 2
2025-03-29 11:48:37,231:INFO:Lars(random_state=123)
2025-03-29 11:48:37,232:INFO:create_model() successfully completed......................................
2025-03-29 11:48:37,427:INFO:SubProcess create_model() end ==================================
2025-03-29 11:48:37,427:INFO:Creating metrics dataframe
2025-03-29 11:48:37,442:INFO:Initializing Lasso Least Angle Regression
2025-03-29 11:48:37,443:INFO:Total runtime is 0.25440604289372765 minutes
2025-03-29 11:48:37,450:INFO:SubProcess create_model() called ==================================
2025-03-29 11:48:37,450:INFO:Initializing create_model()
2025-03-29 11:48:37,451:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC12DE190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 11:48:37,451:INFO:Checking exceptions
2025-03-29 11:48:37,451:INFO:Importing libraries
2025-03-29 11:48:37,451:INFO:Copying training dataset
2025-03-29 11:48:37,474:INFO:Defining folds
2025-03-29 11:48:37,474:INFO:Declaring metric variables
2025-03-29 11:48:37,479:INFO:Importing untrained model
2025-03-29 11:48:37,487:INFO:Lasso Least Angle Regression Imported successfully
2025-03-29 11:48:37,498:INFO:Starting cross validation
2025-03-29 11:48:37,501:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 11:48:37,933:INFO:Calculating mean and std
2025-03-29 11:48:37,936:INFO:Creating metrics dataframe
2025-03-29 11:48:37,941:INFO:Uploading results into container
2025-03-29 11:48:37,942:INFO:Uploading model into container now
2025-03-29 11:48:37,943:INFO:_master_model_container: 6
2025-03-29 11:48:37,943:INFO:_display_container: 2
2025-03-29 11:48:37,944:INFO:LassoLars(random_state=123)
2025-03-29 11:48:37,944:INFO:create_model() successfully completed......................................
2025-03-29 11:48:38,143:INFO:SubProcess create_model() end ==================================
2025-03-29 11:48:38,143:INFO:Creating metrics dataframe
2025-03-29 11:48:38,161:INFO:Initializing Orthogonal Matching Pursuit
2025-03-29 11:48:38,161:INFO:Total runtime is 0.2663608233133952 minutes
2025-03-29 11:48:38,170:INFO:SubProcess create_model() called ==================================
2025-03-29 11:48:38,171:INFO:Initializing create_model()
2025-03-29 11:48:38,171:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC12DE190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 11:48:38,171:INFO:Checking exceptions
2025-03-29 11:48:38,171:INFO:Importing libraries
2025-03-29 11:48:38,172:INFO:Copying training dataset
2025-03-29 11:48:38,194:INFO:Defining folds
2025-03-29 11:48:38,195:INFO:Declaring metric variables
2025-03-29 11:48:38,202:INFO:Importing untrained model
2025-03-29 11:48:38,210:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-29 11:48:38,221:INFO:Starting cross validation
2025-03-29 11:48:38,225:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 11:48:38,643:INFO:Calculating mean and std
2025-03-29 11:48:38,644:INFO:Creating metrics dataframe
2025-03-29 11:48:38,646:INFO:Uploading results into container
2025-03-29 11:48:38,647:INFO:Uploading model into container now
2025-03-29 11:48:38,648:INFO:_master_model_container: 7
2025-03-29 11:48:38,648:INFO:_display_container: 2
2025-03-29 11:48:38,648:INFO:OrthogonalMatchingPursuit()
2025-03-29 11:48:38,648:INFO:create_model() successfully completed......................................
2025-03-29 11:48:38,808:INFO:SubProcess create_model() end ==================================
2025-03-29 11:48:38,808:INFO:Creating metrics dataframe
2025-03-29 11:48:38,824:INFO:Initializing Bayesian Ridge
2025-03-29 11:48:38,825:INFO:Total runtime is 0.2774345358212789 minutes
2025-03-29 11:48:38,830:INFO:SubProcess create_model() called ==================================
2025-03-29 11:48:38,831:INFO:Initializing create_model()
2025-03-29 11:48:38,831:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC12DE190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 11:48:38,831:INFO:Checking exceptions
2025-03-29 11:48:38,831:INFO:Importing libraries
2025-03-29 11:48:38,831:INFO:Copying training dataset
2025-03-29 11:48:38,849:INFO:Defining folds
2025-03-29 11:48:38,849:INFO:Declaring metric variables
2025-03-29 11:48:38,856:INFO:Importing untrained model
2025-03-29 11:48:38,862:INFO:Bayesian Ridge Imported successfully
2025-03-29 11:48:38,873:INFO:Starting cross validation
2025-03-29 11:48:38,876:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 11:48:39,676:INFO:Calculating mean and std
2025-03-29 11:48:39,677:INFO:Creating metrics dataframe
2025-03-29 11:48:39,679:INFO:Uploading results into container
2025-03-29 11:48:39,679:INFO:Uploading model into container now
2025-03-29 11:48:39,680:INFO:_master_model_container: 8
2025-03-29 11:48:39,680:INFO:_display_container: 2
2025-03-29 11:48:39,681:INFO:BayesianRidge()
2025-03-29 11:48:39,682:INFO:create_model() successfully completed......................................
2025-03-29 11:48:39,844:INFO:SubProcess create_model() end ==================================
2025-03-29 11:48:39,844:INFO:Creating metrics dataframe
2025-03-29 11:48:39,856:INFO:Initializing Passive Aggressive Regressor
2025-03-29 11:48:39,856:INFO:Total runtime is 0.2946252226829529 minutes
2025-03-29 11:48:39,862:INFO:SubProcess create_model() called ==================================
2025-03-29 11:48:39,862:INFO:Initializing create_model()
2025-03-29 11:48:39,862:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC12DE190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 11:48:39,863:INFO:Checking exceptions
2025-03-29 11:48:39,863:INFO:Importing libraries
2025-03-29 11:48:39,863:INFO:Copying training dataset
2025-03-29 11:48:39,880:INFO:Defining folds
2025-03-29 11:48:39,880:INFO:Declaring metric variables
2025-03-29 11:48:39,885:INFO:Importing untrained model
2025-03-29 11:48:39,890:INFO:Passive Aggressive Regressor Imported successfully
2025-03-29 11:48:39,906:INFO:Starting cross validation
2025-03-29 11:48:39,909:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 11:48:40,390:INFO:Calculating mean and std
2025-03-29 11:48:40,392:INFO:Creating metrics dataframe
2025-03-29 11:48:40,396:INFO:Uploading results into container
2025-03-29 11:48:40,397:INFO:Uploading model into container now
2025-03-29 11:48:40,398:INFO:_master_model_container: 9
2025-03-29 11:48:40,398:INFO:_display_container: 2
2025-03-29 11:48:40,399:INFO:PassiveAggressiveRegressor(random_state=123)
2025-03-29 11:48:40,399:INFO:create_model() successfully completed......................................
2025-03-29 11:48:40,570:INFO:SubProcess create_model() end ==================================
2025-03-29 11:48:40,571:INFO:Creating metrics dataframe
2025-03-29 11:48:40,589:INFO:Initializing Huber Regressor
2025-03-29 11:48:40,589:INFO:Total runtime is 0.3068434238433838 minutes
2025-03-29 11:48:40,594:INFO:SubProcess create_model() called ==================================
2025-03-29 11:48:40,595:INFO:Initializing create_model()
2025-03-29 11:48:40,595:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC12DE190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 11:48:40,595:INFO:Checking exceptions
2025-03-29 11:48:40,595:INFO:Importing libraries
2025-03-29 11:48:40,595:INFO:Copying training dataset
2025-03-29 11:48:40,612:INFO:Defining folds
2025-03-29 11:48:40,612:INFO:Declaring metric variables
2025-03-29 11:48:40,618:INFO:Importing untrained model
2025-03-29 11:48:40,623:INFO:Huber Regressor Imported successfully
2025-03-29 11:48:40,638:INFO:Starting cross validation
2025-03-29 11:48:40,642:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 11:48:41,629:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 11:48:41,670:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 11:48:41,722:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 11:48:41,734:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 11:48:42,103:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 11:48:42,114:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 11:48:42,156:INFO:Calculating mean and std
2025-03-29 11:48:42,158:INFO:Creating metrics dataframe
2025-03-29 11:48:42,159:INFO:Uploading results into container
2025-03-29 11:48:42,159:INFO:Uploading model into container now
2025-03-29 11:48:42,160:INFO:_master_model_container: 10
2025-03-29 11:48:42,160:INFO:_display_container: 2
2025-03-29 11:48:42,160:INFO:HuberRegressor()
2025-03-29 11:48:42,162:INFO:create_model() successfully completed......................................
2025-03-29 11:48:42,326:INFO:SubProcess create_model() end ==================================
2025-03-29 11:48:42,326:INFO:Creating metrics dataframe
2025-03-29 11:48:42,344:INFO:Initializing K Neighbors Regressor
2025-03-29 11:48:42,344:INFO:Total runtime is 0.33608545462290446 minutes
2025-03-29 11:48:42,352:INFO:SubProcess create_model() called ==================================
2025-03-29 11:48:42,352:INFO:Initializing create_model()
2025-03-29 11:48:42,352:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC12DE190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 11:48:42,352:INFO:Checking exceptions
2025-03-29 11:48:42,353:INFO:Importing libraries
2025-03-29 11:48:42,353:INFO:Copying training dataset
2025-03-29 11:48:42,372:INFO:Defining folds
2025-03-29 11:48:42,372:INFO:Declaring metric variables
2025-03-29 11:48:42,377:INFO:Importing untrained model
2025-03-29 11:48:42,383:INFO:K Neighbors Regressor Imported successfully
2025-03-29 11:48:42,396:INFO:Starting cross validation
2025-03-29 11:48:42,398:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 11:48:43,212:INFO:Calculating mean and std
2025-03-29 11:48:43,213:INFO:Creating metrics dataframe
2025-03-29 11:48:43,214:INFO:Uploading results into container
2025-03-29 11:48:43,216:INFO:Uploading model into container now
2025-03-29 11:48:43,216:INFO:_master_model_container: 11
2025-03-29 11:48:43,217:INFO:_display_container: 2
2025-03-29 11:48:43,217:INFO:KNeighborsRegressor(n_jobs=-1)
2025-03-29 11:48:43,217:INFO:create_model() successfully completed......................................
2025-03-29 11:48:43,372:INFO:SubProcess create_model() end ==================================
2025-03-29 11:48:43,372:INFO:Creating metrics dataframe
2025-03-29 11:48:43,389:INFO:Initializing Decision Tree Regressor
2025-03-29 11:48:43,389:INFO:Total runtime is 0.35349842309951784 minutes
2025-03-29 11:48:43,396:INFO:SubProcess create_model() called ==================================
2025-03-29 11:48:43,396:INFO:Initializing create_model()
2025-03-29 11:48:43,397:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC12DE190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 11:48:43,397:INFO:Checking exceptions
2025-03-29 11:48:43,397:INFO:Importing libraries
2025-03-29 11:48:43,397:INFO:Copying training dataset
2025-03-29 11:48:43,415:INFO:Defining folds
2025-03-29 11:48:43,415:INFO:Declaring metric variables
2025-03-29 11:48:43,423:INFO:Importing untrained model
2025-03-29 11:48:43,428:INFO:Decision Tree Regressor Imported successfully
2025-03-29 11:48:43,438:INFO:Starting cross validation
2025-03-29 11:48:43,442:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 11:48:44,163:INFO:Calculating mean and std
2025-03-29 11:48:44,164:INFO:Creating metrics dataframe
2025-03-29 11:48:44,166:INFO:Uploading results into container
2025-03-29 11:48:44,167:INFO:Uploading model into container now
2025-03-29 11:48:44,168:INFO:_master_model_container: 12
2025-03-29 11:48:44,168:INFO:_display_container: 2
2025-03-29 11:48:44,168:INFO:DecisionTreeRegressor(random_state=123)
2025-03-29 11:48:44,168:INFO:create_model() successfully completed......................................
2025-03-29 11:48:44,330:INFO:SubProcess create_model() end ==================================
2025-03-29 11:48:44,330:INFO:Creating metrics dataframe
2025-03-29 11:48:44,352:INFO:Initializing Random Forest Regressor
2025-03-29 11:48:44,353:INFO:Total runtime is 0.3695746064186096 minutes
2025-03-29 11:48:44,366:INFO:SubProcess create_model() called ==================================
2025-03-29 11:48:44,366:INFO:Initializing create_model()
2025-03-29 11:48:44,367:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC12DE190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 11:48:44,367:INFO:Checking exceptions
2025-03-29 11:48:44,367:INFO:Importing libraries
2025-03-29 11:48:44,367:INFO:Copying training dataset
2025-03-29 11:48:44,399:INFO:Defining folds
2025-03-29 11:48:44,399:INFO:Declaring metric variables
2025-03-29 11:48:44,407:INFO:Importing untrained model
2025-03-29 11:48:44,416:INFO:Random Forest Regressor Imported successfully
2025-03-29 11:48:44,461:INFO:Starting cross validation
2025-03-29 11:48:44,465:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 11:49:03,651:INFO:Calculating mean and std
2025-03-29 11:49:03,654:INFO:Creating metrics dataframe
2025-03-29 11:49:03,657:INFO:Uploading results into container
2025-03-29 11:49:03,658:INFO:Uploading model into container now
2025-03-29 11:49:03,659:INFO:_master_model_container: 13
2025-03-29 11:49:03,660:INFO:_display_container: 2
2025-03-29 11:49:03,661:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-03-29 11:49:03,661:INFO:create_model() successfully completed......................................
2025-03-29 11:49:03,827:INFO:SubProcess create_model() end ==================================
2025-03-29 11:49:03,827:INFO:Creating metrics dataframe
2025-03-29 11:49:03,841:INFO:Initializing Extra Trees Regressor
2025-03-29 11:49:03,841:INFO:Total runtime is 0.6943711717923482 minutes
2025-03-29 11:49:03,846:INFO:SubProcess create_model() called ==================================
2025-03-29 11:49:03,847:INFO:Initializing create_model()
2025-03-29 11:49:03,847:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC12DE190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 11:49:03,847:INFO:Checking exceptions
2025-03-29 11:49:03,847:INFO:Importing libraries
2025-03-29 11:49:03,848:INFO:Copying training dataset
2025-03-29 11:49:03,869:INFO:Defining folds
2025-03-29 11:49:03,869:INFO:Declaring metric variables
2025-03-29 11:49:03,876:INFO:Importing untrained model
2025-03-29 11:49:03,886:INFO:Extra Trees Regressor Imported successfully
2025-03-29 11:49:03,903:INFO:Starting cross validation
2025-03-29 11:49:03,908:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 11:49:16,506:INFO:Calculating mean and std
2025-03-29 11:49:16,508:INFO:Creating metrics dataframe
2025-03-29 11:49:16,512:INFO:Uploading results into container
2025-03-29 11:49:16,513:INFO:Uploading model into container now
2025-03-29 11:49:16,514:INFO:_master_model_container: 14
2025-03-29 11:49:16,514:INFO:_display_container: 2
2025-03-29 11:49:16,515:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-03-29 11:49:16,515:INFO:create_model() successfully completed......................................
2025-03-29 11:49:16,683:INFO:SubProcess create_model() end ==================================
2025-03-29 11:49:16,683:INFO:Creating metrics dataframe
2025-03-29 11:49:16,697:INFO:Initializing AdaBoost Regressor
2025-03-29 11:49:16,699:INFO:Total runtime is 0.9086611906687418 minutes
2025-03-29 11:49:16,703:INFO:SubProcess create_model() called ==================================
2025-03-29 11:49:16,704:INFO:Initializing create_model()
2025-03-29 11:49:16,704:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC12DE190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 11:49:16,705:INFO:Checking exceptions
2025-03-29 11:49:16,705:INFO:Importing libraries
2025-03-29 11:49:16,705:INFO:Copying training dataset
2025-03-29 11:49:16,725:INFO:Defining folds
2025-03-29 11:49:16,726:INFO:Declaring metric variables
2025-03-29 11:49:16,733:INFO:Importing untrained model
2025-03-29 11:49:16,742:INFO:AdaBoost Regressor Imported successfully
2025-03-29 11:49:16,756:INFO:Starting cross validation
2025-03-29 11:49:16,758:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 11:49:20,571:INFO:Calculating mean and std
2025-03-29 11:49:20,572:INFO:Creating metrics dataframe
2025-03-29 11:49:20,574:INFO:Uploading results into container
2025-03-29 11:49:20,575:INFO:Uploading model into container now
2025-03-29 11:49:20,576:INFO:_master_model_container: 15
2025-03-29 11:49:20,576:INFO:_display_container: 2
2025-03-29 11:49:20,576:INFO:AdaBoostRegressor(random_state=123)
2025-03-29 11:49:20,577:INFO:create_model() successfully completed......................................
2025-03-29 11:49:20,740:INFO:SubProcess create_model() end ==================================
2025-03-29 11:49:20,740:INFO:Creating metrics dataframe
2025-03-29 11:49:20,757:INFO:Initializing Gradient Boosting Regressor
2025-03-29 11:49:20,757:INFO:Total runtime is 0.9762971083323161 minutes
2025-03-29 11:49:20,762:INFO:SubProcess create_model() called ==================================
2025-03-29 11:49:20,763:INFO:Initializing create_model()
2025-03-29 11:49:20,763:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC12DE190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 11:49:20,763:INFO:Checking exceptions
2025-03-29 11:49:20,764:INFO:Importing libraries
2025-03-29 11:49:20,764:INFO:Copying training dataset
2025-03-29 11:49:20,782:INFO:Defining folds
2025-03-29 11:49:20,782:INFO:Declaring metric variables
2025-03-29 11:49:20,787:INFO:Importing untrained model
2025-03-29 11:49:20,793:INFO:Gradient Boosting Regressor Imported successfully
2025-03-29 11:49:20,806:INFO:Starting cross validation
2025-03-29 11:49:20,807:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 11:49:28,977:INFO:Calculating mean and std
2025-03-29 11:49:28,979:INFO:Creating metrics dataframe
2025-03-29 11:49:28,982:INFO:Uploading results into container
2025-03-29 11:49:28,982:INFO:Uploading model into container now
2025-03-29 11:49:28,984:INFO:_master_model_container: 16
2025-03-29 11:49:28,984:INFO:_display_container: 2
2025-03-29 11:49:28,984:INFO:GradientBoostingRegressor(random_state=123)
2025-03-29 11:49:28,984:INFO:create_model() successfully completed......................................
2025-03-29 11:49:29,145:INFO:SubProcess create_model() end ==================================
2025-03-29 11:49:29,145:INFO:Creating metrics dataframe
2025-03-29 11:49:29,168:INFO:Initializing Light Gradient Boosting Machine
2025-03-29 11:49:29,168:INFO:Total runtime is 1.1164828062057495 minutes
2025-03-29 11:49:29,178:INFO:SubProcess create_model() called ==================================
2025-03-29 11:49:29,179:INFO:Initializing create_model()
2025-03-29 11:49:29,180:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC12DE190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 11:49:29,181:INFO:Checking exceptions
2025-03-29 11:49:29,181:INFO:Importing libraries
2025-03-29 11:49:29,181:INFO:Copying training dataset
2025-03-29 11:49:29,205:INFO:Defining folds
2025-03-29 11:49:29,205:INFO:Declaring metric variables
2025-03-29 11:49:29,211:INFO:Importing untrained model
2025-03-29 11:49:29,219:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-29 11:49:29,230:INFO:Starting cross validation
2025-03-29 11:49:29,233:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 11:49:31,486:INFO:Calculating mean and std
2025-03-29 11:49:31,488:INFO:Creating metrics dataframe
2025-03-29 11:49:31,491:INFO:Uploading results into container
2025-03-29 11:49:31,492:INFO:Uploading model into container now
2025-03-29 11:49:31,492:INFO:_master_model_container: 17
2025-03-29 11:49:31,493:INFO:_display_container: 2
2025-03-29 11:49:31,495:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-03-29 11:49:31,495:INFO:create_model() successfully completed......................................
2025-03-29 11:49:31,678:INFO:SubProcess create_model() end ==================================
2025-03-29 11:49:31,678:INFO:Creating metrics dataframe
2025-03-29 11:49:31,703:INFO:Initializing Dummy Regressor
2025-03-29 11:49:31,703:INFO:Total runtime is 1.1587403615315754 minutes
2025-03-29 11:49:31,711:INFO:SubProcess create_model() called ==================================
2025-03-29 11:49:31,711:INFO:Initializing create_model()
2025-03-29 11:49:31,712:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC12DE190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 11:49:31,712:INFO:Checking exceptions
2025-03-29 11:49:31,712:INFO:Importing libraries
2025-03-29 11:49:31,714:INFO:Copying training dataset
2025-03-29 11:49:31,740:INFO:Defining folds
2025-03-29 11:49:31,741:INFO:Declaring metric variables
2025-03-29 11:49:31,749:INFO:Importing untrained model
2025-03-29 11:49:31,760:INFO:Dummy Regressor Imported successfully
2025-03-29 11:49:31,784:INFO:Starting cross validation
2025-03-29 11:49:31,788:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 11:49:32,249:INFO:Calculating mean and std
2025-03-29 11:49:32,251:INFO:Creating metrics dataframe
2025-03-29 11:49:32,256:INFO:Uploading results into container
2025-03-29 11:49:32,257:INFO:Uploading model into container now
2025-03-29 11:49:32,259:INFO:_master_model_container: 18
2025-03-29 11:49:32,259:INFO:_display_container: 2
2025-03-29 11:49:32,260:INFO:DummyRegressor()
2025-03-29 11:49:32,260:INFO:create_model() successfully completed......................................
2025-03-29 11:49:32,463:INFO:SubProcess create_model() end ==================================
2025-03-29 11:49:32,463:INFO:Creating metrics dataframe
2025-03-29 11:49:32,486:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-03-29 11:49:32,499:INFO:Initializing create_model()
2025-03-29 11:49:32,499:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 11:49:32,499:INFO:Checking exceptions
2025-03-29 11:49:32,502:INFO:Importing libraries
2025-03-29 11:49:32,502:INFO:Copying training dataset
2025-03-29 11:49:32,518:INFO:Defining folds
2025-03-29 11:49:32,519:INFO:Declaring metric variables
2025-03-29 11:49:32,519:INFO:Importing untrained model
2025-03-29 11:49:32,519:INFO:Declaring custom model
2025-03-29 11:49:32,520:INFO:Linear Regression Imported successfully
2025-03-29 11:49:32,522:INFO:Cross validation set to False
2025-03-29 11:49:32,522:INFO:Fitting Model
2025-03-29 11:49:32,634:INFO:LinearRegression(n_jobs=-1)
2025-03-29 11:49:32,634:INFO:create_model() successfully completed......................................
2025-03-29 11:49:32,855:INFO:_master_model_container: 18
2025-03-29 11:49:32,855:INFO:_display_container: 2
2025-03-29 11:49:32,856:INFO:LinearRegression(n_jobs=-1)
2025-03-29 11:49:32,856:INFO:compare_models() successfully completed......................................
2025-03-29 11:52:59,145:INFO:Initializing plot_model()
2025-03-29 11:52:59,146:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=LinearRegression(n_jobs=-1), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-03-29 11:52:59,146:INFO:Checking exceptions
2025-03-29 11:52:59,158:INFO:Preloading libraries
2025-03-29 11:52:59,158:INFO:Copying training dataset
2025-03-29 11:52:59,159:INFO:Plot type: residuals
2025-03-29 11:52:59,436:INFO:Fitting Model
2025-03-29 11:52:59,443:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but LinearRegression was fitted with feature names
  warnings.warn(

2025-03-29 11:52:59,513:INFO:Scoring test/hold-out set
2025-03-29 11:53:00,332:INFO:Visual Rendered Successfully
2025-03-29 11:53:00,531:INFO:plot_model() successfully completed......................................
2025-03-29 11:54:16,728:INFO:Initializing tune_model()
2025-03-29 11:54:16,728:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, n_iter=200, custom_grid=None, optimize=MAE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-03-29 11:54:16,728:INFO:Checking exceptions
2025-03-29 11:54:16,757:INFO:Copying training dataset
2025-03-29 11:54:16,770:INFO:Checking base model
2025-03-29 11:54:16,771:INFO:Base model : Linear Regression
2025-03-29 11:54:16,777:INFO:Declaring metric variables
2025-03-29 11:54:16,783:INFO:Defining Hyperparameters
2025-03-29 11:54:16,784:INFO:200 is bigger than total combinations 2, setting search algorithm to grid
2025-03-29 11:54:16,985:INFO:Tuning with n_jobs=-1
2025-03-29 11:54:16,985:INFO:Initializing GridSearchCV
2025-03-29 11:54:17,912:INFO:best_params: {'actual_estimator__fit_intercept': False}
2025-03-29 11:54:17,913:INFO:Hyperparameter search completed
2025-03-29 11:54:17,913:INFO:SubProcess create_model() called ==================================
2025-03-29 11:54:17,914:INFO:Initializing create_model()
2025-03-29 11:54:17,914:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FBDB1F210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'fit_intercept': False})
2025-03-29 11:54:17,914:INFO:Checking exceptions
2025-03-29 11:54:17,914:INFO:Importing libraries
2025-03-29 11:54:17,914:INFO:Copying training dataset
2025-03-29 11:54:17,929:INFO:Defining folds
2025-03-29 11:54:17,929:INFO:Declaring metric variables
2025-03-29 11:54:17,933:INFO:Importing untrained model
2025-03-29 11:54:17,934:INFO:Declaring custom model
2025-03-29 11:54:17,940:INFO:Linear Regression Imported successfully
2025-03-29 11:54:17,948:INFO:Starting cross validation
2025-03-29 11:54:17,950:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 11:54:18,456:INFO:Calculating mean and std
2025-03-29 11:54:18,459:INFO:Creating metrics dataframe
2025-03-29 11:54:18,471:INFO:Finalizing model
2025-03-29 11:54:18,611:INFO:Uploading results into container
2025-03-29 11:54:18,612:INFO:Uploading model into container now
2025-03-29 11:54:18,613:INFO:_master_model_container: 19
2025-03-29 11:54:18,613:INFO:_display_container: 3
2025-03-29 11:54:18,614:INFO:LinearRegression(fit_intercept=False, n_jobs=-1)
2025-03-29 11:54:18,614:INFO:create_model() successfully completed......................................
2025-03-29 11:54:18,784:INFO:SubProcess create_model() end ==================================
2025-03-29 11:54:18,784:INFO:choose_better activated
2025-03-29 11:54:18,791:INFO:SubProcess create_model() called ==================================
2025-03-29 11:54:18,791:INFO:Initializing create_model()
2025-03-29 11:54:18,791:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 11:54:18,792:INFO:Checking exceptions
2025-03-29 11:54:18,795:INFO:Importing libraries
2025-03-29 11:54:18,795:INFO:Copying training dataset
2025-03-29 11:54:18,813:INFO:Defining folds
2025-03-29 11:54:18,813:INFO:Declaring metric variables
2025-03-29 11:54:18,814:INFO:Importing untrained model
2025-03-29 11:54:18,814:INFO:Declaring custom model
2025-03-29 11:54:18,814:INFO:Linear Regression Imported successfully
2025-03-29 11:54:18,815:INFO:Starting cross validation
2025-03-29 11:54:18,817:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 11:54:19,278:INFO:Calculating mean and std
2025-03-29 11:54:19,280:INFO:Creating metrics dataframe
2025-03-29 11:54:19,284:INFO:Finalizing model
2025-03-29 11:54:19,457:INFO:Uploading results into container
2025-03-29 11:54:19,458:INFO:Uploading model into container now
2025-03-29 11:54:19,458:INFO:_master_model_container: 20
2025-03-29 11:54:19,458:INFO:_display_container: 4
2025-03-29 11:54:19,458:INFO:LinearRegression(n_jobs=-1)
2025-03-29 11:54:19,459:INFO:create_model() successfully completed......................................
2025-03-29 11:54:19,620:INFO:SubProcess create_model() end ==================================
2025-03-29 11:54:19,621:INFO:LinearRegression(n_jobs=-1) result for MAE is 0.0002
2025-03-29 11:54:19,621:INFO:LinearRegression(fit_intercept=False, n_jobs=-1) result for MAE is 0.0002
2025-03-29 11:54:19,622:INFO:LinearRegression(n_jobs=-1) is best model
2025-03-29 11:54:19,622:INFO:choose_better completed
2025-03-29 11:54:19,622:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-03-29 11:54:19,640:INFO:_master_model_container: 20
2025-03-29 11:54:19,641:INFO:_display_container: 3
2025-03-29 11:54:19,641:INFO:LinearRegression(n_jobs=-1)
2025-03-29 11:54:19,641:INFO:tune_model() successfully completed......................................
2025-03-29 11:55:38,478:INFO:Initializing compare_models()
2025-03-29 11:55:38,479:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, include=[LinearRegression(n_jobs=-1), LinearRegression(n_jobs=-1)], exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, 'include': [LinearRegression(n_jobs=-1), LinearRegression(n_jobs=-1)], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-03-29 11:55:38,479:INFO:Checking exceptions
2025-03-29 11:55:38,486:INFO:Preparing display monitor
2025-03-29 11:55:38,545:INFO:Initializing custom model Linear Regression
2025-03-29 11:55:38,545:INFO:Total runtime is 0.0 minutes
2025-03-29 11:55:38,553:INFO:SubProcess create_model() called ==================================
2025-03-29 11:55:38,557:INFO:Initializing create_model()
2025-03-29 11:55:38,558:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC08E05D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 11:55:38,558:INFO:Checking exceptions
2025-03-29 11:55:38,558:INFO:Importing libraries
2025-03-29 11:55:38,558:INFO:Copying training dataset
2025-03-29 11:55:38,580:INFO:Defining folds
2025-03-29 11:55:38,581:INFO:Declaring metric variables
2025-03-29 11:55:38,587:INFO:Importing untrained model
2025-03-29 11:55:38,587:INFO:Declaring custom model
2025-03-29 11:55:38,593:INFO:Linear Regression Imported successfully
2025-03-29 11:55:38,608:INFO:Starting cross validation
2025-03-29 11:55:38,613:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 11:55:39,134:INFO:Calculating mean and std
2025-03-29 11:55:39,135:INFO:Creating metrics dataframe
2025-03-29 11:55:39,139:INFO:Uploading results into container
2025-03-29 11:55:39,140:INFO:Uploading model into container now
2025-03-29 11:55:39,141:INFO:_master_model_container: 21
2025-03-29 11:55:39,141:INFO:_display_container: 4
2025-03-29 11:55:39,141:INFO:LinearRegression(n_jobs=-1)
2025-03-29 11:55:39,141:INFO:create_model() successfully completed......................................
2025-03-29 11:55:39,315:INFO:SubProcess create_model() end ==================================
2025-03-29 11:55:39,315:INFO:Creating metrics dataframe
2025-03-29 11:55:39,326:INFO:Initializing custom model Linear Regression
2025-03-29 11:55:39,326:INFO:Total runtime is 0.013016907374064128 minutes
2025-03-29 11:55:39,331:INFO:SubProcess create_model() called ==================================
2025-03-29 11:55:39,333:INFO:Initializing create_model()
2025-03-29 11:55:39,333:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC08E05D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 11:55:39,333:INFO:Checking exceptions
2025-03-29 11:55:39,333:INFO:Importing libraries
2025-03-29 11:55:39,334:INFO:Copying training dataset
2025-03-29 11:55:39,350:INFO:Defining folds
2025-03-29 11:55:39,350:INFO:Declaring metric variables
2025-03-29 11:55:39,355:INFO:Importing untrained model
2025-03-29 11:55:39,355:INFO:Declaring custom model
2025-03-29 11:55:39,361:INFO:Linear Regression Imported successfully
2025-03-29 11:55:39,370:INFO:Starting cross validation
2025-03-29 11:55:39,373:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 11:55:39,813:INFO:Calculating mean and std
2025-03-29 11:55:39,814:INFO:Creating metrics dataframe
2025-03-29 11:55:39,818:INFO:Uploading results into container
2025-03-29 11:55:39,819:INFO:Uploading model into container now
2025-03-29 11:55:39,819:INFO:_master_model_container: 22
2025-03-29 11:55:39,819:INFO:_display_container: 4
2025-03-29 11:55:39,820:INFO:LinearRegression(n_jobs=-1)
2025-03-29 11:55:39,820:INFO:create_model() successfully completed......................................
2025-03-29 11:55:39,984:INFO:SubProcess create_model() end ==================================
2025-03-29 11:55:39,984:INFO:Creating metrics dataframe
2025-03-29 11:55:40,002:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-03-29 11:55:40,019:INFO:Initializing create_model()
2025-03-29 11:55:40,019:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 11:55:40,019:INFO:Checking exceptions
2025-03-29 11:55:40,022:INFO:Importing libraries
2025-03-29 11:55:40,023:INFO:Copying training dataset
2025-03-29 11:55:40,044:INFO:Defining folds
2025-03-29 11:55:40,044:INFO:Declaring metric variables
2025-03-29 11:55:40,044:INFO:Importing untrained model
2025-03-29 11:55:40,044:INFO:Declaring custom model
2025-03-29 11:55:40,045:INFO:Linear Regression Imported successfully
2025-03-29 11:55:40,046:INFO:Cross validation set to False
2025-03-29 11:55:40,047:INFO:Fitting Model
2025-03-29 11:55:40,142:INFO:LinearRegression(n_jobs=-1)
2025-03-29 11:55:40,142:INFO:create_model() successfully completed......................................
2025-03-29 11:55:40,338:INFO:_master_model_container: 22
2025-03-29 11:55:40,338:INFO:_display_container: 4
2025-03-29 11:55:40,339:INFO:LinearRegression(n_jobs=-1)
2025-03-29 11:55:40,339:INFO:compare_models() successfully completed......................................
2025-03-29 11:55:44,510:INFO:Initializing predict_model()
2025-03-29 11:55:44,510:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=LinearRegression(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018FBDB116C0>)
2025-03-29 11:55:44,510:INFO:Checking exceptions
2025-03-29 11:55:44,510:INFO:Preloading libraries
2025-03-29 11:55:44,728:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-29 11:56:25,685:INFO:Initializing plot_model()
2025-03-29 11:56:25,686:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=LinearRegression(n_jobs=-1), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-03-29 11:56:25,686:INFO:Checking exceptions
2025-03-29 11:56:25,698:INFO:Preloading libraries
2025-03-29 11:56:25,698:INFO:Copying training dataset
2025-03-29 11:56:25,698:INFO:Plot type: feature
2025-03-29 11:56:25,987:INFO:Visual Rendered Successfully
2025-03-29 11:56:26,165:INFO:plot_model() successfully completed......................................
2025-03-29 11:56:49,119:INFO:Initializing plot_model()
2025-03-29 11:56:49,120:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=LinearRegression(n_jobs=-1), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-03-29 11:56:49,120:INFO:Checking exceptions
2025-03-29 11:56:49,132:INFO:Preloading libraries
2025-03-29 11:56:49,133:INFO:Copying training dataset
2025-03-29 11:56:49,133:INFO:Plot type: residuals
2025-03-29 11:56:49,389:INFO:Fitting Model
2025-03-29 11:56:49,389:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but LinearRegression was fitted with feature names
  warnings.warn(

2025-03-29 11:56:49,436:INFO:Scoring test/hold-out set
2025-03-29 11:56:49,968:INFO:Visual Rendered Successfully
2025-03-29 11:56:50,137:INFO:plot_model() successfully completed......................................
2025-03-29 11:57:19,392:INFO:Initializing plot_model()
2025-03-29 11:57:19,393:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=LinearRegression(n_jobs=-1), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-03-29 11:57:19,393:INFO:Checking exceptions
2025-03-29 11:57:19,404:INFO:Preloading libraries
2025-03-29 11:57:19,405:INFO:Copying training dataset
2025-03-29 11:57:19,405:INFO:Plot type: error
2025-03-29 11:57:19,619:INFO:Fitting Model
2025-03-29 11:57:19,620:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but LinearRegression was fitted with feature names
  warnings.warn(

2025-03-29 11:57:19,620:INFO:Scoring test/hold-out set
2025-03-29 11:57:19,960:INFO:Visual Rendered Successfully
2025-03-29 11:57:20,147:INFO:plot_model() successfully completed......................................
2025-03-29 11:58:47,297:INFO:Initializing finalize_model()
2025-03-29 11:58:47,297:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=LinearRegression(n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-29 11:58:47,297:INFO:Finalizing LinearRegression(n_jobs=-1)
2025-03-29 11:58:47,308:INFO:Initializing create_model()
2025-03-29 11:58:47,308:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 11:58:47,308:INFO:Checking exceptions
2025-03-29 11:58:47,311:INFO:Importing libraries
2025-03-29 11:58:47,311:INFO:Copying training dataset
2025-03-29 11:58:47,313:INFO:Defining folds
2025-03-29 11:58:47,313:INFO:Declaring metric variables
2025-03-29 11:58:47,313:INFO:Importing untrained model
2025-03-29 11:58:47,313:INFO:Declaring custom model
2025-03-29 11:58:47,314:INFO:Linear Regression Imported successfully
2025-03-29 11:58:47,316:INFO:Cross validation set to False
2025-03-29 11:58:47,316:INFO:Fitting Model
2025-03-29 11:58:47,470:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo',
                                             '10 km Czas', '10 km Tempo',
                                             '15 km Czas', '15 km Tempo',
                                             '20 km Czas', '20 km Tempo',
                                             'Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć', 'Kategoria wiekowa'],
                                    transformer=SimpleImputer(strategy='most_f...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Kategoria wiekowa'],
                                    transformer=OneHotEncoder(cols=['Kategoria '
                                                                    'wiekowa'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-29 11:58:47,472:INFO:create_model() successfully completed......................................
2025-03-29 11:58:47,640:INFO:_master_model_container: 22
2025-03-29 11:58:47,640:INFO:_display_container: 5
2025-03-29 11:58:47,679:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo',
                                             '10 km Czas', '10 km Tempo',
                                             '15 km Czas', '15 km Tempo',
                                             '20 km Czas', '20 km Tempo',
                                             'Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć', 'Kategoria wiekowa'],
                                    transformer=SimpleImputer(strategy='most_f...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Kategoria wiekowa'],
                                    transformer=OneHotEncoder(cols=['Kategoria '
                                                                    'wiekowa'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-29 11:58:47,679:INFO:finalize_model() successfully completed......................................
2025-03-29 12:00:15,819:INFO:Initializing save_model()
2025-03-29 12:00:15,820:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo',
                                             '10 km Czas', '10 km Tempo',
                                             '15 km Czas', '15 km Tempo',
                                             '20 km Czas', '20 km Tempo',
                                             'Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć', 'Kategoria wiekowa'],
                                    transformer=SimpleImputer(strategy='most_f...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Kategoria wiekowa'],
                                    transformer=OneHotEncoder(cols=['Kategoria '
                                                                    'wiekowa'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), model_name=lr_best_model_halfmarathon_time, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\kgust\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo',
                                             '10 km Czas', '10 km Tempo',
                                             '15 km Czas', '15 km Tempo',
                                             '20 km Czas', '20 km Tempo',
                                             'Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć', 'Kategoria wiekowa'],
                                    tr...
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Kategoria wiekowa'],
                                    transformer=OneHotEncoder(cols=['Kategoria '
                                                                    'wiekowa'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-03-29 12:00:15,820:INFO:Adding model into prep_pipe
2025-03-29 12:00:15,820:WARNING:Only Model saved as it was a pipeline.
2025-03-29 12:00:15,832:INFO:lr_best_model_halfmarathon_time.pkl saved in current working directory
2025-03-29 12:00:15,865:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo',
                                             '10 km Czas', '10 km Tempo',
                                             '15 km Czas', '15 km Tempo',
                                             '20 km Czas', '20 km Tempo',
                                             'Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć', 'Kategoria wiekowa'],
                                    transformer=SimpleImputer(strategy='most_f...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Kategoria wiekowa'],
                                    transformer=OneHotEncoder(cols=['Kategoria '
                                                                    'wiekowa'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2025-03-29 12:00:15,865:INFO:save_model() successfully completed......................................
2025-03-29 12:01:13,887:INFO:Initializing predict_model()
2025-03-29 12:01:13,888:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBDF160D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo',
                                             '10 km Czas', '10 km Tempo',
                                             '15 km Czas', '15 km Tempo',
                                             '20 km Czas', '20 km Tempo',
                                             'Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć', 'Kategoria wiekowa'],
                                    transformer=SimpleImputer(strategy='most_f...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Kategoria wiekowa'],
                                    transformer=OneHotEncoder(cols=['Kategoria '
                                                                    'wiekowa'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018FC097F9C0>)
2025-03-29 12:01:13,888:INFO:Checking exceptions
2025-03-29 12:01:13,888:INFO:Preloading libraries
2025-03-29 12:01:13,893:INFO:Set up data.
2025-03-29 12:01:13,900:INFO:Set up index.
2025-03-29 14:21:15,165:INFO:PyCaret RegressionExperiment
2025-03-29 14:21:15,165:INFO:Logging name: reg-default-name
2025-03-29 14:21:15,165:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-29 14:21:15,165:INFO:version 3.3.2
2025-03-29 14:21:15,165:INFO:Initializing setup()
2025-03-29 14:21:15,165:INFO:self.USI: 2d1c
2025-03-29 14:21:15,165:INFO:self._variable_keys: {'_ml_usecase', 'X_train', 'transform_target_param', 'y_test', 'fold_generator', 'n_jobs_param', 'html_param', 'fold_shuffle_param', 'log_plots_param', '_available_plots', 'USI', 'exp_name_log', 'target_param', 'exp_id', 'y', 'seed', 'fold_groups_param', 'idx', 'y_train', 'gpu_n_jobs_param', 'X', 'X_test', 'pipeline', 'memory', 'data', 'gpu_param', 'logging_param'}
2025-03-29 14:21:15,165:INFO:Checking environment
2025-03-29 14:21:15,166:INFO:python_version: 3.11.11
2025-03-29 14:21:15,166:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-03-29 14:21:15,166:INFO:machine: AMD64
2025-03-29 14:21:15,166:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-29 14:21:15,172:INFO:Memory: svmem(total=16943763456, available=5209829376, percent=69.3, used=11733934080, free=5209829376)
2025-03-29 14:21:15,172:INFO:Physical Core: 4
2025-03-29 14:21:15,172:INFO:Logical Core: 8
2025-03-29 14:21:15,172:INFO:Checking libraries
2025-03-29 14:21:15,173:INFO:System:
2025-03-29 14:21:15,173:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-03-29 14:21:15,173:INFO:executable: c:\Users\kgust\miniconda3\envs\halfmarathon_time\python.exe
2025-03-29 14:21:15,173:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-29 14:21:15,173:INFO:PyCaret required dependencies:
2025-03-29 14:21:15,174:INFO:                 pip: 25.0
2025-03-29 14:21:15,174:INFO:          setuptools: 75.8.0
2025-03-29 14:21:15,174:INFO:             pycaret: 3.3.2
2025-03-29 14:21:15,174:INFO:             IPython: 9.0.2
2025-03-29 14:21:15,174:INFO:          ipywidgets: 8.1.5
2025-03-29 14:21:15,174:INFO:                tqdm: 4.67.1
2025-03-29 14:21:15,174:INFO:               numpy: 1.26.4
2025-03-29 14:21:15,175:INFO:              pandas: 2.1.4
2025-03-29 14:21:15,175:INFO:              jinja2: 3.1.6
2025-03-29 14:21:15,175:INFO:               scipy: 1.11.4
2025-03-29 14:21:15,175:INFO:              joblib: 1.3.2
2025-03-29 14:21:15,175:INFO:             sklearn: 1.4.2
2025-03-29 14:21:15,175:INFO:                pyod: 2.0.4
2025-03-29 14:21:15,175:INFO:            imblearn: 0.13.0
2025-03-29 14:21:15,175:INFO:   category_encoders: 2.7.0
2025-03-29 14:21:15,175:INFO:            lightgbm: 4.6.0
2025-03-29 14:21:15,175:INFO:               numba: 0.61.0
2025-03-29 14:21:15,175:INFO:            requests: 2.32.3
2025-03-29 14:21:15,176:INFO:          matplotlib: 3.7.5
2025-03-29 14:21:15,176:INFO:          scikitplot: 0.3.7
2025-03-29 14:21:15,176:INFO:         yellowbrick: 1.5
2025-03-29 14:21:15,176:INFO:              plotly: 5.24.1
2025-03-29 14:21:15,176:INFO:    plotly-resampler: Not installed
2025-03-29 14:21:15,176:INFO:             kaleido: 0.2.1
2025-03-29 14:21:15,176:INFO:           schemdraw: 0.15
2025-03-29 14:21:15,176:INFO:         statsmodels: 0.14.4
2025-03-29 14:21:15,176:INFO:              sktime: 0.26.0
2025-03-29 14:21:15,176:INFO:               tbats: 1.1.3
2025-03-29 14:21:15,176:INFO:            pmdarima: 2.0.4
2025-03-29 14:21:15,177:INFO:              psutil: 7.0.0
2025-03-29 14:21:15,177:INFO:          markupsafe: 3.0.2
2025-03-29 14:21:15,177:INFO:             pickle5: Not installed
2025-03-29 14:21:15,177:INFO:         cloudpickle: 3.1.1
2025-03-29 14:21:15,177:INFO:         deprecation: 2.1.0
2025-03-29 14:21:15,177:INFO:              xxhash: 3.5.0
2025-03-29 14:21:15,177:INFO:           wurlitzer: Not installed
2025-03-29 14:21:15,177:INFO:PyCaret optional dependencies:
2025-03-29 14:21:15,177:INFO:                shap: Not installed
2025-03-29 14:21:15,177:INFO:           interpret: Not installed
2025-03-29 14:21:15,177:INFO:                umap: Not installed
2025-03-29 14:21:15,178:INFO:     ydata_profiling: Not installed
2025-03-29 14:21:15,178:INFO:  explainerdashboard: Not installed
2025-03-29 14:21:15,178:INFO:             autoviz: Not installed
2025-03-29 14:21:15,178:INFO:           fairlearn: Not installed
2025-03-29 14:21:15,178:INFO:          deepchecks: Not installed
2025-03-29 14:21:15,178:INFO:             xgboost: Not installed
2025-03-29 14:21:15,178:INFO:            catboost: Not installed
2025-03-29 14:21:15,178:INFO:              kmodes: Not installed
2025-03-29 14:21:15,178:INFO:             mlxtend: Not installed
2025-03-29 14:21:15,178:INFO:       statsforecast: Not installed
2025-03-29 14:21:15,179:INFO:        tune_sklearn: Not installed
2025-03-29 14:21:15,179:INFO:                 ray: Not installed
2025-03-29 14:21:15,179:INFO:            hyperopt: Not installed
2025-03-29 14:21:15,179:INFO:              optuna: Not installed
2025-03-29 14:21:15,179:INFO:               skopt: Not installed
2025-03-29 14:21:15,179:INFO:              mlflow: Not installed
2025-03-29 14:21:15,179:INFO:              gradio: Not installed
2025-03-29 14:21:15,179:INFO:             fastapi: Not installed
2025-03-29 14:21:15,179:INFO:             uvicorn: Not installed
2025-03-29 14:21:15,179:INFO:              m2cgen: Not installed
2025-03-29 14:21:15,179:INFO:           evidently: Not installed
2025-03-29 14:21:15,180:INFO:               fugue: Not installed
2025-03-29 14:21:15,180:INFO:           streamlit: 1.44.0
2025-03-29 14:21:15,180:INFO:             prophet: Not installed
2025-03-29 14:21:15,180:INFO:None
2025-03-29 14:21:15,180:INFO:Set up data.
2025-03-29 14:21:15,199:INFO:Set up folding strategy.
2025-03-29 14:21:15,199:INFO:Set up train/test split.
2025-03-29 14:21:15,210:INFO:Set up index.
2025-03-29 14:21:15,211:INFO:Assigning column types.
2025-03-29 14:29:36,781:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pandas\plotting\_matplotlib\core.py:1266: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  scatter = ax.scatter(

2025-03-29 14:29:43,387:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pandas\plotting\_matplotlib\core.py:1266: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  scatter = ax.scatter(

2025-03-29 14:29:47,194:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pandas\plotting\_matplotlib\core.py:1266: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  scatter = ax.scatter(

2025-03-29 14:33:03,643:INFO:PyCaret RegressionExperiment
2025-03-29 14:33:03,644:INFO:Logging name: reg-default-name
2025-03-29 14:33:03,644:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-29 14:33:03,644:INFO:version 3.3.2
2025-03-29 14:33:03,644:INFO:Initializing setup()
2025-03-29 14:33:03,644:INFO:self.USI: 5ce5
2025-03-29 14:33:03,644:INFO:self._variable_keys: {'_ml_usecase', 'X_train', 'transform_target_param', 'y_test', 'fold_generator', 'n_jobs_param', 'html_param', 'fold_shuffle_param', 'log_plots_param', '_available_plots', 'USI', 'exp_name_log', 'target_param', 'exp_id', 'y', 'seed', 'fold_groups_param', 'idx', 'y_train', 'gpu_n_jobs_param', 'X', 'X_test', 'pipeline', 'memory', 'data', 'gpu_param', 'logging_param'}
2025-03-29 14:33:03,644:INFO:Checking environment
2025-03-29 14:33:03,644:INFO:python_version: 3.11.11
2025-03-29 14:33:03,644:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-03-29 14:33:03,644:INFO:machine: AMD64
2025-03-29 14:33:03,645:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-29 14:33:03,649:INFO:Memory: svmem(total=16943763456, available=4887760896, percent=71.2, used=12056002560, free=4887760896)
2025-03-29 14:33:03,650:INFO:Physical Core: 4
2025-03-29 14:33:03,650:INFO:Logical Core: 8
2025-03-29 14:33:03,650:INFO:Checking libraries
2025-03-29 14:33:03,650:INFO:System:
2025-03-29 14:33:03,650:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-03-29 14:33:03,650:INFO:executable: c:\Users\kgust\miniconda3\envs\halfmarathon_time\python.exe
2025-03-29 14:33:03,650:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-29 14:33:03,650:INFO:PyCaret required dependencies:
2025-03-29 14:33:03,650:INFO:                 pip: 25.0
2025-03-29 14:33:03,650:INFO:          setuptools: 75.8.0
2025-03-29 14:33:03,650:INFO:             pycaret: 3.3.2
2025-03-29 14:33:03,650:INFO:             IPython: 9.0.2
2025-03-29 14:33:03,650:INFO:          ipywidgets: 8.1.5
2025-03-29 14:33:03,650:INFO:                tqdm: 4.67.1
2025-03-29 14:33:03,650:INFO:               numpy: 1.26.4
2025-03-29 14:33:03,650:INFO:              pandas: 2.1.4
2025-03-29 14:33:03,650:INFO:              jinja2: 3.1.6
2025-03-29 14:33:03,651:INFO:               scipy: 1.11.4
2025-03-29 14:33:03,651:INFO:              joblib: 1.3.2
2025-03-29 14:33:03,651:INFO:             sklearn: 1.4.2
2025-03-29 14:33:03,651:INFO:                pyod: 2.0.4
2025-03-29 14:33:03,651:INFO:            imblearn: 0.13.0
2025-03-29 14:33:03,651:INFO:   category_encoders: 2.7.0
2025-03-29 14:33:03,651:INFO:            lightgbm: 4.6.0
2025-03-29 14:33:03,651:INFO:               numba: 0.61.0
2025-03-29 14:33:03,651:INFO:            requests: 2.32.3
2025-03-29 14:33:03,651:INFO:          matplotlib: 3.7.5
2025-03-29 14:33:03,651:INFO:          scikitplot: 0.3.7
2025-03-29 14:33:03,651:INFO:         yellowbrick: 1.5
2025-03-29 14:33:03,651:INFO:              plotly: 5.24.1
2025-03-29 14:33:03,651:INFO:    plotly-resampler: Not installed
2025-03-29 14:33:03,651:INFO:             kaleido: 0.2.1
2025-03-29 14:33:03,651:INFO:           schemdraw: 0.15
2025-03-29 14:33:03,651:INFO:         statsmodels: 0.14.4
2025-03-29 14:33:03,651:INFO:              sktime: 0.26.0
2025-03-29 14:33:03,651:INFO:               tbats: 1.1.3
2025-03-29 14:33:03,651:INFO:            pmdarima: 2.0.4
2025-03-29 14:33:03,651:INFO:              psutil: 7.0.0
2025-03-29 14:33:03,651:INFO:          markupsafe: 3.0.2
2025-03-29 14:33:03,652:INFO:             pickle5: Not installed
2025-03-29 14:33:03,652:INFO:         cloudpickle: 3.1.1
2025-03-29 14:33:03,652:INFO:         deprecation: 2.1.0
2025-03-29 14:33:03,652:INFO:              xxhash: 3.5.0
2025-03-29 14:33:03,652:INFO:           wurlitzer: Not installed
2025-03-29 14:33:03,652:INFO:PyCaret optional dependencies:
2025-03-29 14:33:03,652:INFO:                shap: Not installed
2025-03-29 14:33:03,652:INFO:           interpret: Not installed
2025-03-29 14:33:03,652:INFO:                umap: Not installed
2025-03-29 14:33:03,652:INFO:     ydata_profiling: Not installed
2025-03-29 14:33:03,652:INFO:  explainerdashboard: Not installed
2025-03-29 14:33:03,652:INFO:             autoviz: Not installed
2025-03-29 14:33:03,652:INFO:           fairlearn: Not installed
2025-03-29 14:33:03,652:INFO:          deepchecks: Not installed
2025-03-29 14:33:03,652:INFO:             xgboost: Not installed
2025-03-29 14:33:03,652:INFO:            catboost: Not installed
2025-03-29 14:33:03,652:INFO:              kmodes: Not installed
2025-03-29 14:33:03,652:INFO:             mlxtend: Not installed
2025-03-29 14:33:03,652:INFO:       statsforecast: Not installed
2025-03-29 14:33:03,653:INFO:        tune_sklearn: Not installed
2025-03-29 14:33:03,653:INFO:                 ray: Not installed
2025-03-29 14:33:03,653:INFO:            hyperopt: Not installed
2025-03-29 14:33:03,653:INFO:              optuna: Not installed
2025-03-29 14:33:03,653:INFO:               skopt: Not installed
2025-03-29 14:33:03,653:INFO:              mlflow: Not installed
2025-03-29 14:33:03,653:INFO:              gradio: Not installed
2025-03-29 14:33:03,653:INFO:             fastapi: Not installed
2025-03-29 14:33:03,653:INFO:             uvicorn: Not installed
2025-03-29 14:33:03,653:INFO:              m2cgen: Not installed
2025-03-29 14:33:03,653:INFO:           evidently: Not installed
2025-03-29 14:33:03,653:INFO:               fugue: Not installed
2025-03-29 14:33:03,653:INFO:           streamlit: 1.44.0
2025-03-29 14:33:03,653:INFO:             prophet: Not installed
2025-03-29 14:33:03,653:INFO:None
2025-03-29 14:33:03,653:INFO:Set up data.
2025-03-29 14:33:03,669:INFO:Set up folding strategy.
2025-03-29 14:33:03,669:INFO:Set up train/test split.
2025-03-29 14:33:03,678:INFO:Set up index.
2025-03-29 14:33:03,679:INFO:Assigning column types.
2025-03-29 14:33:51,165:INFO:PyCaret RegressionExperiment
2025-03-29 14:33:51,165:INFO:Logging name: reg-default-name
2025-03-29 14:33:51,165:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-29 14:33:51,165:INFO:version 3.3.2
2025-03-29 14:33:51,165:INFO:Initializing setup()
2025-03-29 14:33:51,165:INFO:self.USI: 0890
2025-03-29 14:33:51,165:INFO:self._variable_keys: {'_ml_usecase', 'X_train', 'transform_target_param', 'y_test', 'fold_generator', 'n_jobs_param', 'html_param', 'fold_shuffle_param', 'log_plots_param', '_available_plots', 'USI', 'exp_name_log', 'target_param', 'exp_id', 'y', 'seed', 'fold_groups_param', 'idx', 'y_train', 'gpu_n_jobs_param', 'X', 'X_test', 'pipeline', 'memory', 'data', 'gpu_param', 'logging_param'}
2025-03-29 14:33:51,165:INFO:Checking environment
2025-03-29 14:33:51,165:INFO:python_version: 3.11.11
2025-03-29 14:33:51,165:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-03-29 14:33:51,165:INFO:machine: AMD64
2025-03-29 14:33:51,165:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-29 14:33:51,169:INFO:Memory: svmem(total=16943763456, available=4372389888, percent=74.2, used=12571373568, free=4372389888)
2025-03-29 14:33:51,170:INFO:Physical Core: 4
2025-03-29 14:33:51,170:INFO:Logical Core: 8
2025-03-29 14:33:51,170:INFO:Checking libraries
2025-03-29 14:33:51,170:INFO:System:
2025-03-29 14:33:51,170:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-03-29 14:33:51,170:INFO:executable: c:\Users\kgust\miniconda3\envs\halfmarathon_time\python.exe
2025-03-29 14:33:51,170:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-29 14:33:51,170:INFO:PyCaret required dependencies:
2025-03-29 14:33:51,170:INFO:                 pip: 25.0
2025-03-29 14:33:51,170:INFO:          setuptools: 75.8.0
2025-03-29 14:33:51,170:INFO:             pycaret: 3.3.2
2025-03-29 14:33:51,170:INFO:             IPython: 9.0.2
2025-03-29 14:33:51,170:INFO:          ipywidgets: 8.1.5
2025-03-29 14:33:51,170:INFO:                tqdm: 4.67.1
2025-03-29 14:33:51,170:INFO:               numpy: 1.26.4
2025-03-29 14:33:51,171:INFO:              pandas: 2.1.4
2025-03-29 14:33:51,171:INFO:              jinja2: 3.1.6
2025-03-29 14:33:51,171:INFO:               scipy: 1.11.4
2025-03-29 14:33:51,171:INFO:              joblib: 1.3.2
2025-03-29 14:33:51,171:INFO:             sklearn: 1.4.2
2025-03-29 14:33:51,171:INFO:                pyod: 2.0.4
2025-03-29 14:33:51,171:INFO:            imblearn: 0.13.0
2025-03-29 14:33:51,171:INFO:   category_encoders: 2.7.0
2025-03-29 14:33:51,171:INFO:            lightgbm: 4.6.0
2025-03-29 14:33:51,171:INFO:               numba: 0.61.0
2025-03-29 14:33:51,171:INFO:            requests: 2.32.3
2025-03-29 14:33:51,171:INFO:          matplotlib: 3.7.5
2025-03-29 14:33:51,171:INFO:          scikitplot: 0.3.7
2025-03-29 14:33:51,171:INFO:         yellowbrick: 1.5
2025-03-29 14:33:51,171:INFO:              plotly: 5.24.1
2025-03-29 14:33:51,171:INFO:    plotly-resampler: Not installed
2025-03-29 14:33:51,171:INFO:             kaleido: 0.2.1
2025-03-29 14:33:51,171:INFO:           schemdraw: 0.15
2025-03-29 14:33:51,171:INFO:         statsmodels: 0.14.4
2025-03-29 14:33:51,172:INFO:              sktime: 0.26.0
2025-03-29 14:33:51,172:INFO:               tbats: 1.1.3
2025-03-29 14:33:51,172:INFO:            pmdarima: 2.0.4
2025-03-29 14:33:51,172:INFO:              psutil: 7.0.0
2025-03-29 14:33:51,172:INFO:          markupsafe: 3.0.2
2025-03-29 14:33:51,172:INFO:             pickle5: Not installed
2025-03-29 14:33:51,172:INFO:         cloudpickle: 3.1.1
2025-03-29 14:33:51,172:INFO:         deprecation: 2.1.0
2025-03-29 14:33:51,172:INFO:              xxhash: 3.5.0
2025-03-29 14:33:51,172:INFO:           wurlitzer: Not installed
2025-03-29 14:33:51,172:INFO:PyCaret optional dependencies:
2025-03-29 14:33:51,172:INFO:                shap: Not installed
2025-03-29 14:33:51,172:INFO:           interpret: Not installed
2025-03-29 14:33:51,172:INFO:                umap: Not installed
2025-03-29 14:33:51,173:INFO:     ydata_profiling: Not installed
2025-03-29 14:33:51,173:INFO:  explainerdashboard: Not installed
2025-03-29 14:33:51,173:INFO:             autoviz: Not installed
2025-03-29 14:33:51,173:INFO:           fairlearn: Not installed
2025-03-29 14:33:51,173:INFO:          deepchecks: Not installed
2025-03-29 14:33:51,173:INFO:             xgboost: Not installed
2025-03-29 14:33:51,173:INFO:            catboost: Not installed
2025-03-29 14:33:51,173:INFO:              kmodes: Not installed
2025-03-29 14:33:51,173:INFO:             mlxtend: Not installed
2025-03-29 14:33:51,173:INFO:       statsforecast: Not installed
2025-03-29 14:33:51,173:INFO:        tune_sklearn: Not installed
2025-03-29 14:33:51,174:INFO:                 ray: Not installed
2025-03-29 14:33:51,174:INFO:            hyperopt: Not installed
2025-03-29 14:33:51,174:INFO:              optuna: Not installed
2025-03-29 14:33:51,174:INFO:               skopt: Not installed
2025-03-29 14:33:51,174:INFO:              mlflow: Not installed
2025-03-29 14:33:51,174:INFO:              gradio: Not installed
2025-03-29 14:33:51,174:INFO:             fastapi: Not installed
2025-03-29 14:33:51,174:INFO:             uvicorn: Not installed
2025-03-29 14:33:51,175:INFO:              m2cgen: Not installed
2025-03-29 14:33:51,175:INFO:           evidently: Not installed
2025-03-29 14:33:51,175:INFO:               fugue: Not installed
2025-03-29 14:33:51,175:INFO:           streamlit: 1.44.0
2025-03-29 14:33:51,175:INFO:             prophet: Not installed
2025-03-29 14:33:51,175:INFO:None
2025-03-29 14:33:51,175:INFO:Set up data.
2025-03-29 14:33:51,193:INFO:Set up folding strategy.
2025-03-29 14:33:51,193:INFO:Set up train/test split.
2025-03-29 14:33:51,201:INFO:Set up index.
2025-03-29 14:33:51,202:INFO:Assigning column types.
2025-03-29 14:35:24,359:INFO:PyCaret RegressionExperiment
2025-03-29 14:35:24,359:INFO:Logging name: reg-default-name
2025-03-29 14:35:24,359:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-29 14:35:24,359:INFO:version 3.3.2
2025-03-29 14:35:24,359:INFO:Initializing setup()
2025-03-29 14:35:24,359:INFO:self.USI: e364
2025-03-29 14:35:24,359:INFO:self._variable_keys: {'_ml_usecase', 'X_train', 'transform_target_param', 'y_test', 'fold_generator', 'n_jobs_param', 'html_param', 'fold_shuffle_param', 'log_plots_param', '_available_plots', 'USI', 'exp_name_log', 'target_param', 'exp_id', 'y', 'seed', 'fold_groups_param', 'idx', 'y_train', 'gpu_n_jobs_param', 'X', 'X_test', 'pipeline', 'memory', 'data', 'gpu_param', 'logging_param'}
2025-03-29 14:35:24,359:INFO:Checking environment
2025-03-29 14:35:24,359:INFO:python_version: 3.11.11
2025-03-29 14:35:24,360:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-03-29 14:35:24,360:INFO:machine: AMD64
2025-03-29 14:35:24,360:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-29 14:35:24,370:INFO:Memory: svmem(total=16943763456, available=4885733376, percent=71.2, used=12058030080, free=4885733376)
2025-03-29 14:35:24,370:INFO:Physical Core: 4
2025-03-29 14:35:24,371:INFO:Logical Core: 8
2025-03-29 14:35:24,371:INFO:Checking libraries
2025-03-29 14:35:24,371:INFO:System:
2025-03-29 14:35:24,371:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-03-29 14:35:24,371:INFO:executable: c:\Users\kgust\miniconda3\envs\halfmarathon_time\python.exe
2025-03-29 14:35:24,371:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-29 14:35:24,371:INFO:PyCaret required dependencies:
2025-03-29 14:35:24,371:INFO:                 pip: 25.0
2025-03-29 14:35:24,371:INFO:          setuptools: 75.8.0
2025-03-29 14:35:24,371:INFO:             pycaret: 3.3.2
2025-03-29 14:35:24,371:INFO:             IPython: 9.0.2
2025-03-29 14:35:24,371:INFO:          ipywidgets: 8.1.5
2025-03-29 14:35:24,372:INFO:                tqdm: 4.67.1
2025-03-29 14:35:24,372:INFO:               numpy: 1.26.4
2025-03-29 14:35:24,372:INFO:              pandas: 2.1.4
2025-03-29 14:35:24,372:INFO:              jinja2: 3.1.6
2025-03-29 14:35:24,372:INFO:               scipy: 1.11.4
2025-03-29 14:35:24,372:INFO:              joblib: 1.3.2
2025-03-29 14:35:24,372:INFO:             sklearn: 1.4.2
2025-03-29 14:35:24,372:INFO:                pyod: 2.0.4
2025-03-29 14:35:24,372:INFO:            imblearn: 0.13.0
2025-03-29 14:35:24,372:INFO:   category_encoders: 2.7.0
2025-03-29 14:35:24,372:INFO:            lightgbm: 4.6.0
2025-03-29 14:35:24,372:INFO:               numba: 0.61.0
2025-03-29 14:35:24,372:INFO:            requests: 2.32.3
2025-03-29 14:35:24,373:INFO:          matplotlib: 3.7.5
2025-03-29 14:35:24,373:INFO:          scikitplot: 0.3.7
2025-03-29 14:35:24,373:INFO:         yellowbrick: 1.5
2025-03-29 14:35:24,373:INFO:              plotly: 5.24.1
2025-03-29 14:35:24,373:INFO:    plotly-resampler: Not installed
2025-03-29 14:35:24,373:INFO:             kaleido: 0.2.1
2025-03-29 14:35:24,373:INFO:           schemdraw: 0.15
2025-03-29 14:35:24,373:INFO:         statsmodels: 0.14.4
2025-03-29 14:35:24,373:INFO:              sktime: 0.26.0
2025-03-29 14:35:24,373:INFO:               tbats: 1.1.3
2025-03-29 14:35:24,373:INFO:            pmdarima: 2.0.4
2025-03-29 14:35:24,373:INFO:              psutil: 7.0.0
2025-03-29 14:35:24,374:INFO:          markupsafe: 3.0.2
2025-03-29 14:35:24,374:INFO:             pickle5: Not installed
2025-03-29 14:35:24,374:INFO:         cloudpickle: 3.1.1
2025-03-29 14:35:24,374:INFO:         deprecation: 2.1.0
2025-03-29 14:35:24,374:INFO:              xxhash: 3.5.0
2025-03-29 14:35:24,374:INFO:           wurlitzer: Not installed
2025-03-29 14:35:24,374:INFO:PyCaret optional dependencies:
2025-03-29 14:35:24,374:INFO:                shap: Not installed
2025-03-29 14:35:24,374:INFO:           interpret: Not installed
2025-03-29 14:35:24,374:INFO:                umap: Not installed
2025-03-29 14:35:24,374:INFO:     ydata_profiling: Not installed
2025-03-29 14:35:24,374:INFO:  explainerdashboard: Not installed
2025-03-29 14:35:24,375:INFO:             autoviz: Not installed
2025-03-29 14:35:24,375:INFO:           fairlearn: Not installed
2025-03-29 14:35:24,375:INFO:          deepchecks: Not installed
2025-03-29 14:35:24,375:INFO:             xgboost: Not installed
2025-03-29 14:35:24,375:INFO:            catboost: Not installed
2025-03-29 14:35:24,375:INFO:              kmodes: Not installed
2025-03-29 14:35:24,375:INFO:             mlxtend: Not installed
2025-03-29 14:35:24,375:INFO:       statsforecast: Not installed
2025-03-29 14:35:24,375:INFO:        tune_sklearn: Not installed
2025-03-29 14:35:24,375:INFO:                 ray: Not installed
2025-03-29 14:35:24,375:INFO:            hyperopt: Not installed
2025-03-29 14:35:24,375:INFO:              optuna: Not installed
2025-03-29 14:35:24,376:INFO:               skopt: Not installed
2025-03-29 14:35:24,376:INFO:              mlflow: Not installed
2025-03-29 14:35:24,376:INFO:              gradio: Not installed
2025-03-29 14:35:24,376:INFO:             fastapi: Not installed
2025-03-29 14:35:24,376:INFO:             uvicorn: Not installed
2025-03-29 14:35:24,376:INFO:              m2cgen: Not installed
2025-03-29 14:35:24,376:INFO:           evidently: Not installed
2025-03-29 14:35:24,376:INFO:               fugue: Not installed
2025-03-29 14:35:24,376:INFO:           streamlit: 1.44.0
2025-03-29 14:35:24,376:INFO:             prophet: Not installed
2025-03-29 14:35:24,376:INFO:None
2025-03-29 14:35:24,376:INFO:Set up data.
2025-03-29 14:35:24,400:INFO:Set up folding strategy.
2025-03-29 14:35:24,400:INFO:Set up train/test split.
2025-03-29 14:35:24,416:INFO:Set up index.
2025-03-29 14:35:24,416:INFO:Assigning column types.
2025-03-29 14:35:24,422:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-29 14:35:24,422:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-29 14:35:24,434:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-29 14:35:24,440:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 14:35:24,496:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 14:35:24,537:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 14:35:24,538:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:24,538:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:24,538:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-29 14:35:24,542:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-29 14:35:24,548:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 14:35:24,603:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 14:35:24,643:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 14:35:24,645:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:24,645:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:24,645:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-29 14:35:24,650:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-29 14:35:24,654:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 14:35:24,711:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 14:35:24,758:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 14:35:24,759:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:24,759:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:24,764:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-29 14:35:24,768:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 14:35:24,827:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 14:35:24,870:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 14:35:24,870:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:24,870:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:24,871:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-29 14:35:24,879:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 14:35:24,934:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 14:35:24,975:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 14:35:24,976:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:24,976:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:24,986:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 14:35:25,043:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 14:35:25,085:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 14:35:25,085:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:25,085:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:25,085:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-29 14:35:25,153:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 14:35:25,193:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 14:35:25,195:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:25,195:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:25,262:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 14:35:25,303:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 14:35:25,303:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:25,304:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:25,304:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-29 14:35:25,369:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 14:35:25,414:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:25,415:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:25,482:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 14:35:25,524:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:25,524:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:25,525:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-29 14:35:25,634:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:25,634:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:25,747:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:25,748:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:25,749:INFO:Preparing preprocessing pipeline...
2025-03-29 14:35:25,749:INFO:Set up simple imputation.
2025-03-29 14:35:25,753:INFO:Set up encoding of ordinal features.
2025-03-29 14:35:25,755:INFO:Set up encoding of categorical features.
2025-03-29 14:35:25,756:INFO:Set up column name cleaning.
2025-03-29 14:35:25,826:INFO:Finished creating preprocessing pipeline.
2025-03-29 14:35:25,848:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\kgust\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo',
                                             '20 km Czas', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-29 14:35:25,848:INFO:Creating final display dataframe.
2025-03-29 14:35:26,021:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target              Czas
2                   Target type        Regression
3           Original data shape       (17707, 13)
4        Transformed data shape        (17707, 6)
5   Transformed train set shape        (12394, 6)
6    Transformed test set shape         (5313, 6)
7               Ignore features                 8
8              Numeric features                 4
9          Categorical features                 1
10     Rows with missing values              0.4%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator             KFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  reg-default-name
23                          USI              e364
2025-03-29 14:35:26,151:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:26,151:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:26,274:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:26,274:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:35:26,274:INFO:setup() successfully completed in 1.94s...............
2025-03-29 14:36:34,202:INFO:PyCaret RegressionExperiment
2025-03-29 14:36:34,202:INFO:Logging name: reg-default-name
2025-03-29 14:36:34,202:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-29 14:36:34,203:INFO:version 3.3.2
2025-03-29 14:36:34,203:INFO:Initializing setup()
2025-03-29 14:36:34,203:INFO:self.USI: f4d6
2025-03-29 14:36:34,203:INFO:self._variable_keys: {'_ml_usecase', 'X_train', 'transform_target_param', 'y_test', 'fold_generator', 'n_jobs_param', 'html_param', 'fold_shuffle_param', 'log_plots_param', '_available_plots', 'USI', 'exp_name_log', 'target_param', 'exp_id', 'y', 'seed', 'fold_groups_param', 'idx', 'y_train', 'gpu_n_jobs_param', 'X', 'X_test', 'pipeline', 'memory', 'data', 'gpu_param', 'logging_param'}
2025-03-29 14:36:34,203:INFO:Checking environment
2025-03-29 14:36:34,203:INFO:python_version: 3.11.11
2025-03-29 14:36:34,203:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-03-29 14:36:34,203:INFO:machine: AMD64
2025-03-29 14:36:34,203:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-29 14:36:34,206:INFO:Memory: svmem(total=16943763456, available=4749430784, percent=72.0, used=12194332672, free=4749430784)
2025-03-29 14:36:34,207:INFO:Physical Core: 4
2025-03-29 14:36:34,207:INFO:Logical Core: 8
2025-03-29 14:36:34,207:INFO:Checking libraries
2025-03-29 14:36:34,207:INFO:System:
2025-03-29 14:36:34,207:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-03-29 14:36:34,207:INFO:executable: c:\Users\kgust\miniconda3\envs\halfmarathon_time\python.exe
2025-03-29 14:36:34,207:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-29 14:36:34,207:INFO:PyCaret required dependencies:
2025-03-29 14:36:34,207:INFO:                 pip: 25.0
2025-03-29 14:36:34,207:INFO:          setuptools: 75.8.0
2025-03-29 14:36:34,207:INFO:             pycaret: 3.3.2
2025-03-29 14:36:34,207:INFO:             IPython: 9.0.2
2025-03-29 14:36:34,207:INFO:          ipywidgets: 8.1.5
2025-03-29 14:36:34,207:INFO:                tqdm: 4.67.1
2025-03-29 14:36:34,207:INFO:               numpy: 1.26.4
2025-03-29 14:36:34,207:INFO:              pandas: 2.1.4
2025-03-29 14:36:34,207:INFO:              jinja2: 3.1.6
2025-03-29 14:36:34,208:INFO:               scipy: 1.11.4
2025-03-29 14:36:34,208:INFO:              joblib: 1.3.2
2025-03-29 14:36:34,208:INFO:             sklearn: 1.4.2
2025-03-29 14:36:34,208:INFO:                pyod: 2.0.4
2025-03-29 14:36:34,208:INFO:            imblearn: 0.13.0
2025-03-29 14:36:34,208:INFO:   category_encoders: 2.7.0
2025-03-29 14:36:34,208:INFO:            lightgbm: 4.6.0
2025-03-29 14:36:34,208:INFO:               numba: 0.61.0
2025-03-29 14:36:34,208:INFO:            requests: 2.32.3
2025-03-29 14:36:34,208:INFO:          matplotlib: 3.7.5
2025-03-29 14:36:34,208:INFO:          scikitplot: 0.3.7
2025-03-29 14:36:34,208:INFO:         yellowbrick: 1.5
2025-03-29 14:36:34,208:INFO:              plotly: 5.24.1
2025-03-29 14:36:34,208:INFO:    plotly-resampler: Not installed
2025-03-29 14:36:34,208:INFO:             kaleido: 0.2.1
2025-03-29 14:36:34,208:INFO:           schemdraw: 0.15
2025-03-29 14:36:34,208:INFO:         statsmodels: 0.14.4
2025-03-29 14:36:34,208:INFO:              sktime: 0.26.0
2025-03-29 14:36:34,208:INFO:               tbats: 1.1.3
2025-03-29 14:36:34,208:INFO:            pmdarima: 2.0.4
2025-03-29 14:36:34,208:INFO:              psutil: 7.0.0
2025-03-29 14:36:34,208:INFO:          markupsafe: 3.0.2
2025-03-29 14:36:34,208:INFO:             pickle5: Not installed
2025-03-29 14:36:34,209:INFO:         cloudpickle: 3.1.1
2025-03-29 14:36:34,209:INFO:         deprecation: 2.1.0
2025-03-29 14:36:34,209:INFO:              xxhash: 3.5.0
2025-03-29 14:36:34,209:INFO:           wurlitzer: Not installed
2025-03-29 14:36:34,209:INFO:PyCaret optional dependencies:
2025-03-29 14:36:34,209:INFO:                shap: Not installed
2025-03-29 14:36:34,209:INFO:           interpret: Not installed
2025-03-29 14:36:34,209:INFO:                umap: Not installed
2025-03-29 14:36:34,209:INFO:     ydata_profiling: Not installed
2025-03-29 14:36:34,209:INFO:  explainerdashboard: Not installed
2025-03-29 14:36:34,209:INFO:             autoviz: Not installed
2025-03-29 14:36:34,209:INFO:           fairlearn: Not installed
2025-03-29 14:36:34,209:INFO:          deepchecks: Not installed
2025-03-29 14:36:34,209:INFO:             xgboost: Not installed
2025-03-29 14:36:34,209:INFO:            catboost: Not installed
2025-03-29 14:36:34,209:INFO:              kmodes: Not installed
2025-03-29 14:36:34,209:INFO:             mlxtend: Not installed
2025-03-29 14:36:34,209:INFO:       statsforecast: Not installed
2025-03-29 14:36:34,209:INFO:        tune_sklearn: Not installed
2025-03-29 14:36:34,209:INFO:                 ray: Not installed
2025-03-29 14:36:34,210:INFO:            hyperopt: Not installed
2025-03-29 14:36:34,210:INFO:              optuna: Not installed
2025-03-29 14:36:34,210:INFO:               skopt: Not installed
2025-03-29 14:36:34,210:INFO:              mlflow: Not installed
2025-03-29 14:36:34,210:INFO:              gradio: Not installed
2025-03-29 14:36:34,210:INFO:             fastapi: Not installed
2025-03-29 14:36:34,210:INFO:             uvicorn: Not installed
2025-03-29 14:36:34,210:INFO:              m2cgen: Not installed
2025-03-29 14:36:34,210:INFO:           evidently: Not installed
2025-03-29 14:36:34,210:INFO:               fugue: Not installed
2025-03-29 14:36:34,210:INFO:           streamlit: 1.44.0
2025-03-29 14:36:34,210:INFO:             prophet: Not installed
2025-03-29 14:36:34,210:INFO:None
2025-03-29 14:36:34,210:INFO:Set up data.
2025-03-29 14:36:34,222:INFO:Set up folding strategy.
2025-03-29 14:36:34,222:INFO:Set up train/test split.
2025-03-29 14:36:34,231:INFO:Set up index.
2025-03-29 14:36:34,231:INFO:Assigning column types.
2025-03-29 14:36:34,235:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-29 14:36:34,235:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,242:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,246:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,305:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,348:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,349:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:34,349:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:34,349:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,353:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,358:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,415:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,455:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,455:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:34,456:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:34,456:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-29 14:36:34,462:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,466:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,517:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,559:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,560:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:34,560:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:34,564:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,570:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,629:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,669:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,670:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:34,670:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:34,670:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-29 14:36:34,678:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,733:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,773:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,774:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:34,774:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:34,782:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,834:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,876:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,876:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:34,877:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:34,877:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-29 14:36:34,942:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,989:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 14:36:34,990:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:34,990:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:35,059:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 14:36:35,101:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 14:36:35,102:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:35,102:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:35,103:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-29 14:36:35,168:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 14:36:35,212:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:35,212:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:35,280:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 14:36:35,324:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:35,324:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:35,325:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-29 14:36:35,434:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:35,434:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:35,552:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:35,553:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:35,554:INFO:Preparing preprocessing pipeline...
2025-03-29 14:36:35,554:INFO:Set up simple imputation.
2025-03-29 14:36:35,558:INFO:Set up encoding of ordinal features.
2025-03-29 14:36:35,561:INFO:Set up encoding of categorical features.
2025-03-29 14:36:35,561:INFO:Set up column name cleaning.
2025-03-29 14:36:35,623:INFO:Finished creating preprocessing pipeline.
2025-03-29 14:36:35,642:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\kgust\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-29 14:36:35,642:INFO:Creating final display dataframe.
2025-03-29 14:36:35,797:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target              Czas
2                   Target type        Regression
3           Original data shape       (17707, 13)
4        Transformed data shape        (17707, 5)
5   Transformed train set shape        (12394, 5)
6    Transformed test set shape         (5313, 5)
7               Ignore features                 8
8              Numeric features                 3
9          Categorical features                 1
10     Rows with missing values              0.4%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator             KFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  reg-default-name
23                          USI              f4d6
2025-03-29 14:36:35,915:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:35,916:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:36,022:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:36,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 14:36:36,023:INFO:setup() successfully completed in 1.84s...............
2025-03-29 14:37:29,625:INFO:Initializing compare_models()
2025-03-29 14:37:29,625:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-03-29 14:37:29,625:INFO:Checking exceptions
2025-03-29 14:37:29,629:INFO:Preparing display monitor
2025-03-29 14:37:29,658:INFO:Initializing Linear Regression
2025-03-29 14:37:29,658:INFO:Total runtime is 0.0 minutes
2025-03-29 14:37:29,662:INFO:SubProcess create_model() called ==================================
2025-03-29 14:37:29,663:INFO:Initializing create_model()
2025-03-29 14:37:29,663:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC6DB28D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 14:37:29,663:INFO:Checking exceptions
2025-03-29 14:37:29,664:INFO:Importing libraries
2025-03-29 14:37:29,664:INFO:Copying training dataset
2025-03-29 14:37:29,671:INFO:Defining folds
2025-03-29 14:37:29,671:INFO:Declaring metric variables
2025-03-29 14:37:29,676:INFO:Importing untrained model
2025-03-29 14:37:29,680:INFO:Linear Regression Imported successfully
2025-03-29 14:37:29,690:INFO:Starting cross validation
2025-03-29 14:37:29,691:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 14:37:37,593:INFO:Calculating mean and std
2025-03-29 14:37:37,595:INFO:Creating metrics dataframe
2025-03-29 14:37:37,597:INFO:Uploading results into container
2025-03-29 14:37:37,598:INFO:Uploading model into container now
2025-03-29 14:37:37,599:INFO:_master_model_container: 1
2025-03-29 14:37:37,599:INFO:_display_container: 2
2025-03-29 14:37:37,599:INFO:LinearRegression(n_jobs=-1)
2025-03-29 14:37:37,599:INFO:create_model() successfully completed......................................
2025-03-29 14:37:37,829:INFO:SubProcess create_model() end ==================================
2025-03-29 14:37:37,829:INFO:Creating metrics dataframe
2025-03-29 14:37:37,834:INFO:Initializing Lasso Regression
2025-03-29 14:37:37,835:INFO:Total runtime is 0.13627957503000895 minutes
2025-03-29 14:37:37,838:INFO:SubProcess create_model() called ==================================
2025-03-29 14:37:37,839:INFO:Initializing create_model()
2025-03-29 14:37:37,839:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC6DB28D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 14:37:37,839:INFO:Checking exceptions
2025-03-29 14:37:37,839:INFO:Importing libraries
2025-03-29 14:37:37,839:INFO:Copying training dataset
2025-03-29 14:37:37,847:INFO:Defining folds
2025-03-29 14:37:37,847:INFO:Declaring metric variables
2025-03-29 14:37:37,850:INFO:Importing untrained model
2025-03-29 14:37:37,855:INFO:Lasso Regression Imported successfully
2025-03-29 14:37:37,863:INFO:Starting cross validation
2025-03-29 14:37:37,864:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 14:37:38,040:INFO:Calculating mean and std
2025-03-29 14:37:38,041:INFO:Creating metrics dataframe
2025-03-29 14:37:38,043:INFO:Uploading results into container
2025-03-29 14:37:38,044:INFO:Uploading model into container now
2025-03-29 14:37:38,045:INFO:_master_model_container: 2
2025-03-29 14:37:38,045:INFO:_display_container: 2
2025-03-29 14:37:38,046:INFO:Lasso(random_state=123)
2025-03-29 14:37:38,046:INFO:create_model() successfully completed......................................
2025-03-29 14:37:38,195:INFO:SubProcess create_model() end ==================================
2025-03-29 14:37:38,195:INFO:Creating metrics dataframe
2025-03-29 14:37:38,204:INFO:Initializing Ridge Regression
2025-03-29 14:37:38,204:INFO:Total runtime is 0.14243218501408894 minutes
2025-03-29 14:37:38,208:INFO:SubProcess create_model() called ==================================
2025-03-29 14:37:38,208:INFO:Initializing create_model()
2025-03-29 14:37:38,208:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC6DB28D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 14:37:38,208:INFO:Checking exceptions
2025-03-29 14:37:38,209:INFO:Importing libraries
2025-03-29 14:37:38,209:INFO:Copying training dataset
2025-03-29 14:37:38,216:INFO:Defining folds
2025-03-29 14:37:38,216:INFO:Declaring metric variables
2025-03-29 14:37:38,219:INFO:Importing untrained model
2025-03-29 14:37:38,224:INFO:Ridge Regression Imported successfully
2025-03-29 14:37:38,232:INFO:Starting cross validation
2025-03-29 14:37:38,234:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 14:37:38,417:INFO:Calculating mean and std
2025-03-29 14:37:38,418:INFO:Creating metrics dataframe
2025-03-29 14:37:38,420:INFO:Uploading results into container
2025-03-29 14:37:38,421:INFO:Uploading model into container now
2025-03-29 14:37:38,422:INFO:_master_model_container: 3
2025-03-29 14:37:38,422:INFO:_display_container: 2
2025-03-29 14:37:38,422:INFO:Ridge(random_state=123)
2025-03-29 14:37:38,422:INFO:create_model() successfully completed......................................
2025-03-29 14:37:38,609:INFO:SubProcess create_model() end ==================================
2025-03-29 14:37:38,609:INFO:Creating metrics dataframe
2025-03-29 14:37:38,617:INFO:Initializing Elastic Net
2025-03-29 14:37:38,617:INFO:Total runtime is 0.1493171215057373 minutes
2025-03-29 14:37:38,620:INFO:SubProcess create_model() called ==================================
2025-03-29 14:37:38,621:INFO:Initializing create_model()
2025-03-29 14:37:38,621:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC6DB28D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 14:37:38,621:INFO:Checking exceptions
2025-03-29 14:37:38,621:INFO:Importing libraries
2025-03-29 14:37:38,621:INFO:Copying training dataset
2025-03-29 14:37:38,628:INFO:Defining folds
2025-03-29 14:37:38,629:INFO:Declaring metric variables
2025-03-29 14:37:38,632:INFO:Importing untrained model
2025-03-29 14:37:38,636:INFO:Elastic Net Imported successfully
2025-03-29 14:37:38,645:INFO:Starting cross validation
2025-03-29 14:37:38,647:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 14:37:38,825:INFO:Calculating mean and std
2025-03-29 14:37:38,826:INFO:Creating metrics dataframe
2025-03-29 14:37:38,828:INFO:Uploading results into container
2025-03-29 14:37:38,829:INFO:Uploading model into container now
2025-03-29 14:37:38,829:INFO:_master_model_container: 4
2025-03-29 14:37:38,829:INFO:_display_container: 2
2025-03-29 14:37:38,830:INFO:ElasticNet(random_state=123)
2025-03-29 14:37:38,830:INFO:create_model() successfully completed......................................
2025-03-29 14:37:38,976:INFO:SubProcess create_model() end ==================================
2025-03-29 14:37:38,977:INFO:Creating metrics dataframe
2025-03-29 14:37:38,986:INFO:Initializing Least Angle Regression
2025-03-29 14:37:38,986:INFO:Total runtime is 0.15547295411427817 minutes
2025-03-29 14:37:38,990:INFO:SubProcess create_model() called ==================================
2025-03-29 14:37:38,991:INFO:Initializing create_model()
2025-03-29 14:37:38,992:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC6DB28D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 14:37:38,992:INFO:Checking exceptions
2025-03-29 14:37:38,992:INFO:Importing libraries
2025-03-29 14:37:38,992:INFO:Copying training dataset
2025-03-29 14:37:38,999:INFO:Defining folds
2025-03-29 14:37:38,999:INFO:Declaring metric variables
2025-03-29 14:37:39,002:INFO:Importing untrained model
2025-03-29 14:37:39,008:INFO:Least Angle Regression Imported successfully
2025-03-29 14:37:39,015:INFO:Starting cross validation
2025-03-29 14:37:39,017:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 14:37:39,194:INFO:Calculating mean and std
2025-03-29 14:37:39,195:INFO:Creating metrics dataframe
2025-03-29 14:37:39,197:INFO:Uploading results into container
2025-03-29 14:37:39,197:INFO:Uploading model into container now
2025-03-29 14:37:39,198:INFO:_master_model_container: 5
2025-03-29 14:37:39,198:INFO:_display_container: 2
2025-03-29 14:37:39,198:INFO:Lars(random_state=123)
2025-03-29 14:37:39,198:INFO:create_model() successfully completed......................................
2025-03-29 14:37:39,348:INFO:SubProcess create_model() end ==================================
2025-03-29 14:37:39,348:INFO:Creating metrics dataframe
2025-03-29 14:37:39,357:INFO:Initializing Lasso Least Angle Regression
2025-03-29 14:37:39,357:INFO:Total runtime is 0.16165405114491782 minutes
2025-03-29 14:37:39,362:INFO:SubProcess create_model() called ==================================
2025-03-29 14:37:39,363:INFO:Initializing create_model()
2025-03-29 14:37:39,363:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC6DB28D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 14:37:39,364:INFO:Checking exceptions
2025-03-29 14:37:39,364:INFO:Importing libraries
2025-03-29 14:37:39,364:INFO:Copying training dataset
2025-03-29 14:37:39,371:INFO:Defining folds
2025-03-29 14:37:39,371:INFO:Declaring metric variables
2025-03-29 14:37:39,376:INFO:Importing untrained model
2025-03-29 14:37:39,381:INFO:Lasso Least Angle Regression Imported successfully
2025-03-29 14:37:39,388:INFO:Starting cross validation
2025-03-29 14:37:39,389:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 14:37:39,570:INFO:Calculating mean and std
2025-03-29 14:37:39,576:INFO:Creating metrics dataframe
2025-03-29 14:37:39,578:INFO:Uploading results into container
2025-03-29 14:37:39,579:INFO:Uploading model into container now
2025-03-29 14:37:39,579:INFO:_master_model_container: 6
2025-03-29 14:37:39,580:INFO:_display_container: 2
2025-03-29 14:37:39,580:INFO:LassoLars(random_state=123)
2025-03-29 14:37:39,580:INFO:create_model() successfully completed......................................
2025-03-29 14:37:39,728:INFO:SubProcess create_model() end ==================================
2025-03-29 14:37:39,729:INFO:Creating metrics dataframe
2025-03-29 14:37:39,741:INFO:Initializing Orthogonal Matching Pursuit
2025-03-29 14:37:39,741:INFO:Total runtime is 0.16805679003397625 minutes
2025-03-29 14:37:39,745:INFO:SubProcess create_model() called ==================================
2025-03-29 14:37:39,745:INFO:Initializing create_model()
2025-03-29 14:37:39,746:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC6DB28D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 14:37:39,746:INFO:Checking exceptions
2025-03-29 14:37:39,746:INFO:Importing libraries
2025-03-29 14:37:39,746:INFO:Copying training dataset
2025-03-29 14:37:39,752:INFO:Defining folds
2025-03-29 14:37:39,752:INFO:Declaring metric variables
2025-03-29 14:37:39,756:INFO:Importing untrained model
2025-03-29 14:37:39,761:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-29 14:37:39,768:INFO:Starting cross validation
2025-03-29 14:37:39,770:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 14:37:39,947:INFO:Calculating mean and std
2025-03-29 14:37:39,948:INFO:Creating metrics dataframe
2025-03-29 14:37:39,949:INFO:Uploading results into container
2025-03-29 14:37:39,950:INFO:Uploading model into container now
2025-03-29 14:37:39,950:INFO:_master_model_container: 7
2025-03-29 14:37:39,950:INFO:_display_container: 2
2025-03-29 14:37:39,950:INFO:OrthogonalMatchingPursuit()
2025-03-29 14:37:39,951:INFO:create_model() successfully completed......................................
2025-03-29 14:37:40,100:INFO:SubProcess create_model() end ==================================
2025-03-29 14:37:40,100:INFO:Creating metrics dataframe
2025-03-29 14:37:40,111:INFO:Initializing Bayesian Ridge
2025-03-29 14:37:40,111:INFO:Total runtime is 0.17422439257303876 minutes
2025-03-29 14:37:40,114:INFO:SubProcess create_model() called ==================================
2025-03-29 14:37:40,114:INFO:Initializing create_model()
2025-03-29 14:37:40,114:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC6DB28D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 14:37:40,114:INFO:Checking exceptions
2025-03-29 14:37:40,115:INFO:Importing libraries
2025-03-29 14:37:40,115:INFO:Copying training dataset
2025-03-29 14:37:40,122:INFO:Defining folds
2025-03-29 14:37:40,123:INFO:Declaring metric variables
2025-03-29 14:37:40,127:INFO:Importing untrained model
2025-03-29 14:37:40,131:INFO:Bayesian Ridge Imported successfully
2025-03-29 14:37:40,138:INFO:Starting cross validation
2025-03-29 14:37:40,140:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 14:37:40,334:INFO:Calculating mean and std
2025-03-29 14:37:40,336:INFO:Creating metrics dataframe
2025-03-29 14:37:40,340:INFO:Uploading results into container
2025-03-29 14:37:40,341:INFO:Uploading model into container now
2025-03-29 14:37:40,342:INFO:_master_model_container: 8
2025-03-29 14:37:40,342:INFO:_display_container: 2
2025-03-29 14:37:40,342:INFO:BayesianRidge()
2025-03-29 14:37:40,342:INFO:create_model() successfully completed......................................
2025-03-29 14:37:40,490:INFO:SubProcess create_model() end ==================================
2025-03-29 14:37:40,491:INFO:Creating metrics dataframe
2025-03-29 14:37:40,501:INFO:Initializing Passive Aggressive Regressor
2025-03-29 14:37:40,501:INFO:Total runtime is 0.18072084585825604 minutes
2025-03-29 14:37:40,504:INFO:SubProcess create_model() called ==================================
2025-03-29 14:37:40,504:INFO:Initializing create_model()
2025-03-29 14:37:40,505:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC6DB28D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 14:37:40,505:INFO:Checking exceptions
2025-03-29 14:37:40,505:INFO:Importing libraries
2025-03-29 14:37:40,505:INFO:Copying training dataset
2025-03-29 14:37:40,513:INFO:Defining folds
2025-03-29 14:37:40,513:INFO:Declaring metric variables
2025-03-29 14:37:40,516:INFO:Importing untrained model
2025-03-29 14:37:40,521:INFO:Passive Aggressive Regressor Imported successfully
2025-03-29 14:37:40,530:INFO:Starting cross validation
2025-03-29 14:37:40,532:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 14:37:40,725:INFO:Calculating mean and std
2025-03-29 14:37:40,727:INFO:Creating metrics dataframe
2025-03-29 14:37:40,729:INFO:Uploading results into container
2025-03-29 14:37:40,730:INFO:Uploading model into container now
2025-03-29 14:37:40,731:INFO:_master_model_container: 9
2025-03-29 14:37:40,731:INFO:_display_container: 2
2025-03-29 14:37:40,732:INFO:PassiveAggressiveRegressor(random_state=123)
2025-03-29 14:37:40,732:INFO:create_model() successfully completed......................................
2025-03-29 14:37:40,880:INFO:SubProcess create_model() end ==================================
2025-03-29 14:37:40,880:INFO:Creating metrics dataframe
2025-03-29 14:37:40,891:INFO:Initializing Huber Regressor
2025-03-29 14:37:40,891:INFO:Total runtime is 0.18721818526585898 minutes
2025-03-29 14:37:40,895:INFO:SubProcess create_model() called ==================================
2025-03-29 14:37:40,895:INFO:Initializing create_model()
2025-03-29 14:37:40,895:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC6DB28D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 14:37:40,895:INFO:Checking exceptions
2025-03-29 14:37:40,895:INFO:Importing libraries
2025-03-29 14:37:40,896:INFO:Copying training dataset
2025-03-29 14:37:40,902:INFO:Defining folds
2025-03-29 14:37:40,903:INFO:Declaring metric variables
2025-03-29 14:37:40,906:INFO:Importing untrained model
2025-03-29 14:37:40,911:INFO:Huber Regressor Imported successfully
2025-03-29 14:37:40,917:INFO:Starting cross validation
2025-03-29 14:37:40,919:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 14:37:41,307:INFO:Calculating mean and std
2025-03-29 14:37:41,308:INFO:Creating metrics dataframe
2025-03-29 14:37:41,309:INFO:Uploading results into container
2025-03-29 14:37:41,310:INFO:Uploading model into container now
2025-03-29 14:37:41,310:INFO:_master_model_container: 10
2025-03-29 14:37:41,310:INFO:_display_container: 2
2025-03-29 14:37:41,311:INFO:HuberRegressor()
2025-03-29 14:37:41,311:INFO:create_model() successfully completed......................................
2025-03-29 14:37:41,458:INFO:SubProcess create_model() end ==================================
2025-03-29 14:37:41,459:INFO:Creating metrics dataframe
2025-03-29 14:37:41,471:INFO:Initializing K Neighbors Regressor
2025-03-29 14:37:41,471:INFO:Total runtime is 0.19689220984776817 minutes
2025-03-29 14:37:41,476:INFO:SubProcess create_model() called ==================================
2025-03-29 14:37:41,476:INFO:Initializing create_model()
2025-03-29 14:37:41,476:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC6DB28D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 14:37:41,476:INFO:Checking exceptions
2025-03-29 14:37:41,476:INFO:Importing libraries
2025-03-29 14:37:41,476:INFO:Copying training dataset
2025-03-29 14:37:41,482:INFO:Defining folds
2025-03-29 14:37:41,482:INFO:Declaring metric variables
2025-03-29 14:37:41,485:INFO:Importing untrained model
2025-03-29 14:37:41,493:INFO:K Neighbors Regressor Imported successfully
2025-03-29 14:37:41,499:INFO:Starting cross validation
2025-03-29 14:37:41,500:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 14:37:41,807:INFO:Calculating mean and std
2025-03-29 14:37:41,808:INFO:Creating metrics dataframe
2025-03-29 14:37:41,810:INFO:Uploading results into container
2025-03-29 14:37:41,810:INFO:Uploading model into container now
2025-03-29 14:37:41,811:INFO:_master_model_container: 11
2025-03-29 14:37:41,811:INFO:_display_container: 2
2025-03-29 14:37:41,811:INFO:KNeighborsRegressor(n_jobs=-1)
2025-03-29 14:37:41,811:INFO:create_model() successfully completed......................................
2025-03-29 14:37:41,959:INFO:SubProcess create_model() end ==================================
2025-03-29 14:37:41,959:INFO:Creating metrics dataframe
2025-03-29 14:37:41,972:INFO:Initializing Decision Tree Regressor
2025-03-29 14:37:41,972:INFO:Total runtime is 0.20523082812627158 minutes
2025-03-29 14:37:41,976:INFO:SubProcess create_model() called ==================================
2025-03-29 14:37:41,976:INFO:Initializing create_model()
2025-03-29 14:37:41,976:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC6DB28D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 14:37:41,977:INFO:Checking exceptions
2025-03-29 14:37:41,977:INFO:Importing libraries
2025-03-29 14:37:41,977:INFO:Copying training dataset
2025-03-29 14:37:41,983:INFO:Defining folds
2025-03-29 14:37:41,983:INFO:Declaring metric variables
2025-03-29 14:37:41,986:INFO:Importing untrained model
2025-03-29 14:37:41,992:INFO:Decision Tree Regressor Imported successfully
2025-03-29 14:37:41,999:INFO:Starting cross validation
2025-03-29 14:37:42,000:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 14:37:42,289:INFO:Calculating mean and std
2025-03-29 14:37:42,290:INFO:Creating metrics dataframe
2025-03-29 14:37:42,292:INFO:Uploading results into container
2025-03-29 14:37:42,292:INFO:Uploading model into container now
2025-03-29 14:37:42,292:INFO:_master_model_container: 12
2025-03-29 14:37:42,292:INFO:_display_container: 2
2025-03-29 14:37:42,293:INFO:DecisionTreeRegressor(random_state=123)
2025-03-29 14:37:42,293:INFO:create_model() successfully completed......................................
2025-03-29 14:37:42,443:INFO:SubProcess create_model() end ==================================
2025-03-29 14:37:42,444:INFO:Creating metrics dataframe
2025-03-29 14:37:42,454:INFO:Initializing Random Forest Regressor
2025-03-29 14:37:42,454:INFO:Total runtime is 0.21327075560887657 minutes
2025-03-29 14:37:42,458:INFO:SubProcess create_model() called ==================================
2025-03-29 14:37:42,459:INFO:Initializing create_model()
2025-03-29 14:37:42,459:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC6DB28D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 14:37:42,459:INFO:Checking exceptions
2025-03-29 14:37:42,459:INFO:Importing libraries
2025-03-29 14:37:42,459:INFO:Copying training dataset
2025-03-29 14:37:42,465:INFO:Defining folds
2025-03-29 14:37:42,466:INFO:Declaring metric variables
2025-03-29 14:37:42,469:INFO:Importing untrained model
2025-03-29 14:37:42,475:INFO:Random Forest Regressor Imported successfully
2025-03-29 14:37:42,481:INFO:Starting cross validation
2025-03-29 14:37:42,483:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 14:37:48,561:INFO:Calculating mean and std
2025-03-29 14:37:48,562:INFO:Creating metrics dataframe
2025-03-29 14:37:48,564:INFO:Uploading results into container
2025-03-29 14:37:48,565:INFO:Uploading model into container now
2025-03-29 14:37:48,565:INFO:_master_model_container: 13
2025-03-29 14:37:48,565:INFO:_display_container: 2
2025-03-29 14:37:48,566:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-03-29 14:37:48,566:INFO:create_model() successfully completed......................................
2025-03-29 14:37:48,721:INFO:SubProcess create_model() end ==================================
2025-03-29 14:37:48,722:INFO:Creating metrics dataframe
2025-03-29 14:37:48,734:INFO:Initializing Extra Trees Regressor
2025-03-29 14:37:48,734:INFO:Total runtime is 0.3179330627123515 minutes
2025-03-29 14:37:48,737:INFO:SubProcess create_model() called ==================================
2025-03-29 14:37:48,738:INFO:Initializing create_model()
2025-03-29 14:37:48,738:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC6DB28D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 14:37:48,738:INFO:Checking exceptions
2025-03-29 14:37:48,739:INFO:Importing libraries
2025-03-29 14:37:48,739:INFO:Copying training dataset
2025-03-29 14:37:48,745:INFO:Defining folds
2025-03-29 14:37:48,745:INFO:Declaring metric variables
2025-03-29 14:37:48,750:INFO:Importing untrained model
2025-03-29 14:37:48,754:INFO:Extra Trees Regressor Imported successfully
2025-03-29 14:37:48,761:INFO:Starting cross validation
2025-03-29 14:37:48,763:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 14:37:52,979:INFO:Calculating mean and std
2025-03-29 14:37:52,980:INFO:Creating metrics dataframe
2025-03-29 14:37:52,982:INFO:Uploading results into container
2025-03-29 14:37:52,982:INFO:Uploading model into container now
2025-03-29 14:37:52,983:INFO:_master_model_container: 14
2025-03-29 14:37:52,983:INFO:_display_container: 2
2025-03-29 14:37:52,984:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-03-29 14:37:52,984:INFO:create_model() successfully completed......................................
2025-03-29 14:37:53,141:INFO:SubProcess create_model() end ==================================
2025-03-29 14:37:53,141:INFO:Creating metrics dataframe
2025-03-29 14:37:53,154:INFO:Initializing AdaBoost Regressor
2025-03-29 14:37:53,154:INFO:Total runtime is 0.391592808564504 minutes
2025-03-29 14:37:53,156:INFO:SubProcess create_model() called ==================================
2025-03-29 14:37:53,157:INFO:Initializing create_model()
2025-03-29 14:37:53,157:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC6DB28D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 14:37:53,157:INFO:Checking exceptions
2025-03-29 14:37:53,157:INFO:Importing libraries
2025-03-29 14:37:53,157:INFO:Copying training dataset
2025-03-29 14:37:53,165:INFO:Defining folds
2025-03-29 14:37:53,165:INFO:Declaring metric variables
2025-03-29 14:37:53,168:INFO:Importing untrained model
2025-03-29 14:37:53,177:INFO:AdaBoost Regressor Imported successfully
2025-03-29 14:37:53,192:INFO:Starting cross validation
2025-03-29 14:37:53,194:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 14:37:54,204:INFO:Calculating mean and std
2025-03-29 14:37:54,205:INFO:Creating metrics dataframe
2025-03-29 14:37:54,208:INFO:Uploading results into container
2025-03-29 14:37:54,209:INFO:Uploading model into container now
2025-03-29 14:37:54,210:INFO:_master_model_container: 15
2025-03-29 14:37:54,210:INFO:_display_container: 2
2025-03-29 14:37:54,210:INFO:AdaBoostRegressor(random_state=123)
2025-03-29 14:37:54,210:INFO:create_model() successfully completed......................................
2025-03-29 14:37:54,360:INFO:SubProcess create_model() end ==================================
2025-03-29 14:37:54,360:INFO:Creating metrics dataframe
2025-03-29 14:37:54,371:INFO:Initializing Gradient Boosting Regressor
2025-03-29 14:37:54,373:INFO:Total runtime is 0.41191070874532065 minutes
2025-03-29 14:37:54,375:INFO:SubProcess create_model() called ==================================
2025-03-29 14:37:54,376:INFO:Initializing create_model()
2025-03-29 14:37:54,376:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC6DB28D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 14:37:54,376:INFO:Checking exceptions
2025-03-29 14:37:54,376:INFO:Importing libraries
2025-03-29 14:37:54,376:INFO:Copying training dataset
2025-03-29 14:37:54,383:INFO:Defining folds
2025-03-29 14:37:54,383:INFO:Declaring metric variables
2025-03-29 14:37:54,386:INFO:Importing untrained model
2025-03-29 14:37:54,392:INFO:Gradient Boosting Regressor Imported successfully
2025-03-29 14:37:54,400:INFO:Starting cross validation
2025-03-29 14:37:54,401:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 14:37:56,763:INFO:Calculating mean and std
2025-03-29 14:37:56,764:INFO:Creating metrics dataframe
2025-03-29 14:37:56,765:INFO:Uploading results into container
2025-03-29 14:37:56,766:INFO:Uploading model into container now
2025-03-29 14:37:56,766:INFO:_master_model_container: 16
2025-03-29 14:37:56,766:INFO:_display_container: 2
2025-03-29 14:37:56,766:INFO:GradientBoostingRegressor(random_state=123)
2025-03-29 14:37:56,766:INFO:create_model() successfully completed......................................
2025-03-29 14:37:56,915:INFO:SubProcess create_model() end ==================================
2025-03-29 14:37:56,915:INFO:Creating metrics dataframe
2025-03-29 14:37:56,930:INFO:Initializing Light Gradient Boosting Machine
2025-03-29 14:37:56,930:INFO:Total runtime is 0.45453060468037926 minutes
2025-03-29 14:37:56,933:INFO:SubProcess create_model() called ==================================
2025-03-29 14:37:56,934:INFO:Initializing create_model()
2025-03-29 14:37:56,934:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC6DB28D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 14:37:56,934:INFO:Checking exceptions
2025-03-29 14:37:56,934:INFO:Importing libraries
2025-03-29 14:37:56,934:INFO:Copying training dataset
2025-03-29 14:37:56,941:INFO:Defining folds
2025-03-29 14:37:56,941:INFO:Declaring metric variables
2025-03-29 14:37:56,945:INFO:Importing untrained model
2025-03-29 14:37:56,950:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-29 14:37:56,958:INFO:Starting cross validation
2025-03-29 14:37:56,959:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 14:37:58,501:INFO:Calculating mean and std
2025-03-29 14:37:58,503:INFO:Creating metrics dataframe
2025-03-29 14:37:58,506:INFO:Uploading results into container
2025-03-29 14:37:58,507:INFO:Uploading model into container now
2025-03-29 14:37:58,508:INFO:_master_model_container: 17
2025-03-29 14:37:58,508:INFO:_display_container: 2
2025-03-29 14:37:58,509:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-03-29 14:37:58,509:INFO:create_model() successfully completed......................................
2025-03-29 14:37:58,699:INFO:SubProcess create_model() end ==================================
2025-03-29 14:37:58,699:INFO:Creating metrics dataframe
2025-03-29 14:37:58,712:INFO:Initializing Dummy Regressor
2025-03-29 14:37:58,712:INFO:Total runtime is 0.48423927625020347 minutes
2025-03-29 14:37:58,716:INFO:SubProcess create_model() called ==================================
2025-03-29 14:37:58,716:INFO:Initializing create_model()
2025-03-29 14:37:58,717:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC6DB28D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 14:37:58,717:INFO:Checking exceptions
2025-03-29 14:37:58,717:INFO:Importing libraries
2025-03-29 14:37:58,717:INFO:Copying training dataset
2025-03-29 14:37:58,725:INFO:Defining folds
2025-03-29 14:37:58,725:INFO:Declaring metric variables
2025-03-29 14:37:58,730:INFO:Importing untrained model
2025-03-29 14:37:58,734:INFO:Dummy Regressor Imported successfully
2025-03-29 14:37:58,742:INFO:Starting cross validation
2025-03-29 14:37:58,744:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 14:37:58,954:INFO:Calculating mean and std
2025-03-29 14:37:58,956:INFO:Creating metrics dataframe
2025-03-29 14:37:58,959:INFO:Uploading results into container
2025-03-29 14:37:58,959:INFO:Uploading model into container now
2025-03-29 14:37:58,960:INFO:_master_model_container: 18
2025-03-29 14:37:58,960:INFO:_display_container: 2
2025-03-29 14:37:58,960:INFO:DummyRegressor()
2025-03-29 14:37:58,961:INFO:create_model() successfully completed......................................
2025-03-29 14:37:59,117:INFO:SubProcess create_model() end ==================================
2025-03-29 14:37:59,117:INFO:Creating metrics dataframe
2025-03-29 14:37:59,131:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-03-29 14:37:59,140:INFO:Initializing create_model()
2025-03-29 14:37:59,141:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 14:37:59,141:INFO:Checking exceptions
2025-03-29 14:37:59,142:INFO:Importing libraries
2025-03-29 14:37:59,143:INFO:Copying training dataset
2025-03-29 14:37:59,150:INFO:Defining folds
2025-03-29 14:37:59,150:INFO:Declaring metric variables
2025-03-29 14:37:59,150:INFO:Importing untrained model
2025-03-29 14:37:59,150:INFO:Declaring custom model
2025-03-29 14:37:59,151:INFO:Huber Regressor Imported successfully
2025-03-29 14:37:59,152:INFO:Cross validation set to False
2025-03-29 14:37:59,152:INFO:Fitting Model
2025-03-29 14:37:59,251:INFO:HuberRegressor()
2025-03-29 14:37:59,251:INFO:create_model() successfully completed......................................
2025-03-29 14:37:59,434:INFO:_master_model_container: 18
2025-03-29 14:37:59,434:INFO:_display_container: 2
2025-03-29 14:37:59,434:INFO:HuberRegressor()
2025-03-29 14:37:59,434:INFO:compare_models() successfully completed......................................
2025-03-29 14:40:07,295:INFO:Initializing tune_model()
2025-03-29 14:40:07,295:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=HuberRegressor(), fold=None, round=4, n_iter=200, custom_grid=None, optimize=MAE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-03-29 14:40:07,295:INFO:Checking exceptions
2025-03-29 14:40:07,321:INFO:Copying training dataset
2025-03-29 14:40:07,329:INFO:Checking base model
2025-03-29 14:40:07,329:INFO:Base model : Huber Regressor
2025-03-29 14:40:07,334:INFO:Declaring metric variables
2025-03-29 14:40:07,339:INFO:Defining Hyperparameters
2025-03-29 14:40:07,535:INFO:Tuning with n_jobs=-1
2025-03-29 14:40:07,535:INFO:Initializing RandomizedSearchCV
2025-03-29 14:40:10,472:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 14:40:31,500:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 14:40:45,334:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 14:40:59,478:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 14:40:59,734:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 14:41:01,646:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 14:41:07,835:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 14:41:08,721:INFO:best_params: {'actual_estimator__fit_intercept': True, 'actual_estimator__epsilon': 1.3, 'actual_estimator__alpha': 0.05}
2025-03-29 14:41:08,722:INFO:Hyperparameter search completed
2025-03-29 14:41:08,722:INFO:SubProcess create_model() called ==================================
2025-03-29 14:41:08,723:INFO:Initializing create_model()
2025-03-29 14:41:08,723:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC5C8F390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'fit_intercept': True, 'epsilon': 1.3, 'alpha': 0.05})
2025-03-29 14:41:08,723:INFO:Checking exceptions
2025-03-29 14:41:08,723:INFO:Importing libraries
2025-03-29 14:41:08,724:INFO:Copying training dataset
2025-03-29 14:41:08,738:INFO:Defining folds
2025-03-29 14:41:08,738:INFO:Declaring metric variables
2025-03-29 14:41:08,743:INFO:Importing untrained model
2025-03-29 14:41:08,744:INFO:Declaring custom model
2025-03-29 14:41:08,753:INFO:Huber Regressor Imported successfully
2025-03-29 14:41:08,766:INFO:Starting cross validation
2025-03-29 14:41:08,769:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 14:41:09,428:INFO:Calculating mean and std
2025-03-29 14:41:09,430:INFO:Creating metrics dataframe
2025-03-29 14:41:09,439:INFO:Finalizing model
2025-03-29 14:41:09,629:INFO:Uploading results into container
2025-03-29 14:41:09,631:INFO:Uploading model into container now
2025-03-29 14:41:09,631:INFO:_master_model_container: 19
2025-03-29 14:41:09,632:INFO:_display_container: 3
2025-03-29 14:41:09,632:INFO:HuberRegressor(alpha=0.05, epsilon=1.3)
2025-03-29 14:41:09,632:INFO:create_model() successfully completed......................................
2025-03-29 14:41:09,812:INFO:SubProcess create_model() end ==================================
2025-03-29 14:41:09,812:INFO:choose_better activated
2025-03-29 14:41:09,818:INFO:SubProcess create_model() called ==================================
2025-03-29 14:41:09,819:INFO:Initializing create_model()
2025-03-29 14:41:09,819:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 14:41:09,819:INFO:Checking exceptions
2025-03-29 14:41:09,822:INFO:Importing libraries
2025-03-29 14:41:09,822:INFO:Copying training dataset
2025-03-29 14:41:09,829:INFO:Defining folds
2025-03-29 14:41:09,829:INFO:Declaring metric variables
2025-03-29 14:41:09,829:INFO:Importing untrained model
2025-03-29 14:41:09,830:INFO:Declaring custom model
2025-03-29 14:41:09,830:INFO:Huber Regressor Imported successfully
2025-03-29 14:41:09,831:INFO:Starting cross validation
2025-03-29 14:41:09,832:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 14:41:10,385:INFO:Calculating mean and std
2025-03-29 14:41:10,386:INFO:Creating metrics dataframe
2025-03-29 14:41:10,389:INFO:Finalizing model
2025-03-29 14:41:10,509:INFO:Uploading results into container
2025-03-29 14:41:10,510:INFO:Uploading model into container now
2025-03-29 14:41:10,510:INFO:_master_model_container: 20
2025-03-29 14:41:10,510:INFO:_display_container: 4
2025-03-29 14:41:10,510:INFO:HuberRegressor()
2025-03-29 14:41:10,510:INFO:create_model() successfully completed......................................
2025-03-29 14:41:10,683:INFO:SubProcess create_model() end ==================================
2025-03-29 14:41:10,684:INFO:HuberRegressor() result for MAE is 292.8194
2025-03-29 14:41:10,684:INFO:HuberRegressor(alpha=0.05, epsilon=1.3) result for MAE is 292.0068
2025-03-29 14:41:10,684:INFO:HuberRegressor(alpha=0.05, epsilon=1.3) is best model
2025-03-29 14:41:10,684:INFO:choose_better completed
2025-03-29 14:41:10,698:INFO:_master_model_container: 20
2025-03-29 14:41:10,698:INFO:_display_container: 3
2025-03-29 14:41:10,699:INFO:HuberRegressor(alpha=0.05, epsilon=1.3)
2025-03-29 14:41:10,699:INFO:tune_model() successfully completed......................................
2025-03-29 14:43:35,149:INFO:Initializing compare_models()
2025-03-29 14:43:35,149:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, include=[HuberRegressor(), HuberRegressor(alpha=0.05, epsilon=1.3)], exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, 'include': [HuberRegressor(), HuberRegressor(alpha=0.05, epsilon=1.3)], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-03-29 14:43:35,149:INFO:Checking exceptions
2025-03-29 14:43:35,153:INFO:Preparing display monitor
2025-03-29 14:43:35,188:INFO:Initializing custom model Huber Regressor
2025-03-29 14:43:35,189:INFO:Total runtime is 1.6621748606363933e-05 minutes
2025-03-29 14:43:35,193:INFO:SubProcess create_model() called ==================================
2025-03-29 14:43:35,194:INFO:Initializing create_model()
2025-03-29 14:43:35,194:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FBD254410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 14:43:35,195:INFO:Checking exceptions
2025-03-29 14:43:35,195:INFO:Importing libraries
2025-03-29 14:43:35,195:INFO:Copying training dataset
2025-03-29 14:43:35,205:INFO:Defining folds
2025-03-29 14:43:35,205:INFO:Declaring metric variables
2025-03-29 14:43:35,212:INFO:Importing untrained model
2025-03-29 14:43:35,212:INFO:Declaring custom model
2025-03-29 14:43:35,218:INFO:Huber Regressor Imported successfully
2025-03-29 14:43:35,235:INFO:Starting cross validation
2025-03-29 14:43:35,237:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 14:43:35,734:INFO:Calculating mean and std
2025-03-29 14:43:35,734:INFO:Creating metrics dataframe
2025-03-29 14:43:35,737:INFO:Uploading results into container
2025-03-29 14:43:35,737:INFO:Uploading model into container now
2025-03-29 14:43:35,738:INFO:_master_model_container: 21
2025-03-29 14:43:35,738:INFO:_display_container: 4
2025-03-29 14:43:35,738:INFO:HuberRegressor()
2025-03-29 14:43:35,738:INFO:create_model() successfully completed......................................
2025-03-29 14:43:35,903:INFO:SubProcess create_model() end ==================================
2025-03-29 14:43:35,903:INFO:Creating metrics dataframe
2025-03-29 14:43:35,910:INFO:Initializing custom model Huber Regressor
2025-03-29 14:43:35,910:INFO:Total runtime is 0.01202841599782308 minutes
2025-03-29 14:43:35,913:INFO:SubProcess create_model() called ==================================
2025-03-29 14:43:35,914:INFO:Initializing create_model()
2025-03-29 14:43:35,914:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=HuberRegressor(alpha=0.05, epsilon=1.3), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FBD254410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 14:43:35,914:INFO:Checking exceptions
2025-03-29 14:43:35,915:INFO:Importing libraries
2025-03-29 14:43:35,915:INFO:Copying training dataset
2025-03-29 14:43:35,923:INFO:Defining folds
2025-03-29 14:43:35,923:INFO:Declaring metric variables
2025-03-29 14:43:35,926:INFO:Importing untrained model
2025-03-29 14:43:35,927:INFO:Declaring custom model
2025-03-29 14:43:35,931:INFO:Huber Regressor Imported successfully
2025-03-29 14:43:35,942:INFO:Starting cross validation
2025-03-29 14:43:35,944:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 14:43:36,408:INFO:Calculating mean and std
2025-03-29 14:43:36,409:INFO:Creating metrics dataframe
2025-03-29 14:43:36,410:INFO:Uploading results into container
2025-03-29 14:43:36,411:INFO:Uploading model into container now
2025-03-29 14:43:36,411:INFO:_master_model_container: 22
2025-03-29 14:43:36,411:INFO:_display_container: 4
2025-03-29 14:43:36,412:INFO:HuberRegressor(alpha=0.05, epsilon=1.3)
2025-03-29 14:43:36,412:INFO:create_model() successfully completed......................................
2025-03-29 14:43:36,587:INFO:SubProcess create_model() end ==================================
2025-03-29 14:43:36,587:INFO:Creating metrics dataframe
2025-03-29 14:43:36,597:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-03-29 14:43:36,610:INFO:Initializing create_model()
2025-03-29 14:43:36,610:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=HuberRegressor(alpha=0.05, epsilon=1.3), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 14:43:36,610:INFO:Checking exceptions
2025-03-29 14:43:36,614:INFO:Importing libraries
2025-03-29 14:43:36,614:INFO:Copying training dataset
2025-03-29 14:43:36,623:INFO:Defining folds
2025-03-29 14:43:36,623:INFO:Declaring metric variables
2025-03-29 14:43:36,623:INFO:Importing untrained model
2025-03-29 14:43:36,624:INFO:Declaring custom model
2025-03-29 14:43:36,624:INFO:Huber Regressor Imported successfully
2025-03-29 14:43:36,626:INFO:Cross validation set to False
2025-03-29 14:43:36,626:INFO:Fitting Model
2025-03-29 14:43:36,761:INFO:HuberRegressor(alpha=0.05, epsilon=1.3)
2025-03-29 14:43:36,762:INFO:create_model() successfully completed......................................
2025-03-29 14:43:36,949:INFO:_master_model_container: 22
2025-03-29 14:43:36,949:INFO:_display_container: 4
2025-03-29 14:43:36,950:INFO:HuberRegressor(alpha=0.05, epsilon=1.3)
2025-03-29 14:43:36,950:INFO:compare_models() successfully completed......................................
2025-03-29 15:17:29,772:INFO:Initializing predict_model()
2025-03-29 15:17:29,773:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=HuberRegressor(alpha=0.05, epsilon=1.3), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018FC6D41580>)
2025-03-29 15:17:29,773:INFO:Checking exceptions
2025-03-29 15:17:29,773:INFO:Preloading libraries
2025-03-29 15:17:29,989:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-29 15:18:37,883:INFO:Initializing plot_model()
2025-03-29 15:18:37,883:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=HuberRegressor(alpha=0.05, epsilon=1.3), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-03-29 15:18:37,883:INFO:Checking exceptions
2025-03-29 15:18:37,891:INFO:Preloading libraries
2025-03-29 15:18:37,893:INFO:Copying training dataset
2025-03-29 15:18:37,893:INFO:Plot type: feature
2025-03-29 15:18:38,139:INFO:Visual Rendered Successfully
2025-03-29 15:18:38,339:INFO:plot_model() successfully completed......................................
2025-03-29 15:20:15,106:INFO:Initializing plot_model()
2025-03-29 15:20:15,106:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=HuberRegressor(alpha=0.05, epsilon=1.3), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-03-29 15:20:15,107:INFO:Checking exceptions
2025-03-29 15:20:15,122:INFO:Preloading libraries
2025-03-29 15:20:15,123:INFO:Copying training dataset
2025-03-29 15:20:15,123:INFO:Plot type: residuals
2025-03-29 15:20:15,693:INFO:Fitting Model
2025-03-29 15:20:15,693:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but HuberRegressor was fitted with feature names
  warnings.warn(

2025-03-29 15:20:15,810:INFO:Scoring test/hold-out set
2025-03-29 15:20:17,267:INFO:Visual Rendered Successfully
2025-03-29 15:20:17,549:INFO:plot_model() successfully completed......................................
2025-03-29 15:21:29,574:INFO:Initializing plot_model()
2025-03-29 15:21:29,575:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC66D5A90>, estimator=HuberRegressor(alpha=0.05, epsilon=1.3), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-03-29 15:21:29,576:INFO:Checking exceptions
2025-03-29 15:21:29,589:INFO:Preloading libraries
2025-03-29 15:21:29,589:INFO:Copying training dataset
2025-03-29 15:21:29,590:INFO:Plot type: error
2025-03-29 15:21:30,158:INFO:Fitting Model
2025-03-29 15:21:30,158:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but HuberRegressor was fitted with feature names
  warnings.warn(

2025-03-29 15:21:30,158:INFO:Scoring test/hold-out set
2025-03-29 15:21:30,997:INFO:Visual Rendered Successfully
2025-03-29 15:21:31,288:INFO:plot_model() successfully completed......................................
2025-03-29 15:33:07,163:INFO:PyCaret RegressionExperiment
2025-03-29 15:33:07,163:INFO:Logging name: reg-default-name
2025-03-29 15:33:07,163:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-29 15:33:07,163:INFO:version 3.3.2
2025-03-29 15:33:07,165:INFO:Initializing setup()
2025-03-29 15:33:07,165:INFO:self.USI: 54f3
2025-03-29 15:33:07,165:INFO:self._variable_keys: {'_ml_usecase', 'X_train', 'transform_target_param', 'y_test', 'fold_generator', 'n_jobs_param', 'html_param', 'fold_shuffle_param', 'log_plots_param', '_available_plots', 'USI', 'exp_name_log', 'target_param', 'exp_id', 'y', 'seed', 'fold_groups_param', 'idx', 'y_train', 'gpu_n_jobs_param', 'X', 'X_test', 'pipeline', 'memory', 'data', 'gpu_param', 'logging_param'}
2025-03-29 15:33:07,165:INFO:Checking environment
2025-03-29 15:33:07,165:INFO:python_version: 3.11.11
2025-03-29 15:33:07,165:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-03-29 15:33:07,165:INFO:machine: AMD64
2025-03-29 15:33:07,165:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-29 15:33:07,169:INFO:Memory: svmem(total=16943763456, available=5615603712, percent=66.9, used=11328159744, free=5615603712)
2025-03-29 15:33:07,169:INFO:Physical Core: 4
2025-03-29 15:33:07,169:INFO:Logical Core: 8
2025-03-29 15:33:07,169:INFO:Checking libraries
2025-03-29 15:33:07,169:INFO:System:
2025-03-29 15:33:07,169:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-03-29 15:33:07,169:INFO:executable: c:\Users\kgust\miniconda3\envs\halfmarathon_time\python.exe
2025-03-29 15:33:07,169:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-29 15:33:07,169:INFO:PyCaret required dependencies:
2025-03-29 15:33:07,169:INFO:                 pip: 25.0
2025-03-29 15:33:07,169:INFO:          setuptools: 75.8.0
2025-03-29 15:33:07,169:INFO:             pycaret: 3.3.2
2025-03-29 15:33:07,171:INFO:             IPython: 9.0.2
2025-03-29 15:33:07,171:INFO:          ipywidgets: 8.1.5
2025-03-29 15:33:07,171:INFO:                tqdm: 4.67.1
2025-03-29 15:33:07,171:INFO:               numpy: 1.26.4
2025-03-29 15:33:07,171:INFO:              pandas: 2.1.4
2025-03-29 15:33:07,171:INFO:              jinja2: 3.1.6
2025-03-29 15:33:07,171:INFO:               scipy: 1.11.4
2025-03-29 15:33:07,171:INFO:              joblib: 1.3.2
2025-03-29 15:33:07,171:INFO:             sklearn: 1.4.2
2025-03-29 15:33:07,171:INFO:                pyod: 2.0.4
2025-03-29 15:33:07,171:INFO:            imblearn: 0.13.0
2025-03-29 15:33:07,171:INFO:   category_encoders: 2.7.0
2025-03-29 15:33:07,171:INFO:            lightgbm: 4.6.0
2025-03-29 15:33:07,171:INFO:               numba: 0.61.0
2025-03-29 15:33:07,171:INFO:            requests: 2.32.3
2025-03-29 15:33:07,171:INFO:          matplotlib: 3.7.5
2025-03-29 15:33:07,171:INFO:          scikitplot: 0.3.7
2025-03-29 15:33:07,171:INFO:         yellowbrick: 1.5
2025-03-29 15:33:07,172:INFO:              plotly: 5.24.1
2025-03-29 15:33:07,172:INFO:    plotly-resampler: Not installed
2025-03-29 15:33:07,172:INFO:             kaleido: 0.2.1
2025-03-29 15:33:07,172:INFO:           schemdraw: 0.15
2025-03-29 15:33:07,172:INFO:         statsmodels: 0.14.4
2025-03-29 15:33:07,172:INFO:              sktime: 0.26.0
2025-03-29 15:33:07,172:INFO:               tbats: 1.1.3
2025-03-29 15:33:07,172:INFO:            pmdarima: 2.0.4
2025-03-29 15:33:07,172:INFO:              psutil: 7.0.0
2025-03-29 15:33:07,172:INFO:          markupsafe: 3.0.2
2025-03-29 15:33:07,172:INFO:             pickle5: Not installed
2025-03-29 15:33:07,172:INFO:         cloudpickle: 3.1.1
2025-03-29 15:33:07,172:INFO:         deprecation: 2.1.0
2025-03-29 15:33:07,172:INFO:              xxhash: 3.5.0
2025-03-29 15:33:07,172:INFO:           wurlitzer: Not installed
2025-03-29 15:33:07,172:INFO:PyCaret optional dependencies:
2025-03-29 15:33:07,173:INFO:                shap: Not installed
2025-03-29 15:33:07,173:INFO:           interpret: Not installed
2025-03-29 15:33:07,173:INFO:                umap: Not installed
2025-03-29 15:33:07,173:INFO:     ydata_profiling: Not installed
2025-03-29 15:33:07,173:INFO:  explainerdashboard: Not installed
2025-03-29 15:33:07,173:INFO:             autoviz: Not installed
2025-03-29 15:33:07,173:INFO:           fairlearn: Not installed
2025-03-29 15:33:07,173:INFO:          deepchecks: Not installed
2025-03-29 15:33:07,173:INFO:             xgboost: Not installed
2025-03-29 15:33:07,173:INFO:            catboost: Not installed
2025-03-29 15:33:07,173:INFO:              kmodes: Not installed
2025-03-29 15:33:07,173:INFO:             mlxtend: Not installed
2025-03-29 15:33:07,173:INFO:       statsforecast: Not installed
2025-03-29 15:33:07,173:INFO:        tune_sklearn: Not installed
2025-03-29 15:33:07,173:INFO:                 ray: Not installed
2025-03-29 15:33:07,173:INFO:            hyperopt: Not installed
2025-03-29 15:33:07,174:INFO:              optuna: Not installed
2025-03-29 15:33:07,174:INFO:               skopt: Not installed
2025-03-29 15:33:07,174:INFO:              mlflow: Not installed
2025-03-29 15:33:07,174:INFO:              gradio: Not installed
2025-03-29 15:33:07,174:INFO:             fastapi: Not installed
2025-03-29 15:33:07,174:INFO:             uvicorn: Not installed
2025-03-29 15:33:07,174:INFO:              m2cgen: Not installed
2025-03-29 15:33:07,174:INFO:           evidently: Not installed
2025-03-29 15:33:07,174:INFO:               fugue: Not installed
2025-03-29 15:33:07,174:INFO:           streamlit: 1.44.0
2025-03-29 15:33:07,174:INFO:             prophet: Not installed
2025-03-29 15:33:07,174:INFO:None
2025-03-29 15:33:07,174:INFO:Set up data.
2025-03-29 15:33:07,187:INFO:Set up folding strategy.
2025-03-29 15:33:07,187:INFO:Set up train/test split.
2025-03-29 15:33:07,197:INFO:Set up index.
2025-03-29 15:33:07,197:INFO:Assigning column types.
2025-03-29 15:33:07,201:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-29 15:33:07,202:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-29 15:33:07,206:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-29 15:33:07,210:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 15:33:07,270:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 15:33:07,311:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 15:33:07,311:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:07,311:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:07,312:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-29 15:33:07,316:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-29 15:33:07,321:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 15:33:07,382:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 15:33:07,474:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 15:33:07,475:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:07,476:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:07,476:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-29 15:33:07,482:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-29 15:33:07,490:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 15:33:07,558:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 15:33:07,599:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 15:33:07,599:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:07,600:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:07,605:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-29 15:33:07,609:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 15:33:07,666:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 15:33:07,708:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 15:33:07,708:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:07,709:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:07,709:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-29 15:33:07,717:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 15:33:07,770:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 15:33:07,812:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 15:33:07,812:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:07,812:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:07,821:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 15:33:07,874:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 15:33:07,921:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 15:33:07,921:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:07,921:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:07,922:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-29 15:33:07,984:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 15:33:08,026:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 15:33:08,026:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:08,027:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:08,092:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 15:33:08,146:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 15:33:08,146:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:08,146:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:08,147:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-29 15:33:08,218:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 15:33:08,260:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:08,260:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:08,320:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 15:33:08,367:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:08,368:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:08,368:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-29 15:33:08,474:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:08,475:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:08,577:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:08,577:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:08,578:INFO:Preparing preprocessing pipeline...
2025-03-29 15:33:08,578:INFO:Set up simple imputation.
2025-03-29 15:33:08,581:INFO:Set up encoding of ordinal features.
2025-03-29 15:33:08,583:INFO:Set up encoding of categorical features.
2025-03-29 15:33:08,585:INFO:Set up column name cleaning.
2025-03-29 15:33:08,658:INFO:Finished creating preprocessing pipeline.
2025-03-29 15:33:08,678:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\kgust\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-29 15:33:08,678:INFO:Creating final display dataframe.
2025-03-29 15:33:08,831:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target              Czas
2                   Target type        Regression
3           Original data shape       (17575, 13)
4        Transformed data shape        (17575, 5)
5   Transformed train set shape        (12302, 5)
6    Transformed test set shape         (5273, 5)
7               Ignore features                 8
8              Numeric features                 3
9          Categorical features                 1
10     Rows with missing values              0.1%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator             KFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  reg-default-name
23                          USI              54f3
2025-03-29 15:33:08,959:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:08,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:09,063:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:09,063:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:33:09,063:INFO:setup() successfully completed in 1.93s...............
2025-03-29 15:33:23,575:INFO:Initializing compare_models()
2025-03-29 15:33:23,576:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC6EFC810>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000018FC6EFC810>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-03-29 15:33:23,576:INFO:Checking exceptions
2025-03-29 15:33:23,582:INFO:Preparing display monitor
2025-03-29 15:33:23,619:INFO:Initializing Linear Regression
2025-03-29 15:33:23,619:INFO:Total runtime is 0.0 minutes
2025-03-29 15:33:23,625:INFO:SubProcess create_model() called ==================================
2025-03-29 15:33:23,626:INFO:Initializing create_model()
2025-03-29 15:33:23,626:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC6EFC810>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC70040D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:33:23,626:INFO:Checking exceptions
2025-03-29 15:33:23,626:INFO:Importing libraries
2025-03-29 15:33:23,627:INFO:Copying training dataset
2025-03-29 15:33:23,637:INFO:Defining folds
2025-03-29 15:33:23,637:INFO:Declaring metric variables
2025-03-29 15:33:23,641:INFO:Importing untrained model
2025-03-29 15:33:23,648:INFO:Linear Regression Imported successfully
2025-03-29 15:33:23,657:INFO:Starting cross validation
2025-03-29 15:33:23,659:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:33:31,452:INFO:Calculating mean and std
2025-03-29 15:33:31,456:INFO:Creating metrics dataframe
2025-03-29 15:33:31,461:INFO:Uploading results into container
2025-03-29 15:33:31,463:INFO:Uploading model into container now
2025-03-29 15:33:31,464:INFO:_master_model_container: 1
2025-03-29 15:33:31,464:INFO:_display_container: 2
2025-03-29 15:33:31,464:INFO:LinearRegression(n_jobs=-1)
2025-03-29 15:33:31,465:INFO:create_model() successfully completed......................................
2025-03-29 15:33:31,766:INFO:SubProcess create_model() end ==================================
2025-03-29 15:33:31,766:INFO:Creating metrics dataframe
2025-03-29 15:33:31,776:INFO:Initializing Lasso Regression
2025-03-29 15:33:31,777:INFO:Total runtime is 0.13596145311991373 minutes
2025-03-29 15:33:31,781:INFO:SubProcess create_model() called ==================================
2025-03-29 15:33:31,782:INFO:Initializing create_model()
2025-03-29 15:33:31,782:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC6EFC810>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC70040D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:33:31,782:INFO:Checking exceptions
2025-03-29 15:33:31,782:INFO:Importing libraries
2025-03-29 15:33:31,783:INFO:Copying training dataset
2025-03-29 15:33:31,793:INFO:Defining folds
2025-03-29 15:33:31,793:INFO:Declaring metric variables
2025-03-29 15:33:31,799:INFO:Importing untrained model
2025-03-29 15:33:31,804:INFO:Lasso Regression Imported successfully
2025-03-29 15:33:31,815:INFO:Starting cross validation
2025-03-29 15:33:31,816:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:33:32,038:INFO:Calculating mean and std
2025-03-29 15:33:32,041:INFO:Creating metrics dataframe
2025-03-29 15:33:32,046:INFO:Uploading results into container
2025-03-29 15:33:32,048:INFO:Uploading model into container now
2025-03-29 15:33:32,049:INFO:_master_model_container: 2
2025-03-29 15:33:32,051:INFO:_display_container: 2
2025-03-29 15:33:32,053:INFO:Lasso(random_state=123)
2025-03-29 15:33:32,053:INFO:create_model() successfully completed......................................
2025-03-29 15:33:32,275:INFO:SubProcess create_model() end ==================================
2025-03-29 15:33:32,275:INFO:Creating metrics dataframe
2025-03-29 15:33:32,288:INFO:Initializing Ridge Regression
2025-03-29 15:33:32,288:INFO:Total runtime is 0.1444697618484497 minutes
2025-03-29 15:33:32,293:INFO:SubProcess create_model() called ==================================
2025-03-29 15:33:32,293:INFO:Initializing create_model()
2025-03-29 15:33:32,293:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC6EFC810>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC70040D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:33:32,293:INFO:Checking exceptions
2025-03-29 15:33:32,294:INFO:Importing libraries
2025-03-29 15:33:32,294:INFO:Copying training dataset
2025-03-29 15:33:32,307:INFO:Defining folds
2025-03-29 15:33:32,308:INFO:Declaring metric variables
2025-03-29 15:33:32,315:INFO:Importing untrained model
2025-03-29 15:33:32,321:INFO:Ridge Regression Imported successfully
2025-03-29 15:33:32,331:INFO:Starting cross validation
2025-03-29 15:33:32,333:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:33:32,544:INFO:Calculating mean and std
2025-03-29 15:33:32,545:INFO:Creating metrics dataframe
2025-03-29 15:33:32,547:INFO:Uploading results into container
2025-03-29 15:33:32,547:INFO:Uploading model into container now
2025-03-29 15:33:32,548:INFO:_master_model_container: 3
2025-03-29 15:33:32,548:INFO:_display_container: 2
2025-03-29 15:33:32,548:INFO:Ridge(random_state=123)
2025-03-29 15:33:32,548:INFO:create_model() successfully completed......................................
2025-03-29 15:33:32,744:INFO:SubProcess create_model() end ==================================
2025-03-29 15:33:32,744:INFO:Creating metrics dataframe
2025-03-29 15:33:32,760:INFO:Initializing Elastic Net
2025-03-29 15:33:32,761:INFO:Total runtime is 0.1523620327313741 minutes
2025-03-29 15:33:32,767:INFO:SubProcess create_model() called ==================================
2025-03-29 15:33:32,767:INFO:Initializing create_model()
2025-03-29 15:33:32,769:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC6EFC810>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC70040D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:33:32,769:INFO:Checking exceptions
2025-03-29 15:33:32,769:INFO:Importing libraries
2025-03-29 15:33:32,769:INFO:Copying training dataset
2025-03-29 15:33:32,780:INFO:Defining folds
2025-03-29 15:33:32,780:INFO:Declaring metric variables
2025-03-29 15:33:32,787:INFO:Importing untrained model
2025-03-29 15:33:32,794:INFO:Elastic Net Imported successfully
2025-03-29 15:33:32,805:INFO:Starting cross validation
2025-03-29 15:33:32,807:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:33:33,015:INFO:Calculating mean and std
2025-03-29 15:33:33,016:INFO:Creating metrics dataframe
2025-03-29 15:33:33,018:INFO:Uploading results into container
2025-03-29 15:33:33,019:INFO:Uploading model into container now
2025-03-29 15:33:33,019:INFO:_master_model_container: 4
2025-03-29 15:33:33,019:INFO:_display_container: 2
2025-03-29 15:33:33,020:INFO:ElasticNet(random_state=123)
2025-03-29 15:33:33,020:INFO:create_model() successfully completed......................................
2025-03-29 15:33:33,219:INFO:SubProcess create_model() end ==================================
2025-03-29 15:33:33,219:INFO:Creating metrics dataframe
2025-03-29 15:33:33,236:INFO:Initializing Least Angle Regression
2025-03-29 15:33:33,237:INFO:Total runtime is 0.16029461224873862 minutes
2025-03-29 15:33:33,243:INFO:SubProcess create_model() called ==================================
2025-03-29 15:33:33,244:INFO:Initializing create_model()
2025-03-29 15:33:33,244:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC6EFC810>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC70040D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:33:33,244:INFO:Checking exceptions
2025-03-29 15:33:33,244:INFO:Importing libraries
2025-03-29 15:33:33,244:INFO:Copying training dataset
2025-03-29 15:33:33,256:INFO:Defining folds
2025-03-29 15:33:33,256:INFO:Declaring metric variables
2025-03-29 15:33:33,261:INFO:Importing untrained model
2025-03-29 15:33:33,268:INFO:Least Angle Regression Imported successfully
2025-03-29 15:33:33,279:INFO:Starting cross validation
2025-03-29 15:33:33,280:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:33:33,492:INFO:Calculating mean and std
2025-03-29 15:33:33,493:INFO:Creating metrics dataframe
2025-03-29 15:33:33,495:INFO:Uploading results into container
2025-03-29 15:33:33,495:INFO:Uploading model into container now
2025-03-29 15:33:33,496:INFO:_master_model_container: 5
2025-03-29 15:33:33,496:INFO:_display_container: 2
2025-03-29 15:33:33,496:INFO:Lars(random_state=123)
2025-03-29 15:33:33,496:INFO:create_model() successfully completed......................................
2025-03-29 15:33:33,703:INFO:SubProcess create_model() end ==================================
2025-03-29 15:33:33,703:INFO:Creating metrics dataframe
2025-03-29 15:33:33,720:INFO:Initializing Lasso Least Angle Regression
2025-03-29 15:33:33,720:INFO:Total runtime is 0.1683481057484945 minutes
2025-03-29 15:33:33,727:INFO:SubProcess create_model() called ==================================
2025-03-29 15:33:33,727:INFO:Initializing create_model()
2025-03-29 15:33:33,727:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC6EFC810>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC70040D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:33:33,728:INFO:Checking exceptions
2025-03-29 15:33:33,728:INFO:Importing libraries
2025-03-29 15:33:33,728:INFO:Copying training dataset
2025-03-29 15:33:33,739:INFO:Defining folds
2025-03-29 15:33:33,739:INFO:Declaring metric variables
2025-03-29 15:33:33,745:INFO:Importing untrained model
2025-03-29 15:33:33,753:INFO:Lasso Least Angle Regression Imported successfully
2025-03-29 15:33:33,764:INFO:Starting cross validation
2025-03-29 15:33:33,766:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:33:33,973:INFO:Calculating mean and std
2025-03-29 15:33:33,975:INFO:Creating metrics dataframe
2025-03-29 15:33:33,976:INFO:Uploading results into container
2025-03-29 15:33:33,977:INFO:Uploading model into container now
2025-03-29 15:33:33,977:INFO:_master_model_container: 6
2025-03-29 15:33:33,977:INFO:_display_container: 2
2025-03-29 15:33:33,978:INFO:LassoLars(random_state=123)
2025-03-29 15:33:33,978:INFO:create_model() successfully completed......................................
2025-03-29 15:33:34,182:INFO:SubProcess create_model() end ==================================
2025-03-29 15:33:34,182:INFO:Creating metrics dataframe
2025-03-29 15:33:34,200:INFO:Initializing Orthogonal Matching Pursuit
2025-03-29 15:33:34,200:INFO:Total runtime is 0.17633970578511557 minutes
2025-03-29 15:33:34,207:INFO:SubProcess create_model() called ==================================
2025-03-29 15:33:34,208:INFO:Initializing create_model()
2025-03-29 15:33:34,208:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC6EFC810>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC70040D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:33:34,208:INFO:Checking exceptions
2025-03-29 15:33:34,208:INFO:Importing libraries
2025-03-29 15:33:34,208:INFO:Copying training dataset
2025-03-29 15:33:34,219:INFO:Defining folds
2025-03-29 15:33:34,219:INFO:Declaring metric variables
2025-03-29 15:33:34,226:INFO:Importing untrained model
2025-03-29 15:33:34,231:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-29 15:33:34,243:INFO:Starting cross validation
2025-03-29 15:33:34,245:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:33:34,447:INFO:Calculating mean and std
2025-03-29 15:33:34,448:INFO:Creating metrics dataframe
2025-03-29 15:33:34,450:INFO:Uploading results into container
2025-03-29 15:33:34,452:INFO:Uploading model into container now
2025-03-29 15:33:34,452:INFO:_master_model_container: 7
2025-03-29 15:33:34,452:INFO:_display_container: 2
2025-03-29 15:33:34,452:INFO:OrthogonalMatchingPursuit()
2025-03-29 15:33:34,452:INFO:create_model() successfully completed......................................
2025-03-29 15:33:34,652:INFO:SubProcess create_model() end ==================================
2025-03-29 15:33:34,652:INFO:Creating metrics dataframe
2025-03-29 15:33:34,671:INFO:Initializing Bayesian Ridge
2025-03-29 15:33:34,671:INFO:Total runtime is 0.18418598572413128 minutes
2025-03-29 15:33:34,677:INFO:SubProcess create_model() called ==================================
2025-03-29 15:33:34,678:INFO:Initializing create_model()
2025-03-29 15:33:34,678:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC6EFC810>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC70040D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:33:34,678:INFO:Checking exceptions
2025-03-29 15:33:34,678:INFO:Importing libraries
2025-03-29 15:33:34,678:INFO:Copying training dataset
2025-03-29 15:33:34,689:INFO:Defining folds
2025-03-29 15:33:34,689:INFO:Declaring metric variables
2025-03-29 15:33:34,695:INFO:Importing untrained model
2025-03-29 15:33:34,702:INFO:Bayesian Ridge Imported successfully
2025-03-29 15:33:34,712:INFO:Starting cross validation
2025-03-29 15:33:34,713:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:33:34,924:INFO:Calculating mean and std
2025-03-29 15:33:34,925:INFO:Creating metrics dataframe
2025-03-29 15:33:34,926:INFO:Uploading results into container
2025-03-29 15:33:34,927:INFO:Uploading model into container now
2025-03-29 15:33:34,927:INFO:_master_model_container: 8
2025-03-29 15:33:34,927:INFO:_display_container: 2
2025-03-29 15:33:34,927:INFO:BayesianRidge()
2025-03-29 15:33:34,928:INFO:create_model() successfully completed......................................
2025-03-29 15:33:35,137:INFO:SubProcess create_model() end ==================================
2025-03-29 15:33:35,137:INFO:Creating metrics dataframe
2025-03-29 15:33:35,155:INFO:Initializing Passive Aggressive Regressor
2025-03-29 15:33:35,156:INFO:Total runtime is 0.1922691067059835 minutes
2025-03-29 15:33:35,162:INFO:SubProcess create_model() called ==================================
2025-03-29 15:33:35,162:INFO:Initializing create_model()
2025-03-29 15:33:35,162:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC6EFC810>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC70040D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:33:35,162:INFO:Checking exceptions
2025-03-29 15:33:35,163:INFO:Importing libraries
2025-03-29 15:33:35,163:INFO:Copying training dataset
2025-03-29 15:33:35,176:INFO:Defining folds
2025-03-29 15:33:35,177:INFO:Declaring metric variables
2025-03-29 15:33:35,184:INFO:Importing untrained model
2025-03-29 15:33:35,190:INFO:Passive Aggressive Regressor Imported successfully
2025-03-29 15:33:35,201:INFO:Starting cross validation
2025-03-29 15:33:35,202:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:33:35,415:INFO:Calculating mean and std
2025-03-29 15:33:35,417:INFO:Creating metrics dataframe
2025-03-29 15:33:35,418:INFO:Uploading results into container
2025-03-29 15:33:35,419:INFO:Uploading model into container now
2025-03-29 15:33:35,419:INFO:_master_model_container: 9
2025-03-29 15:33:35,419:INFO:_display_container: 2
2025-03-29 15:33:35,419:INFO:PassiveAggressiveRegressor(random_state=123)
2025-03-29 15:33:35,420:INFO:create_model() successfully completed......................................
2025-03-29 15:33:35,620:INFO:SubProcess create_model() end ==================================
2025-03-29 15:33:35,620:INFO:Creating metrics dataframe
2025-03-29 15:33:35,636:INFO:Initializing Huber Regressor
2025-03-29 15:33:35,636:INFO:Total runtime is 0.20028483072916667 minutes
2025-03-29 15:33:35,643:INFO:SubProcess create_model() called ==================================
2025-03-29 15:33:35,662:INFO:Initializing create_model()
2025-03-29 15:33:35,662:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC6EFC810>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC70040D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:33:35,662:INFO:Checking exceptions
2025-03-29 15:33:35,662:INFO:Importing libraries
2025-03-29 15:33:35,662:INFO:Copying training dataset
2025-03-29 15:33:35,678:INFO:Defining folds
2025-03-29 15:33:35,678:INFO:Declaring metric variables
2025-03-29 15:33:35,684:INFO:Importing untrained model
2025-03-29 15:33:35,691:INFO:Huber Regressor Imported successfully
2025-03-29 15:33:35,701:INFO:Starting cross validation
2025-03-29 15:33:35,703:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:33:36,088:INFO:Calculating mean and std
2025-03-29 15:33:36,089:INFO:Creating metrics dataframe
2025-03-29 15:33:36,091:INFO:Uploading results into container
2025-03-29 15:33:36,091:INFO:Uploading model into container now
2025-03-29 15:33:36,092:INFO:_master_model_container: 10
2025-03-29 15:33:36,092:INFO:_display_container: 2
2025-03-29 15:33:36,092:INFO:HuberRegressor()
2025-03-29 15:33:36,092:INFO:create_model() successfully completed......................................
2025-03-29 15:33:36,350:INFO:SubProcess create_model() end ==================================
2025-03-29 15:33:36,350:INFO:Creating metrics dataframe
2025-03-29 15:33:36,368:INFO:Initializing K Neighbors Regressor
2025-03-29 15:33:36,368:INFO:Total runtime is 0.21247442166010538 minutes
2025-03-29 15:33:36,374:INFO:SubProcess create_model() called ==================================
2025-03-29 15:33:36,374:INFO:Initializing create_model()
2025-03-29 15:33:36,374:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC6EFC810>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC70040D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:33:36,375:INFO:Checking exceptions
2025-03-29 15:33:36,375:INFO:Importing libraries
2025-03-29 15:33:36,375:INFO:Copying training dataset
2025-03-29 15:33:36,386:INFO:Defining folds
2025-03-29 15:33:36,386:INFO:Declaring metric variables
2025-03-29 15:33:36,392:INFO:Importing untrained model
2025-03-29 15:33:36,399:INFO:K Neighbors Regressor Imported successfully
2025-03-29 15:33:36,410:INFO:Starting cross validation
2025-03-29 15:33:36,411:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:33:36,690:INFO:Calculating mean and std
2025-03-29 15:33:36,691:INFO:Creating metrics dataframe
2025-03-29 15:33:36,693:INFO:Uploading results into container
2025-03-29 15:33:36,693:INFO:Uploading model into container now
2025-03-29 15:33:36,693:INFO:_master_model_container: 11
2025-03-29 15:33:36,693:INFO:_display_container: 2
2025-03-29 15:33:36,694:INFO:KNeighborsRegressor(n_jobs=-1)
2025-03-29 15:33:36,694:INFO:create_model() successfully completed......................................
2025-03-29 15:33:36,906:INFO:SubProcess create_model() end ==================================
2025-03-29 15:33:36,906:INFO:Creating metrics dataframe
2025-03-29 15:33:36,922:INFO:Initializing Decision Tree Regressor
2025-03-29 15:33:36,922:INFO:Total runtime is 0.22171237071355185 minutes
2025-03-29 15:33:36,929:INFO:SubProcess create_model() called ==================================
2025-03-29 15:33:36,929:INFO:Initializing create_model()
2025-03-29 15:33:36,930:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC6EFC810>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC70040D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:33:36,930:INFO:Checking exceptions
2025-03-29 15:33:36,930:INFO:Importing libraries
2025-03-29 15:33:36,930:INFO:Copying training dataset
2025-03-29 15:33:36,942:INFO:Defining folds
2025-03-29 15:33:36,942:INFO:Declaring metric variables
2025-03-29 15:33:36,948:INFO:Importing untrained model
2025-03-29 15:33:36,955:INFO:Decision Tree Regressor Imported successfully
2025-03-29 15:33:36,966:INFO:Starting cross validation
2025-03-29 15:33:36,968:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:33:37,253:INFO:Calculating mean and std
2025-03-29 15:33:37,254:INFO:Creating metrics dataframe
2025-03-29 15:33:37,257:INFO:Uploading results into container
2025-03-29 15:33:37,257:INFO:Uploading model into container now
2025-03-29 15:33:37,258:INFO:_master_model_container: 12
2025-03-29 15:33:37,258:INFO:_display_container: 2
2025-03-29 15:33:37,258:INFO:DecisionTreeRegressor(random_state=123)
2025-03-29 15:33:37,258:INFO:create_model() successfully completed......................................
2025-03-29 15:33:37,453:INFO:SubProcess create_model() end ==================================
2025-03-29 15:33:37,453:INFO:Creating metrics dataframe
2025-03-29 15:33:37,470:INFO:Initializing Random Forest Regressor
2025-03-29 15:33:37,470:INFO:Total runtime is 0.23085016409556072 minutes
2025-03-29 15:33:37,477:INFO:SubProcess create_model() called ==================================
2025-03-29 15:33:37,478:INFO:Initializing create_model()
2025-03-29 15:33:37,478:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC6EFC810>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC70040D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:33:37,479:INFO:Checking exceptions
2025-03-29 15:33:37,479:INFO:Importing libraries
2025-03-29 15:33:37,479:INFO:Copying training dataset
2025-03-29 15:33:37,490:INFO:Defining folds
2025-03-29 15:33:37,490:INFO:Declaring metric variables
2025-03-29 15:33:37,496:INFO:Importing untrained model
2025-03-29 15:33:37,504:INFO:Random Forest Regressor Imported successfully
2025-03-29 15:33:37,514:INFO:Starting cross validation
2025-03-29 15:33:37,516:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:33:43,570:INFO:Calculating mean and std
2025-03-29 15:33:43,572:INFO:Creating metrics dataframe
2025-03-29 15:33:43,575:INFO:Uploading results into container
2025-03-29 15:33:43,576:INFO:Uploading model into container now
2025-03-29 15:33:43,578:INFO:_master_model_container: 13
2025-03-29 15:33:43,578:INFO:_display_container: 2
2025-03-29 15:33:43,580:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-03-29 15:33:43,580:INFO:create_model() successfully completed......................................
2025-03-29 15:33:43,817:INFO:SubProcess create_model() end ==================================
2025-03-29 15:33:43,818:INFO:Creating metrics dataframe
2025-03-29 15:33:43,834:INFO:Initializing Extra Trees Regressor
2025-03-29 15:33:43,834:INFO:Total runtime is 0.3369147062301636 minutes
2025-03-29 15:33:43,839:INFO:SubProcess create_model() called ==================================
2025-03-29 15:33:43,839:INFO:Initializing create_model()
2025-03-29 15:33:43,839:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC6EFC810>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC70040D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:33:43,839:INFO:Checking exceptions
2025-03-29 15:33:43,839:INFO:Importing libraries
2025-03-29 15:33:43,839:INFO:Copying training dataset
2025-03-29 15:33:43,851:INFO:Defining folds
2025-03-29 15:33:43,851:INFO:Declaring metric variables
2025-03-29 15:33:43,856:INFO:Importing untrained model
2025-03-29 15:33:43,863:INFO:Extra Trees Regressor Imported successfully
2025-03-29 15:33:43,876:INFO:Starting cross validation
2025-03-29 15:33:43,877:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:33:47,957:INFO:Calculating mean and std
2025-03-29 15:33:47,959:INFO:Creating metrics dataframe
2025-03-29 15:33:47,961:INFO:Uploading results into container
2025-03-29 15:33:47,962:INFO:Uploading model into container now
2025-03-29 15:33:47,962:INFO:_master_model_container: 14
2025-03-29 15:33:47,962:INFO:_display_container: 2
2025-03-29 15:33:47,963:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-03-29 15:33:47,963:INFO:create_model() successfully completed......................................
2025-03-29 15:33:48,172:INFO:SubProcess create_model() end ==================================
2025-03-29 15:33:48,172:INFO:Creating metrics dataframe
2025-03-29 15:33:48,196:INFO:Initializing AdaBoost Regressor
2025-03-29 15:33:48,196:INFO:Total runtime is 0.4096150676409404 minutes
2025-03-29 15:33:48,204:INFO:SubProcess create_model() called ==================================
2025-03-29 15:33:48,206:INFO:Initializing create_model()
2025-03-29 15:33:48,206:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC6EFC810>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC70040D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:33:48,206:INFO:Checking exceptions
2025-03-29 15:33:48,206:INFO:Importing libraries
2025-03-29 15:33:48,207:INFO:Copying training dataset
2025-03-29 15:33:48,225:INFO:Defining folds
2025-03-29 15:33:48,226:INFO:Declaring metric variables
2025-03-29 15:33:48,234:INFO:Importing untrained model
2025-03-29 15:33:48,244:INFO:AdaBoost Regressor Imported successfully
2025-03-29 15:33:48,266:INFO:Starting cross validation
2025-03-29 15:33:48,269:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:33:49,005:INFO:Calculating mean and std
2025-03-29 15:33:49,006:INFO:Creating metrics dataframe
2025-03-29 15:33:49,007:INFO:Uploading results into container
2025-03-29 15:33:49,008:INFO:Uploading model into container now
2025-03-29 15:33:49,008:INFO:_master_model_container: 15
2025-03-29 15:33:49,008:INFO:_display_container: 2
2025-03-29 15:33:49,009:INFO:AdaBoostRegressor(random_state=123)
2025-03-29 15:33:49,009:INFO:create_model() successfully completed......................................
2025-03-29 15:33:49,239:INFO:SubProcess create_model() end ==================================
2025-03-29 15:33:49,239:INFO:Creating metrics dataframe
2025-03-29 15:33:49,261:INFO:Initializing Gradient Boosting Regressor
2025-03-29 15:33:49,261:INFO:Total runtime is 0.4273539781570435 minutes
2025-03-29 15:33:49,266:INFO:SubProcess create_model() called ==================================
2025-03-29 15:33:49,267:INFO:Initializing create_model()
2025-03-29 15:33:49,267:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC6EFC810>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC70040D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:33:49,267:INFO:Checking exceptions
2025-03-29 15:33:49,267:INFO:Importing libraries
2025-03-29 15:33:49,267:INFO:Copying training dataset
2025-03-29 15:33:49,317:INFO:Defining folds
2025-03-29 15:33:49,319:INFO:Declaring metric variables
2025-03-29 15:33:49,326:INFO:Importing untrained model
2025-03-29 15:33:49,335:INFO:Gradient Boosting Regressor Imported successfully
2025-03-29 15:33:49,360:INFO:Starting cross validation
2025-03-29 15:33:49,361:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:33:51,502:INFO:Calculating mean and std
2025-03-29 15:33:51,505:INFO:Creating metrics dataframe
2025-03-29 15:33:51,508:INFO:Uploading results into container
2025-03-29 15:33:51,508:INFO:Uploading model into container now
2025-03-29 15:33:51,509:INFO:_master_model_container: 16
2025-03-29 15:33:51,509:INFO:_display_container: 2
2025-03-29 15:33:51,509:INFO:GradientBoostingRegressor(random_state=123)
2025-03-29 15:33:51,509:INFO:create_model() successfully completed......................................
2025-03-29 15:33:51,717:INFO:SubProcess create_model() end ==================================
2025-03-29 15:33:51,717:INFO:Creating metrics dataframe
2025-03-29 15:33:51,738:INFO:Initializing Light Gradient Boosting Machine
2025-03-29 15:33:51,738:INFO:Total runtime is 0.4686473727226258 minutes
2025-03-29 15:33:51,743:INFO:SubProcess create_model() called ==================================
2025-03-29 15:33:51,743:INFO:Initializing create_model()
2025-03-29 15:33:51,744:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC6EFC810>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC70040D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:33:51,744:INFO:Checking exceptions
2025-03-29 15:33:51,744:INFO:Importing libraries
2025-03-29 15:33:51,744:INFO:Copying training dataset
2025-03-29 15:33:51,756:INFO:Defining folds
2025-03-29 15:33:51,756:INFO:Declaring metric variables
2025-03-29 15:33:51,762:INFO:Importing untrained model
2025-03-29 15:33:51,770:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-29 15:33:51,782:INFO:Starting cross validation
2025-03-29 15:33:51,784:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:33:52,984:INFO:Calculating mean and std
2025-03-29 15:33:52,986:INFO:Creating metrics dataframe
2025-03-29 15:33:52,988:INFO:Uploading results into container
2025-03-29 15:33:52,989:INFO:Uploading model into container now
2025-03-29 15:33:52,990:INFO:_master_model_container: 17
2025-03-29 15:33:52,990:INFO:_display_container: 2
2025-03-29 15:33:52,991:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-03-29 15:33:52,991:INFO:create_model() successfully completed......................................
2025-03-29 15:33:53,196:INFO:SubProcess create_model() end ==================================
2025-03-29 15:33:53,196:INFO:Creating metrics dataframe
2025-03-29 15:33:53,222:INFO:Initializing Dummy Regressor
2025-03-29 15:33:53,222:INFO:Total runtime is 0.49337501128514616 minutes
2025-03-29 15:33:53,229:INFO:SubProcess create_model() called ==================================
2025-03-29 15:33:53,229:INFO:Initializing create_model()
2025-03-29 15:33:53,231:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC6EFC810>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC70040D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:33:53,231:INFO:Checking exceptions
2025-03-29 15:33:53,231:INFO:Importing libraries
2025-03-29 15:33:53,231:INFO:Copying training dataset
2025-03-29 15:33:53,248:INFO:Defining folds
2025-03-29 15:33:53,249:INFO:Declaring metric variables
2025-03-29 15:33:53,258:INFO:Importing untrained model
2025-03-29 15:33:53,268:INFO:Dummy Regressor Imported successfully
2025-03-29 15:33:53,287:INFO:Starting cross validation
2025-03-29 15:33:53,290:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:33:53,551:INFO:Calculating mean and std
2025-03-29 15:33:53,552:INFO:Creating metrics dataframe
2025-03-29 15:33:53,554:INFO:Uploading results into container
2025-03-29 15:33:53,555:INFO:Uploading model into container now
2025-03-29 15:33:53,555:INFO:_master_model_container: 18
2025-03-29 15:33:53,555:INFO:_display_container: 2
2025-03-29 15:33:53,555:INFO:DummyRegressor()
2025-03-29 15:33:53,555:INFO:create_model() successfully completed......................................
2025-03-29 15:33:53,763:INFO:SubProcess create_model() end ==================================
2025-03-29 15:33:53,763:INFO:Creating metrics dataframe
2025-03-29 15:33:53,785:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-03-29 15:33:53,799:INFO:Initializing create_model()
2025-03-29 15:33:53,799:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC6EFC810>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:33:53,799:INFO:Checking exceptions
2025-03-29 15:33:53,803:INFO:Importing libraries
2025-03-29 15:33:53,803:INFO:Copying training dataset
2025-03-29 15:33:53,813:INFO:Defining folds
2025-03-29 15:33:53,813:INFO:Declaring metric variables
2025-03-29 15:33:53,813:INFO:Importing untrained model
2025-03-29 15:33:53,813:INFO:Declaring custom model
2025-03-29 15:33:53,814:INFO:Huber Regressor Imported successfully
2025-03-29 15:33:53,815:INFO:Cross validation set to False
2025-03-29 15:33:53,815:INFO:Fitting Model
2025-03-29 15:33:54,078:INFO:HuberRegressor()
2025-03-29 15:33:54,079:INFO:create_model() successfully completed......................................
2025-03-29 15:33:54,326:INFO:_master_model_container: 18
2025-03-29 15:33:54,326:INFO:_display_container: 2
2025-03-29 15:33:54,327:INFO:HuberRegressor()
2025-03-29 15:33:54,327:INFO:compare_models() successfully completed......................................
2025-03-29 15:34:47,104:INFO:Initializing tune_model()
2025-03-29 15:34:47,105:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC6EFC810>, estimator=HuberRegressor(), fold=None, round=4, n_iter=200, custom_grid=None, optimize=MAE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-03-29 15:34:47,105:INFO:Checking exceptions
2025-03-29 15:34:47,134:INFO:Copying training dataset
2025-03-29 15:34:47,144:INFO:Checking base model
2025-03-29 15:34:47,144:INFO:Base model : Huber Regressor
2025-03-29 15:34:47,149:INFO:Declaring metric variables
2025-03-29 15:34:47,157:INFO:Defining Hyperparameters
2025-03-29 15:34:47,376:INFO:Tuning with n_jobs=-1
2025-03-29 15:34:47,377:INFO:Initializing RandomizedSearchCV
2025-03-29 15:35:00,750:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 15:35:05,013:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 15:35:07,510:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 15:35:15,039:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 15:35:15,143:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 15:35:42,549:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 15:35:45,502:INFO:best_params: {'actual_estimator__fit_intercept': True, 'actual_estimator__epsilon': 1.1, 'actual_estimator__alpha': 0.5}
2025-03-29 15:35:45,503:INFO:Hyperparameter search completed
2025-03-29 15:35:45,503:INFO:SubProcess create_model() called ==================================
2025-03-29 15:35:45,503:INFO:Initializing create_model()
2025-03-29 15:35:45,503:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC6EFC810>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FBA1CDDD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'fit_intercept': True, 'epsilon': 1.1, 'alpha': 0.5})
2025-03-29 15:35:45,503:INFO:Checking exceptions
2025-03-29 15:35:45,505:INFO:Importing libraries
2025-03-29 15:35:45,505:INFO:Copying training dataset
2025-03-29 15:35:45,517:INFO:Defining folds
2025-03-29 15:35:45,517:INFO:Declaring metric variables
2025-03-29 15:35:45,520:INFO:Importing untrained model
2025-03-29 15:35:45,520:INFO:Declaring custom model
2025-03-29 15:35:45,524:INFO:Huber Regressor Imported successfully
2025-03-29 15:35:45,535:INFO:Starting cross validation
2025-03-29 15:35:45,536:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:35:46,020:INFO:Calculating mean and std
2025-03-29 15:35:46,021:INFO:Creating metrics dataframe
2025-03-29 15:35:46,028:INFO:Finalizing model
2025-03-29 15:35:46,265:INFO:Uploading results into container
2025-03-29 15:35:46,265:INFO:Uploading model into container now
2025-03-29 15:35:46,267:INFO:_master_model_container: 19
2025-03-29 15:35:46,267:INFO:_display_container: 3
2025-03-29 15:35:46,268:INFO:HuberRegressor(alpha=0.5, epsilon=1.1)
2025-03-29 15:35:46,268:INFO:create_model() successfully completed......................................
2025-03-29 15:35:46,480:INFO:SubProcess create_model() end ==================================
2025-03-29 15:35:46,480:INFO:choose_better activated
2025-03-29 15:35:46,487:INFO:SubProcess create_model() called ==================================
2025-03-29 15:35:46,487:INFO:Initializing create_model()
2025-03-29 15:35:46,488:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FC6EFC810>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:35:46,488:INFO:Checking exceptions
2025-03-29 15:35:46,491:INFO:Importing libraries
2025-03-29 15:35:46,491:INFO:Copying training dataset
2025-03-29 15:35:46,505:INFO:Defining folds
2025-03-29 15:35:46,506:INFO:Declaring metric variables
2025-03-29 15:35:46,506:INFO:Importing untrained model
2025-03-29 15:35:46,506:INFO:Declaring custom model
2025-03-29 15:35:46,507:INFO:Huber Regressor Imported successfully
2025-03-29 15:35:46,508:INFO:Starting cross validation
2025-03-29 15:35:46,509:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:35:46,906:INFO:Calculating mean and std
2025-03-29 15:35:46,906:INFO:Creating metrics dataframe
2025-03-29 15:35:46,908:INFO:Finalizing model
2025-03-29 15:35:47,234:INFO:Uploading results into container
2025-03-29 15:35:47,235:INFO:Uploading model into container now
2025-03-29 15:35:47,235:INFO:_master_model_container: 20
2025-03-29 15:35:47,235:INFO:_display_container: 4
2025-03-29 15:35:47,235:INFO:HuberRegressor()
2025-03-29 15:35:47,236:INFO:create_model() successfully completed......................................
2025-03-29 15:35:47,434:INFO:SubProcess create_model() end ==================================
2025-03-29 15:35:47,434:INFO:HuberRegressor() result for MAE is 285.378
2025-03-29 15:35:47,435:INFO:HuberRegressor(alpha=0.5, epsilon=1.1) result for MAE is 284.199
2025-03-29 15:35:47,435:INFO:HuberRegressor(alpha=0.5, epsilon=1.1) is best model
2025-03-29 15:35:47,436:INFO:choose_better completed
2025-03-29 15:35:47,458:INFO:_master_model_container: 20
2025-03-29 15:35:47,459:INFO:_display_container: 3
2025-03-29 15:35:47,459:INFO:HuberRegressor(alpha=0.5, epsilon=1.1)
2025-03-29 15:35:47,459:INFO:tune_model() successfully completed......................................
2025-03-29 15:38:33,366:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pandas\plotting\_matplotlib\core.py:1266: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  scatter = ax.scatter(

2025-03-29 15:38:39,757:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pandas\plotting\_matplotlib\core.py:1266: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  scatter = ax.scatter(

2025-03-29 15:38:43,602:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pandas\plotting\_matplotlib\core.py:1266: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  scatter = ax.scatter(

2025-03-29 15:39:00,041:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pandas\plotting\_matplotlib\core.py:1266: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.
  scatter = ax.scatter(

2025-03-29 15:42:11,439:INFO:PyCaret RegressionExperiment
2025-03-29 15:42:11,439:INFO:Logging name: reg-default-name
2025-03-29 15:42:11,439:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-29 15:42:11,439:INFO:version 3.3.2
2025-03-29 15:42:11,439:INFO:Initializing setup()
2025-03-29 15:42:11,439:INFO:self.USI: a275
2025-03-29 15:42:11,439:INFO:self._variable_keys: {'_ml_usecase', 'X_train', 'transform_target_param', 'y_test', 'fold_generator', 'n_jobs_param', 'html_param', 'fold_shuffle_param', 'log_plots_param', '_available_plots', 'USI', 'exp_name_log', 'target_param', 'exp_id', 'y', 'seed', 'fold_groups_param', 'idx', 'y_train', 'gpu_n_jobs_param', 'X', 'X_test', 'pipeline', 'memory', 'data', 'gpu_param', 'logging_param'}
2025-03-29 15:42:11,440:INFO:Checking environment
2025-03-29 15:42:11,440:INFO:python_version: 3.11.11
2025-03-29 15:42:11,440:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-03-29 15:42:11,440:INFO:machine: AMD64
2025-03-29 15:42:11,440:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-29 15:42:11,444:INFO:Memory: svmem(total=16943763456, available=5600436224, percent=66.9, used=11343327232, free=5600436224)
2025-03-29 15:42:11,444:INFO:Physical Core: 4
2025-03-29 15:42:11,444:INFO:Logical Core: 8
2025-03-29 15:42:11,444:INFO:Checking libraries
2025-03-29 15:42:11,444:INFO:System:
2025-03-29 15:42:11,444:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-03-29 15:42:11,444:INFO:executable: c:\Users\kgust\miniconda3\envs\halfmarathon_time\python.exe
2025-03-29 15:42:11,444:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-29 15:42:11,444:INFO:PyCaret required dependencies:
2025-03-29 15:42:11,444:INFO:                 pip: 25.0
2025-03-29 15:42:11,444:INFO:          setuptools: 75.8.0
2025-03-29 15:42:11,445:INFO:             pycaret: 3.3.2
2025-03-29 15:42:11,445:INFO:             IPython: 9.0.2
2025-03-29 15:42:11,445:INFO:          ipywidgets: 8.1.5
2025-03-29 15:42:11,445:INFO:                tqdm: 4.67.1
2025-03-29 15:42:11,445:INFO:               numpy: 1.26.4
2025-03-29 15:42:11,445:INFO:              pandas: 2.1.4
2025-03-29 15:42:11,445:INFO:              jinja2: 3.1.6
2025-03-29 15:42:11,445:INFO:               scipy: 1.11.4
2025-03-29 15:42:11,445:INFO:              joblib: 1.3.2
2025-03-29 15:42:11,445:INFO:             sklearn: 1.4.2
2025-03-29 15:42:11,445:INFO:                pyod: 2.0.4
2025-03-29 15:42:11,445:INFO:            imblearn: 0.13.0
2025-03-29 15:42:11,445:INFO:   category_encoders: 2.7.0
2025-03-29 15:42:11,445:INFO:            lightgbm: 4.6.0
2025-03-29 15:42:11,445:INFO:               numba: 0.61.0
2025-03-29 15:42:11,445:INFO:            requests: 2.32.3
2025-03-29 15:42:11,445:INFO:          matplotlib: 3.7.5
2025-03-29 15:42:11,445:INFO:          scikitplot: 0.3.7
2025-03-29 15:42:11,446:INFO:         yellowbrick: 1.5
2025-03-29 15:42:11,446:INFO:              plotly: 5.24.1
2025-03-29 15:42:11,446:INFO:    plotly-resampler: Not installed
2025-03-29 15:42:11,446:INFO:             kaleido: 0.2.1
2025-03-29 15:42:11,446:INFO:           schemdraw: 0.15
2025-03-29 15:42:11,446:INFO:         statsmodels: 0.14.4
2025-03-29 15:42:11,446:INFO:              sktime: 0.26.0
2025-03-29 15:42:11,446:INFO:               tbats: 1.1.3
2025-03-29 15:42:11,446:INFO:            pmdarima: 2.0.4
2025-03-29 15:42:11,446:INFO:              psutil: 7.0.0
2025-03-29 15:42:11,446:INFO:          markupsafe: 3.0.2
2025-03-29 15:42:11,446:INFO:             pickle5: Not installed
2025-03-29 15:42:11,446:INFO:         cloudpickle: 3.1.1
2025-03-29 15:42:11,446:INFO:         deprecation: 2.1.0
2025-03-29 15:42:11,446:INFO:              xxhash: 3.5.0
2025-03-29 15:42:11,446:INFO:           wurlitzer: Not installed
2025-03-29 15:42:11,446:INFO:PyCaret optional dependencies:
2025-03-29 15:42:11,447:INFO:                shap: Not installed
2025-03-29 15:42:11,447:INFO:           interpret: Not installed
2025-03-29 15:42:11,447:INFO:                umap: Not installed
2025-03-29 15:42:11,447:INFO:     ydata_profiling: Not installed
2025-03-29 15:42:11,447:INFO:  explainerdashboard: Not installed
2025-03-29 15:42:11,447:INFO:             autoviz: Not installed
2025-03-29 15:42:11,447:INFO:           fairlearn: Not installed
2025-03-29 15:42:11,447:INFO:          deepchecks: Not installed
2025-03-29 15:42:11,447:INFO:             xgboost: Not installed
2025-03-29 15:42:11,447:INFO:            catboost: Not installed
2025-03-29 15:42:11,447:INFO:              kmodes: Not installed
2025-03-29 15:42:11,447:INFO:             mlxtend: Not installed
2025-03-29 15:42:11,447:INFO:       statsforecast: Not installed
2025-03-29 15:42:11,447:INFO:        tune_sklearn: Not installed
2025-03-29 15:42:11,447:INFO:                 ray: Not installed
2025-03-29 15:42:11,447:INFO:            hyperopt: Not installed
2025-03-29 15:42:11,447:INFO:              optuna: Not installed
2025-03-29 15:42:11,447:INFO:               skopt: Not installed
2025-03-29 15:42:11,447:INFO:              mlflow: Not installed
2025-03-29 15:42:11,447:INFO:              gradio: Not installed
2025-03-29 15:42:11,447:INFO:             fastapi: Not installed
2025-03-29 15:42:11,447:INFO:             uvicorn: Not installed
2025-03-29 15:42:11,448:INFO:              m2cgen: Not installed
2025-03-29 15:42:11,448:INFO:           evidently: Not installed
2025-03-29 15:42:11,448:INFO:               fugue: Not installed
2025-03-29 15:42:11,448:INFO:           streamlit: 1.44.0
2025-03-29 15:42:11,448:INFO:             prophet: Not installed
2025-03-29 15:42:11,448:INFO:None
2025-03-29 15:42:11,448:INFO:Set up data.
2025-03-29 15:42:11,461:INFO:Set up folding strategy.
2025-03-29 15:42:11,461:INFO:Set up train/test split.
2025-03-29 15:42:11,470:INFO:Set up index.
2025-03-29 15:42:11,471:INFO:Assigning column types.
2025-03-29 15:42:11,476:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-29 15:42:11,476:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-29 15:42:11,481:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-29 15:42:11,486:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 15:42:11,549:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 15:42:11,598:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 15:42:11,599:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:11,599:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:11,600:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-29 15:42:11,605:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-29 15:42:11,611:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 15:42:11,680:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 15:42:11,722:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 15:42:11,722:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:11,722:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:11,724:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-29 15:42:11,728:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-29 15:42:11,732:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 15:42:11,788:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 15:42:11,836:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 15:42:11,837:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:11,837:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:11,844:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-29 15:42:11,849:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 15:42:11,914:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 15:42:11,979:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 15:42:11,979:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:11,979:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:11,980:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-29 15:42:11,990:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 15:42:12,058:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 15:42:12,128:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 15:42:12,130:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:12,130:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:12,147:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-29 15:42:12,240:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 15:42:12,290:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 15:42:12,291:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:12,291:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:12,291:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-29 15:42:12,368:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 15:42:12,415:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 15:42:12,416:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:12,416:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:12,487:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 15:42:12,532:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 15:42:12,533:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:12,534:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:12,534:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-29 15:42:12,599:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 15:42:12,641:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:12,642:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:12,709:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-29 15:42:12,752:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:12,753:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:12,753:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-29 15:42:12,866:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:12,867:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:12,982:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:12,982:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:12,984:INFO:Preparing preprocessing pipeline...
2025-03-29 15:42:12,984:INFO:Set up simple imputation.
2025-03-29 15:42:12,987:INFO:Set up encoding of ordinal features.
2025-03-29 15:42:12,989:INFO:Set up encoding of categorical features.
2025-03-29 15:42:12,990:INFO:Set up column name cleaning.
2025-03-29 15:42:13,052:INFO:Finished creating preprocessing pipeline.
2025-03-29 15:42:13,075:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\kgust\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-03-29 15:42:13,076:INFO:Creating final display dataframe.
2025-03-29 15:42:13,240:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target              Czas
2                   Target type        Regression
3           Original data shape       (17455, 13)
4        Transformed data shape        (17455, 5)
5   Transformed train set shape        (12218, 5)
6    Transformed test set shape         (5237, 5)
7               Ignore features                 8
8              Numeric features                 3
9          Categorical features                 1
10     Rows with missing values              0.1%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator             KFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  reg-default-name
23                          USI              a275
2025-03-29 15:42:13,382:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:13,383:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:13,499:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:13,499:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 15:42:13,500:INFO:setup() successfully completed in 2.11s...............
2025-03-29 15:42:38,907:INFO:Initializing compare_models()
2025-03-29 15:42:38,908:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-03-29 15:42:38,908:INFO:Checking exceptions
2025-03-29 15:42:38,913:INFO:Preparing display monitor
2025-03-29 15:42:38,948:INFO:Initializing Linear Regression
2025-03-29 15:42:38,949:INFO:Total runtime is 1.674493153889974e-05 minutes
2025-03-29 15:42:38,961:INFO:SubProcess create_model() called ==================================
2025-03-29 15:42:38,962:INFO:Initializing create_model()
2025-03-29 15:42:38,962:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC19E46D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:42:38,962:INFO:Checking exceptions
2025-03-29 15:42:38,962:INFO:Importing libraries
2025-03-29 15:42:38,962:INFO:Copying training dataset
2025-03-29 15:42:38,978:INFO:Defining folds
2025-03-29 15:42:38,978:INFO:Declaring metric variables
2025-03-29 15:42:38,985:INFO:Importing untrained model
2025-03-29 15:42:38,991:INFO:Linear Regression Imported successfully
2025-03-29 15:42:39,002:INFO:Starting cross validation
2025-03-29 15:42:39,003:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:42:46,332:INFO:Calculating mean and std
2025-03-29 15:42:46,337:INFO:Creating metrics dataframe
2025-03-29 15:42:46,346:INFO:Uploading results into container
2025-03-29 15:42:46,349:INFO:Uploading model into container now
2025-03-29 15:42:46,350:INFO:_master_model_container: 1
2025-03-29 15:42:46,351:INFO:_display_container: 2
2025-03-29 15:42:46,352:INFO:LinearRegression(n_jobs=-1)
2025-03-29 15:42:46,353:INFO:create_model() successfully completed......................................
2025-03-29 15:42:46,663:INFO:SubProcess create_model() end ==================================
2025-03-29 15:42:46,663:INFO:Creating metrics dataframe
2025-03-29 15:42:46,679:INFO:Initializing Lasso Regression
2025-03-29 15:42:46,679:INFO:Total runtime is 0.12885020971298217 minutes
2025-03-29 15:42:46,686:INFO:SubProcess create_model() called ==================================
2025-03-29 15:42:46,687:INFO:Initializing create_model()
2025-03-29 15:42:46,687:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC19E46D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:42:46,687:INFO:Checking exceptions
2025-03-29 15:42:46,687:INFO:Importing libraries
2025-03-29 15:42:46,687:INFO:Copying training dataset
2025-03-29 15:42:46,699:INFO:Defining folds
2025-03-29 15:42:46,699:INFO:Declaring metric variables
2025-03-29 15:42:46,706:INFO:Importing untrained model
2025-03-29 15:42:46,713:INFO:Lasso Regression Imported successfully
2025-03-29 15:42:46,725:INFO:Starting cross validation
2025-03-29 15:42:46,726:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:42:46,954:INFO:Calculating mean and std
2025-03-29 15:42:46,954:INFO:Creating metrics dataframe
2025-03-29 15:42:46,957:INFO:Uploading results into container
2025-03-29 15:42:46,958:INFO:Uploading model into container now
2025-03-29 15:42:46,958:INFO:_master_model_container: 2
2025-03-29 15:42:46,958:INFO:_display_container: 2
2025-03-29 15:42:46,959:INFO:Lasso(random_state=123)
2025-03-29 15:42:46,959:INFO:create_model() successfully completed......................................
2025-03-29 15:42:47,195:INFO:SubProcess create_model() end ==================================
2025-03-29 15:42:47,196:INFO:Creating metrics dataframe
2025-03-29 15:42:47,210:INFO:Initializing Ridge Regression
2025-03-29 15:42:47,210:INFO:Total runtime is 0.13769033352533974 minutes
2025-03-29 15:42:47,217:INFO:SubProcess create_model() called ==================================
2025-03-29 15:42:47,218:INFO:Initializing create_model()
2025-03-29 15:42:47,219:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC19E46D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:42:47,219:INFO:Checking exceptions
2025-03-29 15:42:47,219:INFO:Importing libraries
2025-03-29 15:42:47,219:INFO:Copying training dataset
2025-03-29 15:42:47,230:INFO:Defining folds
2025-03-29 15:42:47,230:INFO:Declaring metric variables
2025-03-29 15:42:47,238:INFO:Importing untrained model
2025-03-29 15:42:47,245:INFO:Ridge Regression Imported successfully
2025-03-29 15:42:47,259:INFO:Starting cross validation
2025-03-29 15:42:47,262:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:42:47,498:INFO:Calculating mean and std
2025-03-29 15:42:47,500:INFO:Creating metrics dataframe
2025-03-29 15:42:47,502:INFO:Uploading results into container
2025-03-29 15:42:47,503:INFO:Uploading model into container now
2025-03-29 15:42:47,503:INFO:_master_model_container: 3
2025-03-29 15:42:47,503:INFO:_display_container: 2
2025-03-29 15:42:47,504:INFO:Ridge(random_state=123)
2025-03-29 15:42:47,504:INFO:create_model() successfully completed......................................
2025-03-29 15:42:47,722:INFO:SubProcess create_model() end ==================================
2025-03-29 15:42:47,722:INFO:Creating metrics dataframe
2025-03-29 15:42:47,739:INFO:Initializing Elastic Net
2025-03-29 15:42:47,739:INFO:Total runtime is 0.14651608467102048 minutes
2025-03-29 15:42:47,748:INFO:SubProcess create_model() called ==================================
2025-03-29 15:42:47,748:INFO:Initializing create_model()
2025-03-29 15:42:47,748:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC19E46D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:42:47,748:INFO:Checking exceptions
2025-03-29 15:42:47,748:INFO:Importing libraries
2025-03-29 15:42:47,749:INFO:Copying training dataset
2025-03-29 15:42:47,762:INFO:Defining folds
2025-03-29 15:42:47,763:INFO:Declaring metric variables
2025-03-29 15:42:47,770:INFO:Importing untrained model
2025-03-29 15:42:47,776:INFO:Elastic Net Imported successfully
2025-03-29 15:42:47,790:INFO:Starting cross validation
2025-03-29 15:42:47,791:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:42:48,008:INFO:Calculating mean and std
2025-03-29 15:42:48,011:INFO:Creating metrics dataframe
2025-03-29 15:42:48,014:INFO:Uploading results into container
2025-03-29 15:42:48,016:INFO:Uploading model into container now
2025-03-29 15:42:48,017:INFO:_master_model_container: 4
2025-03-29 15:42:48,018:INFO:_display_container: 2
2025-03-29 15:42:48,019:INFO:ElasticNet(random_state=123)
2025-03-29 15:42:48,019:INFO:create_model() successfully completed......................................
2025-03-29 15:42:48,249:INFO:SubProcess create_model() end ==================================
2025-03-29 15:42:48,249:INFO:Creating metrics dataframe
2025-03-29 15:42:48,268:INFO:Initializing Least Angle Regression
2025-03-29 15:42:48,268:INFO:Total runtime is 0.1553290009498596 minutes
2025-03-29 15:42:48,274:INFO:SubProcess create_model() called ==================================
2025-03-29 15:42:48,274:INFO:Initializing create_model()
2025-03-29 15:42:48,275:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC19E46D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:42:48,275:INFO:Checking exceptions
2025-03-29 15:42:48,275:INFO:Importing libraries
2025-03-29 15:42:48,275:INFO:Copying training dataset
2025-03-29 15:42:48,287:INFO:Defining folds
2025-03-29 15:42:48,287:INFO:Declaring metric variables
2025-03-29 15:42:48,295:INFO:Importing untrained model
2025-03-29 15:42:48,300:INFO:Least Angle Regression Imported successfully
2025-03-29 15:42:48,312:INFO:Starting cross validation
2025-03-29 15:42:48,314:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:42:48,536:INFO:Calculating mean and std
2025-03-29 15:42:48,537:INFO:Creating metrics dataframe
2025-03-29 15:42:48,539:INFO:Uploading results into container
2025-03-29 15:42:48,541:INFO:Uploading model into container now
2025-03-29 15:42:48,542:INFO:_master_model_container: 5
2025-03-29 15:42:48,542:INFO:_display_container: 2
2025-03-29 15:42:48,542:INFO:Lars(random_state=123)
2025-03-29 15:42:48,543:INFO:create_model() successfully completed......................................
2025-03-29 15:42:48,734:INFO:SubProcess create_model() end ==================================
2025-03-29 15:42:48,734:INFO:Creating metrics dataframe
2025-03-29 15:42:48,746:INFO:Initializing Lasso Least Angle Regression
2025-03-29 15:42:48,746:INFO:Total runtime is 0.163295046488444 minutes
2025-03-29 15:42:48,753:INFO:SubProcess create_model() called ==================================
2025-03-29 15:42:48,753:INFO:Initializing create_model()
2025-03-29 15:42:48,753:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC19E46D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:42:48,753:INFO:Checking exceptions
2025-03-29 15:42:48,753:INFO:Importing libraries
2025-03-29 15:42:48,755:INFO:Copying training dataset
2025-03-29 15:42:48,767:INFO:Defining folds
2025-03-29 15:42:48,767:INFO:Declaring metric variables
2025-03-29 15:42:48,775:INFO:Importing untrained model
2025-03-29 15:42:48,782:INFO:Lasso Least Angle Regression Imported successfully
2025-03-29 15:42:48,794:INFO:Starting cross validation
2025-03-29 15:42:48,797:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:42:49,028:INFO:Calculating mean and std
2025-03-29 15:42:49,028:INFO:Creating metrics dataframe
2025-03-29 15:42:49,031:INFO:Uploading results into container
2025-03-29 15:42:49,032:INFO:Uploading model into container now
2025-03-29 15:42:49,032:INFO:_master_model_container: 6
2025-03-29 15:42:49,032:INFO:_display_container: 2
2025-03-29 15:42:49,033:INFO:LassoLars(random_state=123)
2025-03-29 15:42:49,033:INFO:create_model() successfully completed......................................
2025-03-29 15:42:49,232:INFO:SubProcess create_model() end ==================================
2025-03-29 15:42:49,232:INFO:Creating metrics dataframe
2025-03-29 15:42:49,244:INFO:Initializing Orthogonal Matching Pursuit
2025-03-29 15:42:49,244:INFO:Total runtime is 0.17159773508707682 minutes
2025-03-29 15:42:49,251:INFO:SubProcess create_model() called ==================================
2025-03-29 15:42:49,252:INFO:Initializing create_model()
2025-03-29 15:42:49,252:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC19E46D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:42:49,252:INFO:Checking exceptions
2025-03-29 15:42:49,252:INFO:Importing libraries
2025-03-29 15:42:49,252:INFO:Copying training dataset
2025-03-29 15:42:49,262:INFO:Defining folds
2025-03-29 15:42:49,262:INFO:Declaring metric variables
2025-03-29 15:42:49,269:INFO:Importing untrained model
2025-03-29 15:42:49,277:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-29 15:42:49,294:INFO:Starting cross validation
2025-03-29 15:42:49,296:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:42:49,513:INFO:Calculating mean and std
2025-03-29 15:42:49,515:INFO:Creating metrics dataframe
2025-03-29 15:42:49,518:INFO:Uploading results into container
2025-03-29 15:42:49,519:INFO:Uploading model into container now
2025-03-29 15:42:49,519:INFO:_master_model_container: 7
2025-03-29 15:42:49,519:INFO:_display_container: 2
2025-03-29 15:42:49,520:INFO:OrthogonalMatchingPursuit()
2025-03-29 15:42:49,520:INFO:create_model() successfully completed......................................
2025-03-29 15:42:49,704:INFO:SubProcess create_model() end ==================================
2025-03-29 15:42:49,706:INFO:Creating metrics dataframe
2025-03-29 15:42:49,720:INFO:Initializing Bayesian Ridge
2025-03-29 15:42:49,720:INFO:Total runtime is 0.17952268520991008 minutes
2025-03-29 15:42:49,725:INFO:SubProcess create_model() called ==================================
2025-03-29 15:42:49,726:INFO:Initializing create_model()
2025-03-29 15:42:49,726:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC19E46D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:42:49,726:INFO:Checking exceptions
2025-03-29 15:42:49,726:INFO:Importing libraries
2025-03-29 15:42:49,727:INFO:Copying training dataset
2025-03-29 15:42:49,738:INFO:Defining folds
2025-03-29 15:42:49,739:INFO:Declaring metric variables
2025-03-29 15:42:49,744:INFO:Importing untrained model
2025-03-29 15:42:49,754:INFO:Bayesian Ridge Imported successfully
2025-03-29 15:42:49,765:INFO:Starting cross validation
2025-03-29 15:42:49,768:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:42:50,004:INFO:Calculating mean and std
2025-03-29 15:42:50,005:INFO:Creating metrics dataframe
2025-03-29 15:42:50,007:INFO:Uploading results into container
2025-03-29 15:42:50,007:INFO:Uploading model into container now
2025-03-29 15:42:50,008:INFO:_master_model_container: 8
2025-03-29 15:42:50,008:INFO:_display_container: 2
2025-03-29 15:42:50,008:INFO:BayesianRidge()
2025-03-29 15:42:50,008:INFO:create_model() successfully completed......................................
2025-03-29 15:42:50,224:INFO:SubProcess create_model() end ==================================
2025-03-29 15:42:50,224:INFO:Creating metrics dataframe
2025-03-29 15:42:50,246:INFO:Initializing Passive Aggressive Regressor
2025-03-29 15:42:50,247:INFO:Total runtime is 0.1883056084314982 minutes
2025-03-29 15:42:50,254:INFO:SubProcess create_model() called ==================================
2025-03-29 15:42:50,255:INFO:Initializing create_model()
2025-03-29 15:42:50,255:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC19E46D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:42:50,255:INFO:Checking exceptions
2025-03-29 15:42:50,256:INFO:Importing libraries
2025-03-29 15:42:50,256:INFO:Copying training dataset
2025-03-29 15:42:50,266:INFO:Defining folds
2025-03-29 15:42:50,266:INFO:Declaring metric variables
2025-03-29 15:42:50,271:INFO:Importing untrained model
2025-03-29 15:42:50,279:INFO:Passive Aggressive Regressor Imported successfully
2025-03-29 15:42:50,291:INFO:Starting cross validation
2025-03-29 15:42:50,293:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:42:50,596:INFO:Calculating mean and std
2025-03-29 15:42:50,599:INFO:Creating metrics dataframe
2025-03-29 15:42:50,604:INFO:Uploading results into container
2025-03-29 15:42:50,605:INFO:Uploading model into container now
2025-03-29 15:42:50,606:INFO:_master_model_container: 9
2025-03-29 15:42:50,606:INFO:_display_container: 2
2025-03-29 15:42:50,606:INFO:PassiveAggressiveRegressor(random_state=123)
2025-03-29 15:42:50,607:INFO:create_model() successfully completed......................................
2025-03-29 15:42:50,836:INFO:SubProcess create_model() end ==================================
2025-03-29 15:42:50,836:INFO:Creating metrics dataframe
2025-03-29 15:42:50,855:INFO:Initializing Huber Regressor
2025-03-29 15:42:50,855:INFO:Total runtime is 0.1984493096669515 minutes
2025-03-29 15:42:50,867:INFO:SubProcess create_model() called ==================================
2025-03-29 15:42:50,867:INFO:Initializing create_model()
2025-03-29 15:42:50,868:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC19E46D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:42:50,868:INFO:Checking exceptions
2025-03-29 15:42:50,868:INFO:Importing libraries
2025-03-29 15:42:50,869:INFO:Copying training dataset
2025-03-29 15:42:50,883:INFO:Defining folds
2025-03-29 15:42:50,884:INFO:Declaring metric variables
2025-03-29 15:42:50,889:INFO:Importing untrained model
2025-03-29 15:42:50,895:INFO:Huber Regressor Imported successfully
2025-03-29 15:42:50,907:INFO:Starting cross validation
2025-03-29 15:42:50,909:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:42:51,339:INFO:Calculating mean and std
2025-03-29 15:42:51,340:INFO:Creating metrics dataframe
2025-03-29 15:42:51,342:INFO:Uploading results into container
2025-03-29 15:42:51,342:INFO:Uploading model into container now
2025-03-29 15:42:51,343:INFO:_master_model_container: 10
2025-03-29 15:42:51,343:INFO:_display_container: 2
2025-03-29 15:42:51,343:INFO:HuberRegressor()
2025-03-29 15:42:51,344:INFO:create_model() successfully completed......................................
2025-03-29 15:42:51,561:INFO:SubProcess create_model() end ==================================
2025-03-29 15:42:51,562:INFO:Creating metrics dataframe
2025-03-29 15:42:51,584:INFO:Initializing K Neighbors Regressor
2025-03-29 15:42:51,584:INFO:Total runtime is 0.2105984369913737 minutes
2025-03-29 15:42:51,588:INFO:SubProcess create_model() called ==================================
2025-03-29 15:42:51,590:INFO:Initializing create_model()
2025-03-29 15:42:51,590:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC19E46D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:42:51,591:INFO:Checking exceptions
2025-03-29 15:42:51,591:INFO:Importing libraries
2025-03-29 15:42:51,591:INFO:Copying training dataset
2025-03-29 15:42:51,602:INFO:Defining folds
2025-03-29 15:42:51,602:INFO:Declaring metric variables
2025-03-29 15:42:51,607:INFO:Importing untrained model
2025-03-29 15:42:51,615:INFO:K Neighbors Regressor Imported successfully
2025-03-29 15:42:51,625:INFO:Starting cross validation
2025-03-29 15:42:51,627:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:42:51,924:INFO:Calculating mean and std
2025-03-29 15:42:51,926:INFO:Creating metrics dataframe
2025-03-29 15:42:51,931:INFO:Uploading results into container
2025-03-29 15:42:51,931:INFO:Uploading model into container now
2025-03-29 15:42:51,933:INFO:_master_model_container: 11
2025-03-29 15:42:51,933:INFO:_display_container: 2
2025-03-29 15:42:51,934:INFO:KNeighborsRegressor(n_jobs=-1)
2025-03-29 15:42:51,934:INFO:create_model() successfully completed......................................
2025-03-29 15:42:52,187:INFO:SubProcess create_model() end ==================================
2025-03-29 15:42:52,188:INFO:Creating metrics dataframe
2025-03-29 15:42:52,204:INFO:Initializing Decision Tree Regressor
2025-03-29 15:42:52,206:INFO:Total runtime is 0.22093289295832316 minutes
2025-03-29 15:42:52,214:INFO:SubProcess create_model() called ==================================
2025-03-29 15:42:52,215:INFO:Initializing create_model()
2025-03-29 15:42:52,215:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC19E46D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:42:52,215:INFO:Checking exceptions
2025-03-29 15:42:52,216:INFO:Importing libraries
2025-03-29 15:42:52,216:INFO:Copying training dataset
2025-03-29 15:42:52,226:INFO:Defining folds
2025-03-29 15:42:52,226:INFO:Declaring metric variables
2025-03-29 15:42:52,234:INFO:Importing untrained model
2025-03-29 15:42:52,239:INFO:Decision Tree Regressor Imported successfully
2025-03-29 15:42:52,252:INFO:Starting cross validation
2025-03-29 15:42:52,254:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:42:52,551:INFO:Calculating mean and std
2025-03-29 15:42:52,551:INFO:Creating metrics dataframe
2025-03-29 15:42:52,554:INFO:Uploading results into container
2025-03-29 15:42:52,555:INFO:Uploading model into container now
2025-03-29 15:42:52,555:INFO:_master_model_container: 12
2025-03-29 15:42:52,555:INFO:_display_container: 2
2025-03-29 15:42:52,555:INFO:DecisionTreeRegressor(random_state=123)
2025-03-29 15:42:52,555:INFO:create_model() successfully completed......................................
2025-03-29 15:42:52,782:INFO:SubProcess create_model() end ==================================
2025-03-29 15:42:52,782:INFO:Creating metrics dataframe
2025-03-29 15:42:52,804:INFO:Initializing Random Forest Regressor
2025-03-29 15:42:52,804:INFO:Total runtime is 0.23092219829559327 minutes
2025-03-29 15:42:52,810:INFO:SubProcess create_model() called ==================================
2025-03-29 15:42:52,810:INFO:Initializing create_model()
2025-03-29 15:42:52,810:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC19E46D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:42:52,810:INFO:Checking exceptions
2025-03-29 15:42:52,811:INFO:Importing libraries
2025-03-29 15:42:52,811:INFO:Copying training dataset
2025-03-29 15:42:52,823:INFO:Defining folds
2025-03-29 15:42:52,824:INFO:Declaring metric variables
2025-03-29 15:42:52,831:INFO:Importing untrained model
2025-03-29 15:42:52,838:INFO:Random Forest Regressor Imported successfully
2025-03-29 15:42:52,850:INFO:Starting cross validation
2025-03-29 15:42:52,852:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:42:58,703:INFO:Calculating mean and std
2025-03-29 15:42:58,704:INFO:Creating metrics dataframe
2025-03-29 15:42:58,707:INFO:Uploading results into container
2025-03-29 15:42:58,709:INFO:Uploading model into container now
2025-03-29 15:42:58,710:INFO:_master_model_container: 13
2025-03-29 15:42:58,710:INFO:_display_container: 2
2025-03-29 15:42:58,711:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-03-29 15:42:58,711:INFO:create_model() successfully completed......................................
2025-03-29 15:42:58,947:INFO:SubProcess create_model() end ==================================
2025-03-29 15:42:58,947:INFO:Creating metrics dataframe
2025-03-29 15:42:58,965:INFO:Initializing Extra Trees Regressor
2025-03-29 15:42:58,965:INFO:Total runtime is 0.33361815611521406 minutes
2025-03-29 15:42:58,975:INFO:SubProcess create_model() called ==================================
2025-03-29 15:42:58,976:INFO:Initializing create_model()
2025-03-29 15:42:58,977:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC19E46D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:42:58,977:INFO:Checking exceptions
2025-03-29 15:42:58,977:INFO:Importing libraries
2025-03-29 15:42:58,977:INFO:Copying training dataset
2025-03-29 15:42:58,988:INFO:Defining folds
2025-03-29 15:42:58,988:INFO:Declaring metric variables
2025-03-29 15:42:58,995:INFO:Importing untrained model
2025-03-29 15:42:59,003:INFO:Extra Trees Regressor Imported successfully
2025-03-29 15:42:59,039:INFO:Starting cross validation
2025-03-29 15:42:59,042:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:43:03,159:INFO:Calculating mean and std
2025-03-29 15:43:03,160:INFO:Creating metrics dataframe
2025-03-29 15:43:03,162:INFO:Uploading results into container
2025-03-29 15:43:03,162:INFO:Uploading model into container now
2025-03-29 15:43:03,163:INFO:_master_model_container: 14
2025-03-29 15:43:03,163:INFO:_display_container: 2
2025-03-29 15:43:03,163:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-03-29 15:43:03,163:INFO:create_model() successfully completed......................................
2025-03-29 15:43:03,385:INFO:SubProcess create_model() end ==================================
2025-03-29 15:43:03,386:INFO:Creating metrics dataframe
2025-03-29 15:43:03,409:INFO:Initializing AdaBoost Regressor
2025-03-29 15:43:03,410:INFO:Total runtime is 0.40769582986831665 minutes
2025-03-29 15:43:03,421:INFO:SubProcess create_model() called ==================================
2025-03-29 15:43:03,423:INFO:Initializing create_model()
2025-03-29 15:43:03,423:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC19E46D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:43:03,423:INFO:Checking exceptions
2025-03-29 15:43:03,423:INFO:Importing libraries
2025-03-29 15:43:03,423:INFO:Copying training dataset
2025-03-29 15:43:03,438:INFO:Defining folds
2025-03-29 15:43:03,438:INFO:Declaring metric variables
2025-03-29 15:43:03,444:INFO:Importing untrained model
2025-03-29 15:43:03,450:INFO:AdaBoost Regressor Imported successfully
2025-03-29 15:43:03,462:INFO:Starting cross validation
2025-03-29 15:43:03,465:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:43:04,521:INFO:Calculating mean and std
2025-03-29 15:43:04,523:INFO:Creating metrics dataframe
2025-03-29 15:43:04,524:INFO:Uploading results into container
2025-03-29 15:43:04,525:INFO:Uploading model into container now
2025-03-29 15:43:04,525:INFO:_master_model_container: 15
2025-03-29 15:43:04,525:INFO:_display_container: 2
2025-03-29 15:43:04,525:INFO:AdaBoostRegressor(random_state=123)
2025-03-29 15:43:04,525:INFO:create_model() successfully completed......................................
2025-03-29 15:43:04,760:INFO:SubProcess create_model() end ==================================
2025-03-29 15:43:04,760:INFO:Creating metrics dataframe
2025-03-29 15:43:04,781:INFO:Initializing Gradient Boosting Regressor
2025-03-29 15:43:04,781:INFO:Total runtime is 0.4305453141530355 minutes
2025-03-29 15:43:04,786:INFO:SubProcess create_model() called ==================================
2025-03-29 15:43:04,787:INFO:Initializing create_model()
2025-03-29 15:43:04,787:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC19E46D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:43:04,787:INFO:Checking exceptions
2025-03-29 15:43:04,788:INFO:Importing libraries
2025-03-29 15:43:04,788:INFO:Copying training dataset
2025-03-29 15:43:04,807:INFO:Defining folds
2025-03-29 15:43:04,808:INFO:Declaring metric variables
2025-03-29 15:43:04,813:INFO:Importing untrained model
2025-03-29 15:43:04,818:INFO:Gradient Boosting Regressor Imported successfully
2025-03-29 15:43:04,829:INFO:Starting cross validation
2025-03-29 15:43:04,831:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:43:07,057:INFO:Calculating mean and std
2025-03-29 15:43:07,058:INFO:Creating metrics dataframe
2025-03-29 15:43:07,060:INFO:Uploading results into container
2025-03-29 15:43:07,060:INFO:Uploading model into container now
2025-03-29 15:43:07,061:INFO:_master_model_container: 16
2025-03-29 15:43:07,061:INFO:_display_container: 2
2025-03-29 15:43:07,061:INFO:GradientBoostingRegressor(random_state=123)
2025-03-29 15:43:07,061:INFO:create_model() successfully completed......................................
2025-03-29 15:43:07,275:INFO:SubProcess create_model() end ==================================
2025-03-29 15:43:07,275:INFO:Creating metrics dataframe
2025-03-29 15:43:07,297:INFO:Initializing Light Gradient Boosting Machine
2025-03-29 15:43:07,297:INFO:Total runtime is 0.4724831183751424 minutes
2025-03-29 15:43:07,307:INFO:SubProcess create_model() called ==================================
2025-03-29 15:43:07,307:INFO:Initializing create_model()
2025-03-29 15:43:07,307:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC19E46D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:43:07,307:INFO:Checking exceptions
2025-03-29 15:43:07,307:INFO:Importing libraries
2025-03-29 15:43:07,308:INFO:Copying training dataset
2025-03-29 15:43:07,321:INFO:Defining folds
2025-03-29 15:43:07,322:INFO:Declaring metric variables
2025-03-29 15:43:07,327:INFO:Importing untrained model
2025-03-29 15:43:07,336:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-29 15:43:07,348:INFO:Starting cross validation
2025-03-29 15:43:07,349:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:43:08,620:INFO:Calculating mean and std
2025-03-29 15:43:08,621:INFO:Creating metrics dataframe
2025-03-29 15:43:08,623:INFO:Uploading results into container
2025-03-29 15:43:08,624:INFO:Uploading model into container now
2025-03-29 15:43:08,625:INFO:_master_model_container: 17
2025-03-29 15:43:08,625:INFO:_display_container: 2
2025-03-29 15:43:08,626:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-03-29 15:43:08,626:INFO:create_model() successfully completed......................................
2025-03-29 15:43:08,837:INFO:SubProcess create_model() end ==================================
2025-03-29 15:43:08,837:INFO:Creating metrics dataframe
2025-03-29 15:43:08,861:INFO:Initializing Dummy Regressor
2025-03-29 15:43:08,861:INFO:Total runtime is 0.49855034748713173 minutes
2025-03-29 15:43:08,870:INFO:SubProcess create_model() called ==================================
2025-03-29 15:43:08,871:INFO:Initializing create_model()
2025-03-29 15:43:08,872:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FC19E46D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:43:08,872:INFO:Checking exceptions
2025-03-29 15:43:08,872:INFO:Importing libraries
2025-03-29 15:43:08,873:INFO:Copying training dataset
2025-03-29 15:43:08,889:INFO:Defining folds
2025-03-29 15:43:08,889:INFO:Declaring metric variables
2025-03-29 15:43:08,898:INFO:Importing untrained model
2025-03-29 15:43:08,907:INFO:Dummy Regressor Imported successfully
2025-03-29 15:43:08,928:INFO:Starting cross validation
2025-03-29 15:43:08,930:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:43:09,205:INFO:Calculating mean and std
2025-03-29 15:43:09,206:INFO:Creating metrics dataframe
2025-03-29 15:43:09,208:INFO:Uploading results into container
2025-03-29 15:43:09,208:INFO:Uploading model into container now
2025-03-29 15:43:09,208:INFO:_master_model_container: 18
2025-03-29 15:43:09,209:INFO:_display_container: 2
2025-03-29 15:43:09,209:INFO:DummyRegressor()
2025-03-29 15:43:09,209:INFO:create_model() successfully completed......................................
2025-03-29 15:43:09,438:INFO:SubProcess create_model() end ==================================
2025-03-29 15:43:09,438:INFO:Creating metrics dataframe
2025-03-29 15:43:09,462:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-03-29 15:43:09,498:INFO:Initializing create_model()
2025-03-29 15:43:09,498:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:43:09,499:INFO:Checking exceptions
2025-03-29 15:43:09,501:INFO:Importing libraries
2025-03-29 15:43:09,502:INFO:Copying training dataset
2025-03-29 15:43:09,511:INFO:Defining folds
2025-03-29 15:43:09,511:INFO:Declaring metric variables
2025-03-29 15:43:09,512:INFO:Importing untrained model
2025-03-29 15:43:09,512:INFO:Declaring custom model
2025-03-29 15:43:09,512:INFO:Huber Regressor Imported successfully
2025-03-29 15:43:09,513:INFO:Cross validation set to False
2025-03-29 15:43:09,513:INFO:Fitting Model
2025-03-29 15:43:09,636:INFO:HuberRegressor()
2025-03-29 15:43:09,636:INFO:create_model() successfully completed......................................
2025-03-29 15:43:09,902:INFO:_master_model_container: 18
2025-03-29 15:43:09,903:INFO:_display_container: 2
2025-03-29 15:43:09,904:INFO:HuberRegressor()
2025-03-29 15:43:09,904:INFO:compare_models() successfully completed......................................
2025-03-29 15:43:42,412:INFO:Initializing tune_model()
2025-03-29 15:43:42,412:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=HuberRegressor(), fold=None, round=4, n_iter=200, custom_grid=None, optimize=MAE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-03-29 15:43:42,412:INFO:Checking exceptions
2025-03-29 15:43:42,442:INFO:Copying training dataset
2025-03-29 15:43:42,450:INFO:Checking base model
2025-03-29 15:43:42,450:INFO:Base model : Huber Regressor
2025-03-29 15:43:42,458:INFO:Declaring metric variables
2025-03-29 15:43:42,467:INFO:Defining Hyperparameters
2025-03-29 15:43:42,724:INFO:Tuning with n_jobs=-1
2025-03-29 15:43:42,724:INFO:Initializing RandomizedSearchCV
2025-03-29 15:43:53,500:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 15:43:54,300:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 15:43:57,110:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 15:44:01,301:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 15:44:09,953:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 15:44:15,648:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 15:44:17,123:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 15:44:17,545:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 15:44:26,067:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-29 15:44:40,306:INFO:best_params: {'actual_estimator__fit_intercept': True, 'actual_estimator__epsilon': 1.1, 'actual_estimator__alpha': 0.4}
2025-03-29 15:44:40,307:INFO:Hyperparameter search completed
2025-03-29 15:44:40,307:INFO:SubProcess create_model() called ==================================
2025-03-29 15:44:40,307:INFO:Initializing create_model()
2025-03-29 15:44:40,307:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FBA1CDDD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'fit_intercept': True, 'epsilon': 1.1, 'alpha': 0.4})
2025-03-29 15:44:40,307:INFO:Checking exceptions
2025-03-29 15:44:40,307:INFO:Importing libraries
2025-03-29 15:44:40,308:INFO:Copying training dataset
2025-03-29 15:44:40,317:INFO:Defining folds
2025-03-29 15:44:40,317:INFO:Declaring metric variables
2025-03-29 15:44:40,321:INFO:Importing untrained model
2025-03-29 15:44:40,321:INFO:Declaring custom model
2025-03-29 15:44:40,324:INFO:Huber Regressor Imported successfully
2025-03-29 15:44:40,332:INFO:Starting cross validation
2025-03-29 15:44:40,335:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:44:40,737:INFO:Calculating mean and std
2025-03-29 15:44:40,740:INFO:Creating metrics dataframe
2025-03-29 15:44:40,750:INFO:Finalizing model
2025-03-29 15:44:41,032:INFO:Uploading results into container
2025-03-29 15:44:41,034:INFO:Uploading model into container now
2025-03-29 15:44:41,035:INFO:_master_model_container: 19
2025-03-29 15:44:41,035:INFO:_display_container: 3
2025-03-29 15:44:41,036:INFO:HuberRegressor(alpha=0.4, epsilon=1.1)
2025-03-29 15:44:41,036:INFO:create_model() successfully completed......................................
2025-03-29 15:44:41,245:INFO:SubProcess create_model() end ==================================
2025-03-29 15:44:41,245:INFO:choose_better activated
2025-03-29 15:44:41,251:INFO:SubProcess create_model() called ==================================
2025-03-29 15:44:41,252:INFO:Initializing create_model()
2025-03-29 15:44:41,252:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:44:41,253:INFO:Checking exceptions
2025-03-29 15:44:41,256:INFO:Importing libraries
2025-03-29 15:44:41,256:INFO:Copying training dataset
2025-03-29 15:44:41,268:INFO:Defining folds
2025-03-29 15:44:41,268:INFO:Declaring metric variables
2025-03-29 15:44:41,268:INFO:Importing untrained model
2025-03-29 15:44:41,268:INFO:Declaring custom model
2025-03-29 15:44:41,269:INFO:Huber Regressor Imported successfully
2025-03-29 15:44:41,270:INFO:Starting cross validation
2025-03-29 15:44:41,271:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:44:41,702:INFO:Calculating mean and std
2025-03-29 15:44:41,702:INFO:Creating metrics dataframe
2025-03-29 15:44:41,704:INFO:Finalizing model
2025-03-29 15:44:41,821:INFO:Uploading results into container
2025-03-29 15:44:41,821:INFO:Uploading model into container now
2025-03-29 15:44:41,822:INFO:_master_model_container: 20
2025-03-29 15:44:41,822:INFO:_display_container: 4
2025-03-29 15:44:41,822:INFO:HuberRegressor()
2025-03-29 15:44:41,822:INFO:create_model() successfully completed......................................
2025-03-29 15:44:42,031:INFO:SubProcess create_model() end ==================================
2025-03-29 15:44:42,032:INFO:HuberRegressor() result for MAE is 286.9315
2025-03-29 15:44:42,032:INFO:HuberRegressor(alpha=0.4, epsilon=1.1) result for MAE is 286.1833
2025-03-29 15:44:42,033:INFO:HuberRegressor(alpha=0.4, epsilon=1.1) is best model
2025-03-29 15:44:42,033:INFO:choose_better completed
2025-03-29 15:44:42,051:INFO:_master_model_container: 20
2025-03-29 15:44:42,051:INFO:_display_container: 3
2025-03-29 15:44:42,051:INFO:HuberRegressor(alpha=0.4, epsilon=1.1)
2025-03-29 15:44:42,052:INFO:tune_model() successfully completed......................................
2025-03-29 15:44:57,266:INFO:Initializing compare_models()
2025-03-29 15:44:57,267:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, include=[HuberRegressor(), HuberRegressor(alpha=0.4, epsilon=1.1)], exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, 'include': [HuberRegressor(), HuberRegressor(alpha=0.4, epsilon=1.1)], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-03-29 15:44:57,267:INFO:Checking exceptions
2025-03-29 15:44:57,271:INFO:Preparing display monitor
2025-03-29 15:44:57,309:INFO:Initializing custom model Huber Regressor
2025-03-29 15:44:57,309:INFO:Total runtime is 0.0 minutes
2025-03-29 15:44:57,315:INFO:SubProcess create_model() called ==================================
2025-03-29 15:44:57,316:INFO:Initializing create_model()
2025-03-29 15:44:57,316:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FBDE43450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:44:57,316:INFO:Checking exceptions
2025-03-29 15:44:57,316:INFO:Importing libraries
2025-03-29 15:44:57,317:INFO:Copying training dataset
2025-03-29 15:44:57,329:INFO:Defining folds
2025-03-29 15:44:57,329:INFO:Declaring metric variables
2025-03-29 15:44:57,366:INFO:Importing untrained model
2025-03-29 15:44:57,366:INFO:Declaring custom model
2025-03-29 15:44:57,374:INFO:Huber Regressor Imported successfully
2025-03-29 15:44:57,387:INFO:Starting cross validation
2025-03-29 15:44:57,389:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:44:57,877:INFO:Calculating mean and std
2025-03-29 15:44:57,878:INFO:Creating metrics dataframe
2025-03-29 15:44:57,882:INFO:Uploading results into container
2025-03-29 15:44:57,882:INFO:Uploading model into container now
2025-03-29 15:44:57,883:INFO:_master_model_container: 21
2025-03-29 15:44:57,883:INFO:_display_container: 4
2025-03-29 15:44:57,884:INFO:HuberRegressor()
2025-03-29 15:44:57,884:INFO:create_model() successfully completed......................................
2025-03-29 15:44:58,140:INFO:SubProcess create_model() end ==================================
2025-03-29 15:44:58,141:INFO:Creating metrics dataframe
2025-03-29 15:44:58,153:INFO:Initializing custom model Huber Regressor
2025-03-29 15:44:58,153:INFO:Total runtime is 0.014075752099355061 minutes
2025-03-29 15:44:58,158:INFO:SubProcess create_model() called ==================================
2025-03-29 15:44:58,160:INFO:Initializing create_model()
2025-03-29 15:44:58,160:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=HuberRegressor(alpha=0.4, epsilon=1.1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018FBDE43450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:44:58,160:INFO:Checking exceptions
2025-03-29 15:44:58,160:INFO:Importing libraries
2025-03-29 15:44:58,160:INFO:Copying training dataset
2025-03-29 15:44:58,172:INFO:Defining folds
2025-03-29 15:44:58,172:INFO:Declaring metric variables
2025-03-29 15:44:58,178:INFO:Importing untrained model
2025-03-29 15:44:58,178:INFO:Declaring custom model
2025-03-29 15:44:58,184:INFO:Huber Regressor Imported successfully
2025-03-29 15:44:58,196:INFO:Starting cross validation
2025-03-29 15:44:58,197:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 15:44:58,634:INFO:Calculating mean and std
2025-03-29 15:44:58,636:INFO:Creating metrics dataframe
2025-03-29 15:44:58,639:INFO:Uploading results into container
2025-03-29 15:44:58,639:INFO:Uploading model into container now
2025-03-29 15:44:58,640:INFO:_master_model_container: 22
2025-03-29 15:44:58,640:INFO:_display_container: 4
2025-03-29 15:44:58,640:INFO:HuberRegressor(alpha=0.4, epsilon=1.1)
2025-03-29 15:44:58,640:INFO:create_model() successfully completed......................................
2025-03-29 15:44:58,857:INFO:SubProcess create_model() end ==================================
2025-03-29 15:44:58,857:INFO:Creating metrics dataframe
2025-03-29 15:44:58,874:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-03-29 15:44:58,889:INFO:Initializing create_model()
2025-03-29 15:44:58,889:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:44:58,890:INFO:Checking exceptions
2025-03-29 15:44:58,893:INFO:Importing libraries
2025-03-29 15:44:58,893:INFO:Copying training dataset
2025-03-29 15:44:58,904:INFO:Defining folds
2025-03-29 15:44:58,905:INFO:Declaring metric variables
2025-03-29 15:44:58,905:INFO:Importing untrained model
2025-03-29 15:44:58,905:INFO:Declaring custom model
2025-03-29 15:44:58,906:INFO:Huber Regressor Imported successfully
2025-03-29 15:44:58,907:INFO:Cross validation set to False
2025-03-29 15:44:58,907:INFO:Fitting Model
2025-03-29 15:44:59,028:INFO:HuberRegressor()
2025-03-29 15:44:59,028:INFO:create_model() successfully completed......................................
2025-03-29 15:44:59,279:INFO:_master_model_container: 22
2025-03-29 15:44:59,279:INFO:_display_container: 4
2025-03-29 15:44:59,280:INFO:HuberRegressor()
2025-03-29 15:44:59,280:INFO:compare_models() successfully completed......................................
2025-03-29 15:45:22,371:INFO:Initializing predict_model()
2025-03-29 15:45:22,371:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=HuberRegressor(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018FC51E3600>)
2025-03-29 15:45:22,372:INFO:Checking exceptions
2025-03-29 15:45:22,372:INFO:Preloading libraries
2025-03-29 15:45:22,500:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-29 15:45:36,495:INFO:Initializing plot_model()
2025-03-29 15:45:36,495:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=HuberRegressor(), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-03-29 15:45:36,495:INFO:Checking exceptions
2025-03-29 15:45:36,502:INFO:Preloading libraries
2025-03-29 15:45:36,503:INFO:Copying training dataset
2025-03-29 15:45:36,503:INFO:Plot type: feature
2025-03-29 15:45:36,733:INFO:Visual Rendered Successfully
2025-03-29 15:45:36,942:INFO:plot_model() successfully completed......................................
2025-03-29 15:45:45,476:INFO:Initializing plot_model()
2025-03-29 15:45:45,476:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=HuberRegressor(), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-03-29 15:45:45,477:INFO:Checking exceptions
2025-03-29 15:45:45,485:INFO:Preloading libraries
2025-03-29 15:45:45,487:INFO:Copying training dataset
2025-03-29 15:45:45,487:INFO:Plot type: residuals
2025-03-29 15:45:45,721:INFO:Fitting Model
2025-03-29 15:45:45,721:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but HuberRegressor was fitted with feature names
  warnings.warn(

2025-03-29 15:45:45,765:INFO:Scoring test/hold-out set
2025-03-29 15:45:46,279:INFO:Visual Rendered Successfully
2025-03-29 15:45:46,504:INFO:plot_model() successfully completed......................................
2025-03-29 15:45:54,304:INFO:Initializing plot_model()
2025-03-29 15:45:54,304:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=HuberRegressor(), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-03-29 15:45:54,304:INFO:Checking exceptions
2025-03-29 15:45:54,315:INFO:Preloading libraries
2025-03-29 15:45:54,315:INFO:Copying training dataset
2025-03-29 15:45:54,316:INFO:Plot type: error
2025-03-29 15:45:54,510:INFO:Fitting Model
2025-03-29 15:45:54,511:WARNING:c:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but HuberRegressor was fitted with feature names
  warnings.warn(

2025-03-29 15:45:54,511:INFO:Scoring test/hold-out set
2025-03-29 15:45:54,766:INFO:Visual Rendered Successfully
2025-03-29 15:45:54,985:INFO:plot_model() successfully completed......................................
2025-03-29 15:50:08,473:INFO:Initializing finalize_model()
2025-03-29 15:50:08,474:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=HuberRegressor(), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-29 15:50:08,474:INFO:Finalizing HuberRegressor()
2025-03-29 15:50:08,485:INFO:Initializing create_model()
2025-03-29 15:50:08,486:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=HuberRegressor(), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-29 15:50:08,486:INFO:Checking exceptions
2025-03-29 15:50:08,488:INFO:Importing libraries
2025-03-29 15:50:08,489:INFO:Copying training dataset
2025-03-29 15:50:08,489:INFO:Defining folds
2025-03-29 15:50:08,489:INFO:Declaring metric variables
2025-03-29 15:50:08,490:INFO:Importing untrained model
2025-03-29 15:50:08,490:INFO:Declaring custom model
2025-03-29 15:50:08,491:INFO:Huber Regressor Imported successfully
2025-03-29 15:50:08,493:INFO:Cross validation set to False
2025-03-29 15:50:08,493:INFO:Fitting Model
2025-03-29 15:50:08,664:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())])
2025-03-29 15:50:08,664:INFO:create_model() successfully completed......................................
2025-03-29 15:50:08,884:INFO:_master_model_container: 22
2025-03-29 15:50:08,884:INFO:_display_container: 5
2025-03-29 15:50:08,918:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())])
2025-03-29 15:50:08,918:INFO:finalize_model() successfully completed......................................
2025-03-29 15:52:22,771:INFO:Initializing save_model()
2025-03-29 15:52:22,771:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), model_name=huber_model_halfmarathon_time, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\kgust\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-03-29 15:52:22,771:INFO:Adding model into prep_pipe
2025-03-29 15:52:22,771:WARNING:Only Model saved as it was a pipeline.
2025-03-29 15:52:22,776:INFO:huber_model_halfmarathon_time.pkl saved in current working directory
2025-03-29 15:52:22,803:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())])
2025-03-29 15:52:22,803:INFO:save_model() successfully completed......................................
2025-03-29 15:54:19,762:INFO:Initializing predict_model()
2025-03-29 15:54:19,762:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018FC51E3920>)
2025-03-29 15:54:19,762:INFO:Checking exceptions
2025-03-29 15:54:19,762:INFO:Preloading libraries
2025-03-29 15:54:19,764:INFO:Set up data.
2025-03-29 15:54:19,767:INFO:Set up index.
2025-03-29 15:56:17,522:INFO:Initializing predict_model()
2025-03-29 15:56:17,522:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018FB85D0F40>)
2025-03-29 15:56:17,522:INFO:Checking exceptions
2025-03-29 15:56:17,522:INFO:Preloading libraries
2025-03-29 15:56:17,525:INFO:Set up data.
2025-03-29 15:56:17,529:INFO:Set up index.
2025-03-29 16:06:50,705:INFO:Initializing predict_model()
2025-03-29 16:06:50,705:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018FBA506310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018FC6A0BF60>)
2025-03-29 16:06:50,705:INFO:Checking exceptions
2025-03-29 16:06:50,705:INFO:Preloading libraries
2025-03-29 16:06:50,709:INFO:Set up data.
2025-03-29 16:06:50,713:INFO:Set up index.
2025-03-29 19:50:18,923:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 19:50:18,926:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 19:50:18,926:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 19:50:18,926:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 19:50:19,528:INFO:Initializing load_model()
2025-03-29 19:50:19,528:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 19:52:36,709:INFO:Initializing load_model()
2025-03-29 19:52:36,709:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 19:55:30,860:INFO:Initializing load_model()
2025-03-29 19:55:30,860:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 19:57:17,838:INFO:Initializing load_model()
2025-03-29 19:57:17,838:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 19:58:14,929:INFO:Initializing load_model()
2025-03-29 19:58:14,929:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 19:59:00,982:INFO:Initializing load_model()
2025-03-29 19:59:00,982:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 19:59:18,541:INFO:Initializing load_model()
2025-03-29 19:59:18,541:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 19:59:33,799:INFO:Initializing load_model()
2025-03-29 19:59:33,799:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 20:01:39,265:INFO:Initializing load_model()
2025-03-29 20:01:39,265:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 20:02:14,142:INFO:Initializing load_model()
2025-03-29 20:02:14,142:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 20:03:25,066:INFO:Initializing load_model()
2025-03-29 20:03:25,075:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 20:03:42,194:INFO:Initializing load_model()
2025-03-29 20:03:42,194:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 20:04:32,023:INFO:Initializing load_model()
2025-03-29 20:04:32,023:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 20:06:00,708:INFO:Initializing load_model()
2025-03-29 20:06:00,708:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 20:07:03,628:INFO:Initializing load_model()
2025-03-29 20:07:03,628:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 20:07:45,292:INFO:Initializing load_model()
2025-03-29 20:07:45,292:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 20:08:09,828:INFO:Initializing load_model()
2025-03-29 20:08:09,828:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 20:08:55,015:INFO:Initializing load_model()
2025-03-29 20:08:55,015:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 20:09:23,156:INFO:Initializing load_model()
2025-03-29 20:09:23,158:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 20:09:57,322:INFO:Initializing load_model()
2025-03-29 20:09:57,322:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 20:11:18,470:INFO:Initializing load_model()
2025-03-29 20:11:18,470:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 20:36:50,921:INFO:Initializing load_model()
2025-03-29 20:36:50,921:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 20:37:08,703:INFO:Initializing load_model()
2025-03-29 20:37:08,703:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 20:37:09,956:INFO:Initializing load_model()
2025-03-29 20:37:09,956:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 20:38:17,511:INFO:Initializing load_model()
2025-03-29 20:38:17,511:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 20:38:22,009:INFO:Initializing load_model()
2025-03-29 20:38:22,009:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 20:38:23,002:INFO:Initializing load_model()
2025-03-29 20:38:23,002:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 20:38:24,062:INFO:Initializing load_model()
2025-03-29 20:38:24,066:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 20:39:41,681:INFO:Initializing load_model()
2025-03-29 20:39:41,681:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:00:24,979:INFO:Initializing load_model()
2025-03-29 21:00:24,979:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:00:37,199:INFO:Initializing load_model()
2025-03-29 21:00:37,199:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:00:38,810:INFO:Initializing load_model()
2025-03-29 21:00:38,811:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:00:39,051:INFO:Initializing load_model()
2025-03-29 21:00:39,051:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:00:39,303:INFO:Initializing load_model()
2025-03-29 21:00:39,303:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:00:40,017:INFO:Initializing load_model()
2025-03-29 21:00:40,017:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:00:40,658:INFO:Initializing load_model()
2025-03-29 21:00:40,658:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:00:41,350:INFO:Initializing load_model()
2025-03-29 21:00:41,350:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:00:46,613:INFO:Initializing load_model()
2025-03-29 21:00:46,613:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:00:48,304:INFO:Initializing load_model()
2025-03-29 21:00:48,304:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:00:58,167:INFO:Initializing load_model()
2025-03-29 21:00:58,167:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:00:58,383:INFO:Initializing load_model()
2025-03-29 21:00:58,383:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:00:58,467:INFO:Initializing predict_model()
2025-03-29 21:00:58,467:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D1BD97D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D1C828E0>)
2025-03-29 21:00:58,467:INFO:Checking exceptions
2025-03-29 21:00:58,469:INFO:Preloading libraries
2025-03-29 21:00:58,474:INFO:Set up data.
2025-03-29 21:00:58,495:INFO:Set up index.
2025-03-29 21:04:29,783:INFO:Initializing load_model()
2025-03-29 21:04:29,783:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:04:42,933:INFO:Initializing load_model()
2025-03-29 21:04:42,933:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:04:45,060:INFO:Initializing load_model()
2025-03-29 21:04:45,060:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:04:45,273:INFO:Initializing load_model()
2025-03-29 21:04:45,273:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:04:56,609:INFO:Initializing load_model()
2025-03-29 21:04:56,609:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:04:56,790:INFO:Initializing load_model()
2025-03-29 21:04:56,790:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:04:56,853:INFO:Initializing predict_model()
2025-03-29 21:04:56,853:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7A97FA290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D1B62660>)
2025-03-29 21:04:56,853:INFO:Checking exceptions
2025-03-29 21:04:56,853:INFO:Preloading libraries
2025-03-29 21:04:56,853:INFO:Set up data.
2025-03-29 21:04:56,862:INFO:Set up index.
2025-03-29 21:05:29,711:INFO:Initializing load_model()
2025-03-29 21:05:29,711:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:05:32,623:INFO:Initializing load_model()
2025-03-29 21:05:32,623:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:05:32,686:INFO:Initializing predict_model()
2025-03-29 21:05:32,686:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D1BE8E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D1BEF380>)
2025-03-29 21:05:32,686:INFO:Checking exceptions
2025-03-29 21:05:32,686:INFO:Preloading libraries
2025-03-29 21:05:32,690:INFO:Set up data.
2025-03-29 21:05:32,690:INFO:Set up index.
2025-03-29 21:11:22,681:INFO:Initializing load_model()
2025-03-29 21:11:22,681:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:12:46,061:INFO:Initializing load_model()
2025-03-29 21:12:46,061:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:12:56,356:INFO:Initializing load_model()
2025-03-29 21:12:56,356:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:13:07,408:INFO:Initializing load_model()
2025-03-29 21:13:07,408:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:13:14,657:INFO:Initializing load_model()
2025-03-29 21:13:14,657:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:13:19,313:INFO:Initializing load_model()
2025-03-29 21:13:19,313:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:14:11,786:INFO:Initializing load_model()
2025-03-29 21:14:11,786:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:14:36,192:INFO:Initializing load_model()
2025-03-29 21:14:36,192:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:14:38,328:INFO:Initializing load_model()
2025-03-29 21:14:38,328:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:14:42,694:INFO:Initializing load_model()
2025-03-29 21:14:42,694:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:14:42,943:INFO:Initializing load_model()
2025-03-29 21:14:42,943:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:14:44,456:INFO:Initializing load_model()
2025-03-29 21:14:44,456:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:14:44,713:INFO:Initializing load_model()
2025-03-29 21:14:44,713:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:14:44,932:INFO:Initializing load_model()
2025-03-29 21:14:44,932:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:14:45,153:INFO:Initializing load_model()
2025-03-29 21:14:45,153:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:14:45,369:INFO:Initializing load_model()
2025-03-29 21:14:45,369:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:14:45,751:INFO:Initializing load_model()
2025-03-29 21:14:45,751:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:15:48,723:INFO:Initializing load_model()
2025-03-29 21:15:48,723:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:16:14,638:INFO:Initializing load_model()
2025-03-29 21:16:14,638:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:16:19,372:INFO:Initializing load_model()
2025-03-29 21:16:19,373:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:16:19,961:INFO:Initializing load_model()
2025-03-29 21:16:19,961:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:16:23,007:INFO:Initializing load_model()
2025-03-29 21:16:23,007:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:16:25,212:INFO:Initializing load_model()
2025-03-29 21:16:25,212:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:16:26,419:INFO:Initializing load_model()
2025-03-29 21:16:26,422:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:16:27,915:INFO:Initializing load_model()
2025-03-29 21:16:27,915:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:16:32,571:INFO:Initializing load_model()
2025-03-29 21:16:32,571:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:16:33,900:INFO:Initializing load_model()
2025-03-29 21:16:33,900:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:16:36,416:INFO:Initializing load_model()
2025-03-29 21:16:36,416:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:17:22,941:INFO:Initializing load_model()
2025-03-29 21:17:22,941:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:17:26,116:INFO:Initializing load_model()
2025-03-29 21:17:26,116:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:19:05,371:INFO:Initializing load_model()
2025-03-29 21:19:05,371:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:19:13,239:INFO:Initializing load_model()
2025-03-29 21:19:13,240:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:19:13,739:INFO:Initializing load_model()
2025-03-29 21:19:13,739:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:19:14,175:INFO:Initializing load_model()
2025-03-29 21:19:14,175:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:19:14,404:INFO:Initializing load_model()
2025-03-29 21:19:14,404:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:19:15,125:INFO:Initializing load_model()
2025-03-29 21:19:15,125:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:19:15,458:INFO:Initializing load_model()
2025-03-29 21:19:15,458:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:19:15,683:INFO:Initializing load_model()
2025-03-29 21:19:15,683:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:19:15,914:INFO:Initializing load_model()
2025-03-29 21:19:15,914:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:19:16,162:INFO:Initializing load_model()
2025-03-29 21:19:16,162:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:30:22,897:INFO:Initializing load_model()
2025-03-29 21:30:22,897:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:30:32,755:INFO:Initializing load_model()
2025-03-29 21:30:32,755:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:30:33,872:INFO:Initializing load_model()
2025-03-29 21:30:33,872:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:30:39,732:INFO:Initializing load_model()
2025-03-29 21:30:39,732:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:30:48,071:INFO:Initializing load_model()
2025-03-29 21:30:48,071:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:30:48,293:INFO:Initializing load_model()
2025-03-29 21:30:48,293:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:30:48,384:INFO:Initializing predict_model()
2025-03-29 21:30:48,384:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D1BC2950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D1B63A60>)
2025-03-29 21:30:48,384:INFO:Checking exceptions
2025-03-29 21:30:48,384:INFO:Preloading libraries
2025-03-29 21:30:48,384:INFO:Set up data.
2025-03-29 21:30:48,394:INFO:Set up index.
2025-03-29 21:32:16,642:INFO:Initializing load_model()
2025-03-29 21:32:16,642:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:32:21,789:INFO:Initializing load_model()
2025-03-29 21:32:21,789:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:32:21,836:INFO:Initializing predict_model()
2025-03-29 21:32:21,836:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D20D7250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D1BECA40>)
2025-03-29 21:32:21,836:INFO:Checking exceptions
2025-03-29 21:32:21,838:INFO:Preloading libraries
2025-03-29 21:32:21,838:INFO:Set up data.
2025-03-29 21:32:21,838:INFO:Set up index.
2025-03-29 21:33:33,877:INFO:Initializing load_model()
2025-03-29 21:33:33,877:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:33:38,037:INFO:Initializing load_model()
2025-03-29 21:33:38,037:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:33:38,117:INFO:Initializing predict_model()
2025-03-29 21:33:38,117:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D1C8E290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D1B63420>)
2025-03-29 21:33:38,117:INFO:Checking exceptions
2025-03-29 21:33:38,117:INFO:Preloading libraries
2025-03-29 21:33:38,118:INFO:Set up data.
2025-03-29 21:33:38,122:INFO:Set up index.
2025-03-29 21:33:56,734:INFO:Initializing load_model()
2025-03-29 21:33:56,734:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:33:56,805:INFO:Initializing predict_model()
2025-03-29 21:33:56,805:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D1BEA950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D2150900>)
2025-03-29 21:33:56,805:INFO:Checking exceptions
2025-03-29 21:33:56,805:INFO:Preloading libraries
2025-03-29 21:33:56,805:INFO:Set up data.
2025-03-29 21:33:56,805:INFO:Set up index.
2025-03-29 21:39:30,890:INFO:Initializing load_model()
2025-03-29 21:39:30,890:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:41:07,887:INFO:Initializing load_model()
2025-03-29 21:41:07,887:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:41:36,391:INFO:Initializing load_model()
2025-03-29 21:41:36,391:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:44:18,536:INFO:Initializing load_model()
2025-03-29 21:44:18,536:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:46:28,526:INFO:Initializing load_model()
2025-03-29 21:46:28,526:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:46:42,310:INFO:Initializing load_model()
2025-03-29 21:46:42,310:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:46:47,589:INFO:Initializing load_model()
2025-03-29 21:46:47,589:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:46:53,521:INFO:Initializing load_model()
2025-03-29 21:46:53,521:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:46:53,736:INFO:Initializing load_model()
2025-03-29 21:46:53,736:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:46:53,793:INFO:Initializing predict_model()
2025-03-29 21:46:53,793:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7A97C7210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D21511C0>)
2025-03-29 21:46:53,793:INFO:Checking exceptions
2025-03-29 21:46:53,795:INFO:Preloading libraries
2025-03-29 21:46:53,796:INFO:Set up data.
2025-03-29 21:46:53,800:INFO:Set up index.
2025-03-29 21:47:00,359:INFO:Initializing load_model()
2025-03-29 21:47:00,359:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:47:00,434:INFO:Initializing predict_model()
2025-03-29 21:47:00,434:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D186DD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D2152200>)
2025-03-29 21:47:00,434:INFO:Checking exceptions
2025-03-29 21:47:00,434:INFO:Preloading libraries
2025-03-29 21:47:00,434:INFO:Set up data.
2025-03-29 21:47:00,434:INFO:Set up index.
2025-03-29 21:52:00,147:INFO:Initializing load_model()
2025-03-29 21:52:00,147:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:52:09,305:INFO:Initializing load_model()
2025-03-29 21:52:09,305:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:52:09,610:INFO:Initializing load_model()
2025-03-29 21:52:09,610:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:52:13,167:INFO:Initializing load_model()
2025-03-29 21:52:13,167:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:52:15,315:INFO:Initializing load_model()
2025-03-29 21:52:15,315:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:52:15,529:INFO:Initializing load_model()
2025-03-29 21:52:15,529:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:52:21,955:INFO:Initializing load_model()
2025-03-29 21:52:21,955:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:52:22,157:INFO:Initializing load_model()
2025-03-29 21:52:22,157:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:53:08,894:INFO:Initializing load_model()
2025-03-29 21:53:08,894:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:53:15,265:INFO:Initializing load_model()
2025-03-29 21:53:15,266:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:53:15,452:INFO:Initializing load_model()
2025-03-29 21:53:15,452:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:53:15,518:INFO:Initializing predict_model()
2025-03-29 21:53:15,519:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D1BDA950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D1F00900>)
2025-03-29 21:53:15,519:INFO:Checking exceptions
2025-03-29 21:53:15,519:INFO:Preloading libraries
2025-03-29 21:53:15,519:INFO:Set up data.
2025-03-29 21:53:15,519:INFO:Set up index.
2025-03-29 21:53:21,130:INFO:Initializing load_model()
2025-03-29 21:53:21,130:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:53:21,363:INFO:Initializing load_model()
2025-03-29 21:53:21,363:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:53:21,420:INFO:Initializing predict_model()
2025-03-29 21:53:21,420:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7A97DA550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D1F00900>)
2025-03-29 21:53:21,420:INFO:Checking exceptions
2025-03-29 21:53:21,420:INFO:Preloading libraries
2025-03-29 21:53:21,427:INFO:Set up data.
2025-03-29 21:53:21,431:INFO:Set up index.
2025-03-29 21:55:12,827:INFO:Initializing load_model()
2025-03-29 21:55:12,827:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:55:36,929:INFO:Initializing load_model()
2025-03-29 21:55:36,929:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:55:46,349:INFO:Initializing load_model()
2025-03-29 21:55:46,349:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:55:46,623:INFO:Initializing load_model()
2025-03-29 21:55:46,623:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:55:49,902:INFO:Initializing load_model()
2025-03-29 21:55:49,902:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:56:06,791:INFO:Initializing load_model()
2025-03-29 21:56:06,791:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:56:06,980:INFO:Initializing load_model()
2025-03-29 21:56:06,980:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 21:56:07,063:INFO:Initializing predict_model()
2025-03-29 21:56:07,063:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D1BC1050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D1F013A0>)
2025-03-29 21:56:07,063:INFO:Checking exceptions
2025-03-29 21:56:07,063:INFO:Preloading libraries
2025-03-29 21:56:07,063:INFO:Set up data.
2025-03-29 21:56:07,068:INFO:Set up index.
2025-03-29 22:02:54,702:INFO:Initializing load_model()
2025-03-29 22:02:54,702:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:03:03,790:INFO:Initializing load_model()
2025-03-29 22:03:03,793:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:03:04,010:INFO:Initializing load_model()
2025-03-29 22:03:04,011:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:03:04,066:INFO:Initializing predict_model()
2025-03-29 22:03:04,066:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D2126AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D120C5E0>)
2025-03-29 22:03:04,074:INFO:Checking exceptions
2025-03-29 22:03:04,074:INFO:Preloading libraries
2025-03-29 22:03:04,074:INFO:Set up data.
2025-03-29 22:03:04,080:INFO:Set up index.
2025-03-29 22:03:08,814:INFO:Initializing load_model()
2025-03-29 22:03:08,814:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:03:09,038:INFO:Initializing load_model()
2025-03-29 22:03:09,038:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:03:21,489:INFO:Initializing load_model()
2025-03-29 22:03:21,489:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:03:21,711:INFO:Initializing load_model()
2025-03-29 22:03:21,711:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:03:26,972:INFO:Initializing load_model()
2025-03-29 22:03:26,972:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:03:27,947:INFO:Initializing load_model()
2025-03-29 22:03:27,947:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:03:30,549:INFO:Initializing load_model()
2025-03-29 22:03:30,549:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:03:31,242:INFO:Initializing load_model()
2025-03-29 22:03:31,242:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:03:31,476:INFO:Initializing load_model()
2025-03-29 22:03:31,476:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:03:33,010:INFO:Initializing load_model()
2025-03-29 22:03:33,011:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:03:40,801:INFO:Initializing load_model()
2025-03-29 22:03:40,801:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:03:43,029:INFO:Initializing load_model()
2025-03-29 22:03:43,029:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:03:43,238:INFO:Initializing load_model()
2025-03-29 22:03:43,238:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:03:43,294:INFO:Initializing predict_model()
2025-03-29 22:03:43,294:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7BA108710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D1F01620>)
2025-03-29 22:03:43,294:INFO:Checking exceptions
2025-03-29 22:03:43,294:INFO:Preloading libraries
2025-03-29 22:03:43,294:INFO:Set up data.
2025-03-29 22:03:43,298:INFO:Set up index.
2025-03-29 22:05:01,550:INFO:Initializing load_model()
2025-03-29 22:05:01,550:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:05:06,805:INFO:Initializing load_model()
2025-03-29 22:05:06,805:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:06:03,220:INFO:Initializing load_model()
2025-03-29 22:06:03,220:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:10:30,054:INFO:Initializing load_model()
2025-03-29 22:10:30,054:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:10:47,082:INFO:Initializing load_model()
2025-03-29 22:10:47,082:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:10:48,132:INFO:Initializing load_model()
2025-03-29 22:10:48,138:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:10:48,548:INFO:Initializing load_model()
2025-03-29 22:10:48,548:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:10:49,124:INFO:Initializing load_model()
2025-03-29 22:10:49,124:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:10:50,098:INFO:Initializing load_model()
2025-03-29 22:10:50,098:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:10:56,652:INFO:Initializing load_model()
2025-03-29 22:10:56,654:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:10:56,891:INFO:Initializing load_model()
2025-03-29 22:10:56,903:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:10:56,974:INFO:Initializing predict_model()
2025-03-29 22:10:56,974:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7A95C3490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D3B468E0>)
2025-03-29 22:10:56,974:INFO:Checking exceptions
2025-03-29 22:10:56,974:INFO:Preloading libraries
2025-03-29 22:10:56,974:INFO:Set up data.
2025-03-29 22:10:56,974:INFO:Set up index.
2025-03-29 22:11:49,583:INFO:Initializing load_model()
2025-03-29 22:11:49,583:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:15:25,473:INFO:Initializing load_model()
2025-03-29 22:15:25,473:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:20:00,558:INFO:Initializing load_model()
2025-03-29 22:20:00,558:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:21:36,738:INFO:Initializing load_model()
2025-03-29 22:21:36,738:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:21:51,398:INFO:Initializing load_model()
2025-03-29 22:21:51,398:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:22:02,674:INFO:Initializing load_model()
2025-03-29 22:22:02,674:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:22:04,295:INFO:Initializing load_model()
2025-03-29 22:22:04,295:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:22:04,444:INFO:Initializing predict_model()
2025-03-29 22:22:04,446:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D3FCB510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D3F42340>)
2025-03-29 22:22:04,446:INFO:Checking exceptions
2025-03-29 22:22:04,446:INFO:Preloading libraries
2025-03-29 22:22:04,446:INFO:Set up data.
2025-03-29 22:22:04,459:INFO:Set up index.
2025-03-29 22:24:05,053:INFO:Initializing load_model()
2025-03-29 22:24:05,053:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:24:10,989:INFO:Initializing load_model()
2025-03-29 22:24:10,989:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:24:20,382:INFO:Initializing load_model()
2025-03-29 22:24:20,382:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:24:21,285:INFO:Initializing load_model()
2025-03-29 22:24:21,285:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:24:26,660:INFO:Initializing load_model()
2025-03-29 22:24:26,660:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:24:32,042:INFO:Initializing load_model()
2025-03-29 22:24:32,042:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:24:32,107:INFO:Initializing load_model()
2025-03-29 22:24:32,107:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:24:32,275:INFO:Initializing predict_model()
2025-03-29 22:24:32,275:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D3A11C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D3F41D00>)
2025-03-29 22:24:32,276:INFO:Checking exceptions
2025-03-29 22:24:32,276:INFO:Preloading libraries
2025-03-29 22:24:32,276:INFO:Set up data.
2025-03-29 22:24:32,279:INFO:Set up index.
2025-03-29 22:25:30,772:INFO:Initializing load_model()
2025-03-29 22:25:30,772:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:25:35,596:INFO:Initializing load_model()
2025-03-29 22:25:35,596:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:25:35,769:INFO:Initializing load_model()
2025-03-29 22:25:35,769:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:25:35,813:INFO:Initializing predict_model()
2025-03-29 22:25:35,813:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7A957EE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D3A1BBA0>)
2025-03-29 22:25:35,813:INFO:Checking exceptions
2025-03-29 22:25:35,813:INFO:Preloading libraries
2025-03-29 22:25:35,813:INFO:Set up data.
2025-03-29 22:25:35,815:INFO:Set up index.
2025-03-29 22:26:52,853:INFO:Initializing load_model()
2025-03-29 22:26:52,853:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:26:57,658:INFO:Initializing load_model()
2025-03-29 22:26:57,658:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:26:57,698:INFO:Initializing predict_model()
2025-03-29 22:26:57,698:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D2180090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D3F43380>)
2025-03-29 22:26:57,698:INFO:Checking exceptions
2025-03-29 22:26:57,698:INFO:Preloading libraries
2025-03-29 22:26:57,698:INFO:Set up data.
2025-03-29 22:26:57,698:INFO:Set up index.
2025-03-29 22:28:23,489:INFO:Initializing load_model()
2025-03-29 22:28:23,490:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:28:43,734:INFO:Initializing load_model()
2025-03-29 22:28:43,734:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:28:44,383:INFO:Initializing load_model()
2025-03-29 22:28:44,383:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:28:45,013:INFO:Initializing load_model()
2025-03-29 22:28:45,013:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:28:45,797:INFO:Initializing load_model()
2025-03-29 22:28:45,797:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:28:50,452:INFO:Initializing load_model()
2025-03-29 22:28:50,452:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:28:50,634:INFO:Initializing load_model()
2025-03-29 22:28:50,634:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:28:50,681:INFO:Initializing predict_model()
2025-03-29 22:28:50,681:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D3A178D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D3F439C0>)
2025-03-29 22:28:50,681:INFO:Checking exceptions
2025-03-29 22:28:50,681:INFO:Preloading libraries
2025-03-29 22:28:50,682:INFO:Set up data.
2025-03-29 22:28:50,684:INFO:Set up index.
2025-03-29 22:30:49,925:INFO:Initializing load_model()
2025-03-29 22:30:49,925:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:30:56,142:INFO:Initializing load_model()
2025-03-29 22:30:56,142:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:30:59,566:INFO:Initializing load_model()
2025-03-29 22:30:59,566:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:31:00,812:INFO:Initializing load_model()
2025-03-29 22:31:00,812:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:31:01,232:INFO:Initializing load_model()
2025-03-29 22:31:01,243:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:31:01,713:INFO:Initializing load_model()
2025-03-29 22:31:01,713:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:31:02,201:INFO:Initializing load_model()
2025-03-29 22:31:02,201:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:31:02,602:INFO:Initializing load_model()
2025-03-29 22:31:02,602:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:31:03,002:INFO:Initializing load_model()
2025-03-29 22:31:03,002:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:31:04,066:INFO:Initializing load_model()
2025-03-29 22:31:04,067:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:31:04,441:INFO:Initializing load_model()
2025-03-29 22:31:04,441:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:31:09,933:INFO:Initializing load_model()
2025-03-29 22:31:09,933:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:31:10,048:INFO:Initializing load_model()
2025-03-29 22:31:10,048:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-29 22:31:10,082:INFO:Initializing predict_model()
2025-03-29 22:31:10,082:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D39FC1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D22B1800>)
2025-03-29 22:31:10,082:INFO:Checking exceptions
2025-03-29 22:31:10,082:INFO:Preloading libraries
2025-03-29 22:31:10,082:INFO:Set up data.
2025-03-29 22:31:10,097:INFO:Set up index.
2025-03-31 13:21:49,372:INFO:Initializing load_model()
2025-03-31 13:21:49,372:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:26:43,874:INFO:Initializing load_model()
2025-03-31 13:26:43,874:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:28:59,366:INFO:Initializing load_model()
2025-03-31 13:28:59,366:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:29:10,277:INFO:Initializing load_model()
2025-03-31 13:29:10,277:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:29:11,284:INFO:Initializing load_model()
2025-03-31 13:29:11,284:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:29:16,087:INFO:Initializing load_model()
2025-03-31 13:29:16,087:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:29:16,152:INFO:Initializing load_model()
2025-03-31 13:29:16,155:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:29:16,425:INFO:Initializing predict_model()
2025-03-31 13:29:16,425:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D226CD10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D1B62980>)
2025-03-31 13:29:16,425:INFO:Checking exceptions
2025-03-31 13:29:16,425:INFO:Preloading libraries
2025-03-31 13:29:16,425:INFO:Set up data.
2025-03-31 13:29:16,435:INFO:Set up index.
2025-03-31 13:30:46,450:INFO:Initializing load_model()
2025-03-31 13:30:46,450:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:33:04,934:INFO:Initializing load_model()
2025-03-31 13:33:04,934:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:33:14,796:INFO:Initializing load_model()
2025-03-31 13:33:14,798:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:33:22,132:INFO:Initializing load_model()
2025-03-31 13:33:22,132:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:33:22,196:INFO:Initializing load_model()
2025-03-31 13:33:22,196:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:33:22,483:INFO:Initializing predict_model()
2025-03-31 13:33:22,483:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D2E85310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D2F54FE0>)
2025-03-31 13:33:22,486:INFO:Checking exceptions
2025-03-31 13:33:22,486:INFO:Preloading libraries
2025-03-31 13:33:22,486:INFO:Set up data.
2025-03-31 13:33:22,493:INFO:Set up index.
2025-03-31 13:34:29,755:INFO:Initializing load_model()
2025-03-31 13:34:29,755:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:35:09,281:INFO:Initializing load_model()
2025-03-31 13:35:09,281:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:35:13,473:INFO:Initializing load_model()
2025-03-31 13:35:13,473:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:35:13,684:INFO:Initializing load_model()
2025-03-31 13:35:13,697:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:35:13,798:INFO:Initializing predict_model()
2025-03-31 13:35:13,798:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D347EC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D2F56AC0>)
2025-03-31 13:35:13,798:INFO:Checking exceptions
2025-03-31 13:35:13,798:INFO:Preloading libraries
2025-03-31 13:35:13,798:INFO:Set up data.
2025-03-31 13:35:13,801:INFO:Set up index.
2025-03-31 13:40:29,116:INFO:Initializing load_model()
2025-03-31 13:40:29,116:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:42:20,279:INFO:Initializing load_model()
2025-03-31 13:42:20,279:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:44:09,729:INFO:Initializing load_model()
2025-03-31 13:44:09,729:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:44:17,704:INFO:Initializing load_model()
2025-03-31 13:44:17,704:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:44:17,775:INFO:Initializing predict_model()
2025-03-31 13:44:17,775:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D3AAC1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D3B46CA0>)
2025-03-31 13:44:17,775:INFO:Checking exceptions
2025-03-31 13:44:17,777:INFO:Preloading libraries
2025-03-31 13:44:17,777:INFO:Set up data.
2025-03-31 13:44:17,783:INFO:Set up index.
2025-03-31 13:46:02,800:INFO:Initializing load_model()
2025-03-31 13:46:02,800:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:46:41,489:INFO:Initializing load_model()
2025-03-31 13:46:41,489:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:47:47,464:INFO:Initializing load_model()
2025-03-31 13:47:47,464:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:49:36,410:INFO:Initializing load_model()
2025-03-31 13:49:36,410:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:50:01,657:INFO:Initializing load_model()
2025-03-31 13:50:01,657:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:50:55,006:INFO:Initializing load_model()
2025-03-31 13:50:55,008:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:51:30,474:INFO:Initializing load_model()
2025-03-31 13:51:30,474:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:58:18,807:INFO:Initializing load_model()
2025-03-31 13:58:18,807:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:58:31,850:INFO:Initializing load_model()
2025-03-31 13:58:31,850:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:58:31,923:INFO:Initializing load_model()
2025-03-31 13:58:31,925:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:58:32,778:INFO:Initializing load_model()
2025-03-31 13:58:32,778:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:58:32,897:INFO:Initializing predict_model()
2025-03-31 13:58:32,906:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D1C4C790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D3F42CA0>)
2025-03-31 13:58:32,906:INFO:Checking exceptions
2025-03-31 13:58:32,906:INFO:Preloading libraries
2025-03-31 13:58:32,906:INFO:Set up data.
2025-03-31 13:58:32,911:INFO:Set up index.
2025-03-31 13:58:53,651:INFO:Initializing load_model()
2025-03-31 13:58:53,653:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:59:00,265:INFO:Initializing load_model()
2025-03-31 13:59:00,265:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:59:01,396:INFO:Initializing load_model()
2025-03-31 13:59:01,396:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:59:09,317:INFO:Initializing load_model()
2025-03-31 13:59:09,317:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:59:13,645:INFO:Initializing load_model()
2025-03-31 13:59:13,645:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:59:13,890:INFO:Initializing load_model()
2025-03-31 13:59:13,890:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:59:13,982:INFO:Initializing predict_model()
2025-03-31 13:59:13,982:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D141CB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D83639C0>)
2025-03-31 13:59:13,986:INFO:Checking exceptions
2025-03-31 13:59:13,986:INFO:Preloading libraries
2025-03-31 13:59:13,986:INFO:Set up data.
2025-03-31 13:59:13,994:INFO:Set up index.
2025-03-31 13:59:28,457:INFO:Initializing load_model()
2025-03-31 13:59:28,457:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:59:47,444:INFO:Initializing load_model()
2025-03-31 13:59:47,444:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:59:48,302:INFO:Initializing load_model()
2025-03-31 13:59:48,302:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:59:49,175:INFO:Initializing load_model()
2025-03-31 13:59:49,184:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:59:49,565:INFO:Initializing load_model()
2025-03-31 13:59:49,565:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:59:53,217:INFO:Initializing load_model()
2025-03-31 13:59:53,217:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:59:56,427:INFO:Initializing load_model()
2025-03-31 13:59:56,427:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:59:56,715:INFO:Initializing load_model()
2025-03-31 13:59:56,715:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 13:59:56,799:INFO:Initializing predict_model()
2025-03-31 13:59:56,799:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D1BEB490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D39E3B00>)
2025-03-31 13:59:56,805:INFO:Checking exceptions
2025-03-31 13:59:56,805:INFO:Preloading libraries
2025-03-31 13:59:56,805:INFO:Set up data.
2025-03-31 13:59:56,809:INFO:Set up index.
2025-03-31 14:01:30,655:INFO:Initializing load_model()
2025-03-31 14:01:30,662:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:01:36,114:INFO:Initializing load_model()
2025-03-31 14:01:36,115:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:01:36,185:INFO:Initializing predict_model()
2025-03-31 14:01:36,185:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D826C1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D3A51DA0>)
2025-03-31 14:01:36,185:INFO:Checking exceptions
2025-03-31 14:01:36,185:INFO:Preloading libraries
2025-03-31 14:01:36,185:INFO:Set up data.
2025-03-31 14:01:36,193:INFO:Set up index.
2025-03-31 14:02:39,015:INFO:Initializing load_model()
2025-03-31 14:02:39,015:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:02:50,482:INFO:Initializing load_model()
2025-03-31 14:02:50,482:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:02:50,555:INFO:Initializing predict_model()
2025-03-31 14:02:50,555:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D8414AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D22C1D00>)
2025-03-31 14:02:50,555:INFO:Checking exceptions
2025-03-31 14:02:50,555:INFO:Preloading libraries
2025-03-31 14:02:50,555:INFO:Set up data.
2025-03-31 14:02:50,568:INFO:Set up index.
2025-03-31 14:04:43,285:INFO:Initializing load_model()
2025-03-31 14:04:43,286:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:04:48,925:INFO:Initializing load_model()
2025-03-31 14:04:48,925:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:04:49,001:INFO:Initializing predict_model()
2025-03-31 14:04:49,002:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D3E37210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D3ABD800>)
2025-03-31 14:04:49,002:INFO:Checking exceptions
2025-03-31 14:04:49,002:INFO:Preloading libraries
2025-03-31 14:04:49,003:INFO:Set up data.
2025-03-31 14:04:49,005:INFO:Set up index.
2025-03-31 14:06:01,854:INFO:Initializing load_model()
2025-03-31 14:06:01,854:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:30:01,379:INFO:Initializing load_model()
2025-03-31 14:30:01,379:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:32:26,331:INFO:Initializing load_model()
2025-03-31 14:32:26,331:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:36:18,657:INFO:Initializing load_model()
2025-03-31 14:36:18,657:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:38:21,544:INFO:Initializing load_model()
2025-03-31 14:38:21,544:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:39:24,607:INFO:Initializing load_model()
2025-03-31 14:39:24,607:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:40:09,482:INFO:Initializing load_model()
2025-03-31 14:40:09,482:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:40:33,601:INFO:Initializing load_model()
2025-03-31 14:40:33,601:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:41:04,662:INFO:Initializing load_model()
2025-03-31 14:41:04,662:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:41:52,390:INFO:Initializing load_model()
2025-03-31 14:41:52,390:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:41:52,515:INFO:Initializing load_model()
2025-03-31 14:41:52,515:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:42:08,553:INFO:Initializing load_model()
2025-03-31 14:42:08,554:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:45:26,721:INFO:Initializing load_model()
2025-03-31 14:45:26,721:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:45:33,071:INFO:Initializing load_model()
2025-03-31 14:45:33,071:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:45:33,181:INFO:Initializing load_model()
2025-03-31 14:45:33,181:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:45:33,221:INFO:Initializing predict_model()
2025-03-31 14:45:33,222:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D83741D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D3A50A40>)
2025-03-31 14:45:33,222:INFO:Checking exceptions
2025-03-31 14:45:33,223:INFO:Preloading libraries
2025-03-31 14:45:33,225:INFO:Set up data.
2025-03-31 14:45:33,230:INFO:Set up index.
2025-03-31 14:48:09,354:INFO:Initializing load_model()
2025-03-31 14:48:09,354:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:48:15,602:INFO:Initializing load_model()
2025-03-31 14:48:15,602:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:48:22,283:INFO:Initializing load_model()
2025-03-31 14:48:22,284:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:48:22,932:INFO:Initializing load_model()
2025-03-31 14:48:22,932:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:48:32,093:INFO:Initializing load_model()
2025-03-31 14:48:32,093:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:48:32,206:INFO:Initializing load_model()
2025-03-31 14:48:32,207:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:48:37,918:INFO:Initializing load_model()
2025-03-31 14:48:37,918:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:48:38,042:INFO:Initializing load_model()
2025-03-31 14:48:38,043:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:48:38,086:INFO:Initializing predict_model()
2025-03-31 14:48:38,086:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D8374A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D22FE700>)
2025-03-31 14:48:38,086:INFO:Checking exceptions
2025-03-31 14:48:38,087:INFO:Preloading libraries
2025-03-31 14:48:38,087:INFO:Set up data.
2025-03-31 14:48:38,089:INFO:Set up index.
2025-03-31 14:49:14,286:INFO:Initializing load_model()
2025-03-31 14:49:14,286:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:50:26,366:INFO:Initializing load_model()
2025-03-31 14:50:26,366:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:52:59,521:INFO:Initializing load_model()
2025-03-31 14:52:59,521:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:53:06,004:INFO:Initializing load_model()
2025-03-31 14:53:06,004:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:53:16,075:INFO:Initializing load_model()
2025-03-31 14:53:16,075:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:53:18,661:INFO:Initializing load_model()
2025-03-31 14:53:18,661:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:53:23,323:INFO:Initializing load_model()
2025-03-31 14:53:23,323:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:53:23,539:INFO:Initializing load_model()
2025-03-31 14:53:23,539:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:53:24,256:INFO:Initializing load_model()
2025-03-31 14:53:24,257:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 14:53:24,345:INFO:Initializing predict_model()
2025-03-31 14:53:24,346:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D215CF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D3315EE0>)
2025-03-31 14:53:24,346:INFO:Checking exceptions
2025-03-31 14:53:24,347:INFO:Preloading libraries
2025-03-31 14:53:24,348:INFO:Set up data.
2025-03-31 14:53:24,353:INFO:Set up index.
2025-03-31 15:05:17,508:INFO:Initializing load_model()
2025-03-31 15:05:17,508:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 15:05:22,623:INFO:Initializing load_model()
2025-03-31 15:05:22,623:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 15:05:22,654:INFO:Initializing predict_model()
2025-03-31 15:05:22,654:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D39F7090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D22B2CA0>)
2025-03-31 15:05:22,654:INFO:Checking exceptions
2025-03-31 15:05:22,654:INFO:Preloading libraries
2025-03-31 15:05:22,654:INFO:Set up data.
2025-03-31 15:05:22,662:INFO:Set up index.
2025-03-31 15:05:44,416:INFO:Initializing load_model()
2025-03-31 15:05:44,417:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 15:05:54,819:INFO:Initializing load_model()
2025-03-31 15:05:54,819:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 15:05:54,944:INFO:Initializing load_model()
2025-03-31 15:05:54,944:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 15:05:54,980:INFO:Initializing predict_model()
2025-03-31 15:05:54,980:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D34341D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D2153600>)
2025-03-31 15:05:54,983:INFO:Checking exceptions
2025-03-31 15:05:54,983:INFO:Preloading libraries
2025-03-31 15:05:54,984:INFO:Set up data.
2025-03-31 15:05:54,986:INFO:Set up index.
2025-03-31 15:08:38,862:INFO:Initializing load_model()
2025-03-31 15:08:38,862:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 15:08:46,809:INFO:Initializing load_model()
2025-03-31 15:08:46,809:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 15:08:46,845:INFO:Initializing predict_model()
2025-03-31 15:08:46,846:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D8376E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D83B23E0>)
2025-03-31 15:08:46,846:INFO:Checking exceptions
2025-03-31 15:08:46,846:INFO:Preloading libraries
2025-03-31 15:08:46,846:INFO:Set up data.
2025-03-31 15:08:46,849:INFO:Set up index.
2025-03-31 15:09:06,016:INFO:Initializing load_model()
2025-03-31 15:09:06,016:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 15:09:17,159:INFO:Initializing load_model()
2025-03-31 15:09:17,159:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 15:09:17,294:INFO:Initializing load_model()
2025-03-31 15:09:17,295:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 15:09:17,360:INFO:Initializing predict_model()
2025-03-31 15:09:17,360:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D348C1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D3F41080>)
2025-03-31 15:09:17,360:INFO:Checking exceptions
2025-03-31 15:09:17,361:INFO:Preloading libraries
2025-03-31 15:09:17,361:INFO:Set up data.
2025-03-31 15:09:17,363:INFO:Set up index.
2025-03-31 15:09:43,197:INFO:Initializing load_model()
2025-03-31 15:09:43,197:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 15:10:08,725:INFO:Initializing load_model()
2025-03-31 15:10:08,725:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 15:10:12,861:INFO:Initializing load_model()
2025-03-31 15:10:12,861:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 15:10:12,910:INFO:Initializing predict_model()
2025-03-31 15:10:12,910:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D39F7210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D217C180>)
2025-03-31 15:10:12,910:INFO:Checking exceptions
2025-03-31 15:10:12,910:INFO:Preloading libraries
2025-03-31 15:10:12,910:INFO:Set up data.
2025-03-31 15:10:12,910:INFO:Set up index.
2025-03-31 15:13:38,626:INFO:Initializing load_model()
2025-03-31 15:13:38,626:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 15:14:16,965:INFO:Initializing load_model()
2025-03-31 15:14:16,965:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 15:14:56,713:INFO:Initializing load_model()
2025-03-31 15:14:56,713:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 15:18:37,174:INFO:Initializing load_model()
2025-03-31 15:18:37,174:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 16:37:22,144:INFO:Initializing load_model()
2025-03-31 16:37:22,144:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 16:37:50,856:INFO:Initializing load_model()
2025-03-31 16:37:50,856:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 16:43:29,584:INFO:Initializing load_model()
2025-03-31 16:43:29,584:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 16:44:35,871:INFO:Initializing load_model()
2025-03-31 16:44:35,871:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 16:44:52,537:INFO:Initializing load_model()
2025-03-31 16:44:52,537:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 16:46:21,765:INFO:Initializing load_model()
2025-03-31 16:46:21,765:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 16:47:48,525:INFO:Initializing load_model()
2025-03-31 16:47:48,525:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 16:49:06,891:INFO:Initializing load_model()
2025-03-31 16:49:06,891:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 16:49:28,678:INFO:Initializing load_model()
2025-03-31 16:49:28,678:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 16:49:47,908:INFO:Initializing load_model()
2025-03-31 16:49:47,908:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 16:50:23,893:INFO:Initializing load_model()
2025-03-31 16:50:23,893:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 16:50:44,597:INFO:Initializing load_model()
2025-03-31 16:50:44,597:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 16:50:55,048:INFO:Initializing load_model()
2025-03-31 16:50:55,048:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 16:53:10,058:INFO:Initializing load_model()
2025-03-31 16:53:10,058:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 16:53:23,101:INFO:Initializing load_model()
2025-03-31 16:53:23,101:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 16:56:18,564:INFO:Initializing load_model()
2025-03-31 16:56:18,565:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 16:59:13,874:INFO:Initializing load_model()
2025-03-31 16:59:13,876:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 16:59:27,370:INFO:Initializing load_model()
2025-03-31 16:59:27,370:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 16:59:49,035:INFO:Initializing load_model()
2025-03-31 16:59:49,035:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 17:02:31,314:INFO:Initializing load_model()
2025-03-31 17:02:31,314:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 17:06:08,418:INFO:Initializing load_model()
2025-03-31 17:06:08,418:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 17:08:21,162:INFO:Initializing load_model()
2025-03-31 17:08:21,162:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 17:12:11,368:INFO:Initializing load_model()
2025-03-31 17:12:11,368:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 17:14:03,120:INFO:Initializing load_model()
2025-03-31 17:14:03,120:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 17:14:59,149:INFO:Initializing load_model()
2025-03-31 17:14:59,149:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 17:33:55,539:INFO:Initializing load_model()
2025-03-31 17:33:55,539:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 17:37:25,498:INFO:Initializing load_model()
2025-03-31 17:37:25,499:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 19:43:19,978:INFO:Initializing load_model()
2025-03-31 19:43:19,978:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 19:43:21,370:INFO:Initializing load_model()
2025-03-31 19:43:21,370:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 19:43:26,260:INFO:Initializing load_model()
2025-03-31 19:43:26,260:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 19:43:32,695:INFO:Initializing load_model()
2025-03-31 19:43:32,695:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 19:43:32,896:INFO:Initializing load_model()
2025-03-31 19:43:32,896:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 19:43:32,966:INFO:Initializing predict_model()
2025-03-31 19:43:32,966:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D2F3A950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D2E7C360>)
2025-03-31 19:43:32,966:INFO:Checking exceptions
2025-03-31 19:43:32,966:INFO:Preloading libraries
2025-03-31 19:43:32,966:INFO:Set up data.
2025-03-31 19:43:32,968:INFO:Set up index.
2025-03-31 19:44:38,876:INFO:Initializing load_model()
2025-03-31 19:44:38,876:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 19:44:40,081:INFO:Initializing load_model()
2025-03-31 19:44:40,083:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 19:44:55,685:INFO:Initializing load_model()
2025-03-31 19:44:55,685:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 19:45:49,230:INFO:Initializing load_model()
2025-03-31 19:45:49,230:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 19:45:49,424:INFO:Initializing load_model()
2025-03-31 19:45:49,424:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 19:45:49,479:INFO:Initializing predict_model()
2025-03-31 19:45:49,479:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D82BD050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D2E7CAE0>)
2025-03-31 19:45:49,479:INFO:Checking exceptions
2025-03-31 19:45:49,479:INFO:Preloading libraries
2025-03-31 19:45:49,479:INFO:Set up data.
2025-03-31 19:45:49,490:INFO:Set up index.
2025-03-31 19:49:17,887:INFO:Initializing load_model()
2025-03-31 19:49:17,887:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 19:49:28,395:INFO:Initializing load_model()
2025-03-31 19:49:28,397:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 19:49:28,633:INFO:Initializing load_model()
2025-03-31 19:49:28,633:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 19:49:28,722:INFO:Initializing predict_model()
2025-03-31 19:49:28,722:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D20AFD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D3B47560>)
2025-03-31 19:49:28,722:INFO:Checking exceptions
2025-03-31 19:49:28,722:INFO:Preloading libraries
2025-03-31 19:49:28,722:INFO:Set up data.
2025-03-31 19:49:28,727:INFO:Set up index.
2025-03-31 19:53:17,763:INFO:Initializing load_model()
2025-03-31 19:53:17,763:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 19:53:21,543:INFO:Initializing load_model()
2025-03-31 19:53:21,543:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 19:53:21,634:INFO:Initializing predict_model()
2025-03-31 19:53:21,635:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D2E778D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D2EE7560>)
2025-03-31 19:53:21,635:INFO:Checking exceptions
2025-03-31 19:53:21,635:INFO:Preloading libraries
2025-03-31 19:53:21,637:INFO:Set up data.
2025-03-31 19:53:21,637:INFO:Set up index.
2025-03-31 19:54:43,713:INFO:Initializing load_model()
2025-03-31 19:54:43,713:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 19:54:45,754:INFO:Initializing load_model()
2025-03-31 19:54:45,754:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 19:54:46,247:INFO:Initializing load_model()
2025-03-31 19:54:46,248:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 19:54:47,077:INFO:Initializing load_model()
2025-03-31 19:54:47,077:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 19:54:52,441:INFO:Initializing load_model()
2025-03-31 19:54:52,441:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 19:54:56,459:INFO:Initializing load_model()
2025-03-31 19:54:56,459:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 19:54:56,728:INFO:Initializing load_model()
2025-03-31 19:54:56,728:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 19:54:56,803:INFO:Initializing predict_model()
2025-03-31 19:54:56,803:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D3A78610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D3B46D40>)
2025-03-31 19:54:56,803:INFO:Checking exceptions
2025-03-31 19:54:56,803:INFO:Preloading libraries
2025-03-31 19:54:56,803:INFO:Set up data.
2025-03-31 19:54:56,809:INFO:Set up index.
2025-03-31 19:58:46,371:INFO:Initializing load_model()
2025-03-31 19:58:46,372:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 19:58:53,795:INFO:Initializing load_model()
2025-03-31 19:58:53,795:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 19:58:53,877:INFO:Initializing predict_model()
2025-03-31 19:58:53,877:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D3B8BAD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D2EE5E40>)
2025-03-31 19:58:53,877:INFO:Checking exceptions
2025-03-31 19:58:53,877:INFO:Preloading libraries
2025-03-31 19:58:53,886:INFO:Set up data.
2025-03-31 19:58:53,889:INFO:Set up index.
2025-03-31 20:01:50,139:INFO:Initializing load_model()
2025-03-31 20:01:50,139:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:10:51,362:INFO:Initializing load_model()
2025-03-31 20:10:51,362:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:11:04,118:INFO:Initializing load_model()
2025-03-31 20:11:04,118:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:11:04,179:INFO:Initializing predict_model()
2025-03-31 20:11:04,179:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D3A35890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D83E8CC0>)
2025-03-31 20:11:04,183:INFO:Checking exceptions
2025-03-31 20:11:04,183:INFO:Preloading libraries
2025-03-31 20:11:04,183:INFO:Set up data.
2025-03-31 20:11:04,188:INFO:Set up index.
2025-03-31 20:11:08,037:INFO:Initializing load_model()
2025-03-31 20:11:08,037:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:11:08,106:INFO:Initializing predict_model()
2025-03-31 20:11:08,107:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D218F210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D218AA20>)
2025-03-31 20:11:08,107:INFO:Checking exceptions
2025-03-31 20:11:08,107:INFO:Preloading libraries
2025-03-31 20:11:08,107:INFO:Set up data.
2025-03-31 20:11:08,107:INFO:Set up index.
2025-03-31 20:14:13,836:INFO:Initializing load_model()
2025-03-31 20:14:13,836:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:14:21,947:INFO:Initializing load_model()
2025-03-31 20:14:21,947:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:14:22,017:INFO:Initializing predict_model()
2025-03-31 20:14:22,017:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D2262CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D22B2D40>)
2025-03-31 20:14:22,019:INFO:Checking exceptions
2025-03-31 20:14:22,019:INFO:Preloading libraries
2025-03-31 20:14:22,019:INFO:Set up data.
2025-03-31 20:14:22,023:INFO:Set up index.
2025-03-31 20:16:35,949:INFO:Initializing load_model()
2025-03-31 20:16:35,949:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:18:42,287:INFO:Initializing load_model()
2025-03-31 20:18:42,287:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:18:51,189:INFO:Initializing load_model()
2025-03-31 20:18:51,189:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:18:57,224:INFO:Initializing load_model()
2025-03-31 20:18:57,224:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:18:58,667:INFO:Initializing load_model()
2025-03-31 20:18:58,667:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:19:00,384:INFO:Initializing load_model()
2025-03-31 20:19:00,384:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:19:04,161:INFO:Initializing load_model()
2025-03-31 20:19:04,161:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:19:12,085:INFO:Initializing load_model()
2025-03-31 20:19:12,085:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:19:12,131:INFO:Initializing load_model()
2025-03-31 20:19:12,131:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:19:12,450:INFO:Initializing predict_model()
2025-03-31 20:19:12,452:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D20D3090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7AA95AC00>)
2025-03-31 20:19:12,452:INFO:Checking exceptions
2025-03-31 20:19:12,452:INFO:Preloading libraries
2025-03-31 20:19:12,452:INFO:Set up data.
2025-03-31 20:19:12,457:INFO:Set up index.
2025-03-31 20:20:55,317:INFO:Initializing load_model()
2025-03-31 20:20:55,317:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:21:37,725:INFO:Initializing load_model()
2025-03-31 20:21:37,725:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:21:53,463:INFO:Initializing load_model()
2025-03-31 20:21:53,463:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:25:18,271:INFO:Initializing load_model()
2025-03-31 20:25:18,271:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:25:31,513:INFO:Initializing load_model()
2025-03-31 20:25:31,515:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:25:31,777:INFO:Initializing load_model()
2025-03-31 20:25:31,777:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:25:31,930:INFO:Initializing predict_model()
2025-03-31 20:25:31,930:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7BA108710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D2F54400>)
2025-03-31 20:25:31,930:INFO:Checking exceptions
2025-03-31 20:25:31,930:INFO:Preloading libraries
2025-03-31 20:25:31,930:INFO:Set up data.
2025-03-31 20:25:31,937:INFO:Set up index.
2025-03-31 20:26:04,253:INFO:Initializing load_model()
2025-03-31 20:26:04,253:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:27:28,391:INFO:Initializing load_model()
2025-03-31 20:27:28,391:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:27:28,454:INFO:Initializing predict_model()
2025-03-31 20:27:28,454:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D0F05C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D2EB5BC0>)
2025-03-31 20:27:28,454:INFO:Checking exceptions
2025-03-31 20:27:28,454:INFO:Preloading libraries
2025-03-31 20:27:28,454:INFO:Set up data.
2025-03-31 20:27:28,454:INFO:Set up index.
2025-03-31 20:29:00,125:INFO:Initializing load_model()
2025-03-31 20:29:00,125:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:29:36,920:INFO:Initializing load_model()
2025-03-31 20:29:36,920:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:29:50,910:INFO:Initializing load_model()
2025-03-31 20:29:50,910:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 20:29:50,980:INFO:Initializing predict_model()
2025-03-31 20:29:50,980:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D348CC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D2EB4680>)
2025-03-31 20:29:50,980:INFO:Checking exceptions
2025-03-31 20:29:50,980:INFO:Preloading libraries
2025-03-31 20:29:50,987:INFO:Set up data.
2025-03-31 20:29:50,991:INFO:Set up index.
2025-03-31 21:27:05,826:INFO:Initializing load_model()
2025-03-31 21:27:05,826:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 21:27:14,025:INFO:Initializing load_model()
2025-03-31 21:27:14,025:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 21:27:18,083:INFO:Initializing load_model()
2025-03-31 21:27:18,083:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 21:27:18,249:INFO:Initializing load_model()
2025-03-31 21:27:18,249:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 21:27:18,294:INFO:Initializing predict_model()
2025-03-31 21:27:18,296:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D21F0E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D3A716C0>)
2025-03-31 21:27:18,296:INFO:Checking exceptions
2025-03-31 21:27:18,296:INFO:Preloading libraries
2025-03-31 21:27:18,297:INFO:Set up data.
2025-03-31 21:27:18,300:INFO:Set up index.
2025-03-31 21:34:33,530:INFO:Initializing load_model()
2025-03-31 21:34:33,530:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 21:38:02,607:INFO:Initializing load_model()
2025-03-31 21:38:02,607:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 21:38:42,893:INFO:Initializing load_model()
2025-03-31 21:38:42,893:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 21:47:28,234:INFO:Initializing load_model()
2025-03-31 21:47:28,234:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 21:47:37,646:INFO:Initializing load_model()
2025-03-31 21:47:37,646:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 21:47:37,696:INFO:Initializing predict_model()
2025-03-31 21:47:37,697:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7A97D9F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D2F565C0>)
2025-03-31 21:47:37,697:INFO:Checking exceptions
2025-03-31 21:47:37,697:INFO:Preloading libraries
2025-03-31 21:47:37,698:INFO:Set up data.
2025-03-31 21:47:37,701:INFO:Set up index.
2025-03-31 21:49:42,454:INFO:Initializing load_model()
2025-03-31 21:49:42,455:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:02:57,671:INFO:Initializing load_model()
2025-03-31 22:02:57,671:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:03:08,940:INFO:Initializing load_model()
2025-03-31 22:03:08,940:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:03:08,983:INFO:Initializing predict_model()
2025-03-31 22:03:08,984:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D2097890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D3A72020>)
2025-03-31 22:03:08,984:INFO:Checking exceptions
2025-03-31 22:03:08,984:INFO:Preloading libraries
2025-03-31 22:03:08,984:INFO:Set up data.
2025-03-31 22:03:08,989:INFO:Set up index.
2025-03-31 22:03:37,801:INFO:Initializing load_model()
2025-03-31 22:03:37,801:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:03:38,049:INFO:Initializing load_model()
2025-03-31 22:03:38,049:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:03:38,118:INFO:Initializing predict_model()
2025-03-31 22:03:38,118:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D20DC990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D2EA6D40>)
2025-03-31 22:03:38,118:INFO:Checking exceptions
2025-03-31 22:03:38,118:INFO:Preloading libraries
2025-03-31 22:03:38,119:INFO:Set up data.
2025-03-31 22:03:38,122:INFO:Set up index.
2025-03-31 22:04:56,658:INFO:Initializing load_model()
2025-03-31 22:04:56,658:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:06:58,518:INFO:Initializing load_model()
2025-03-31 22:06:58,518:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:07:43,519:INFO:Initializing load_model()
2025-03-31 22:07:43,519:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:07:48,643:INFO:Initializing load_model()
2025-03-31 22:07:48,643:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:08:11,860:INFO:Initializing load_model()
2025-03-31 22:08:11,860:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:08:12,306:INFO:Initializing load_model()
2025-03-31 22:08:12,306:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:08:12,775:INFO:Initializing load_model()
2025-03-31 22:08:12,775:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:08:13,377:INFO:Initializing load_model()
2025-03-31 22:08:13,377:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:08:14,526:INFO:Initializing load_model()
2025-03-31 22:08:14,526:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:08:19,070:INFO:Initializing load_model()
2025-03-31 22:08:19,071:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:08:21,267:INFO:Initializing load_model()
2025-03-31 22:08:21,267:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:08:21,435:INFO:Initializing load_model()
2025-03-31 22:08:21,436:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:08:21,470:INFO:Initializing predict_model()
2025-03-31 22:08:21,470:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D21C1990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D2153E20>)
2025-03-31 22:08:21,470:INFO:Checking exceptions
2025-03-31 22:08:21,470:INFO:Preloading libraries
2025-03-31 22:08:21,470:INFO:Set up data.
2025-03-31 22:08:21,474:INFO:Set up index.
2025-03-31 22:08:52,075:INFO:Initializing load_model()
2025-03-31 22:08:52,075:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:23:12,318:INFO:Initializing load_model()
2025-03-31 22:23:12,318:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:23:18,415:INFO:Initializing load_model()
2025-03-31 22:23:18,415:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:23:18,445:INFO:Initializing predict_model()
2025-03-31 22:23:18,445:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D829C790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D3A76DE0>)
2025-03-31 22:23:18,445:INFO:Checking exceptions
2025-03-31 22:23:18,445:INFO:Preloading libraries
2025-03-31 22:23:18,455:INFO:Set up data.
2025-03-31 22:23:18,457:INFO:Set up index.
2025-03-31 22:25:33,739:INFO:Initializing load_model()
2025-03-31 22:25:33,739:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:25:38,576:INFO:Initializing load_model()
2025-03-31 22:25:38,576:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:25:38,614:INFO:Initializing predict_model()
2025-03-31 22:25:38,614:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D3A78610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D1BEDDA0>)
2025-03-31 22:25:38,614:INFO:Checking exceptions
2025-03-31 22:25:38,614:INFO:Preloading libraries
2025-03-31 22:25:38,614:INFO:Set up data.
2025-03-31 22:25:38,614:INFO:Set up index.
2025-03-31 22:26:25,847:INFO:Initializing load_model()
2025-03-31 22:26:25,848:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:26:29,031:INFO:Initializing load_model()
2025-03-31 22:26:29,031:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:26:29,072:INFO:Initializing predict_model()
2025-03-31 22:26:29,072:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D829D7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D2081E40>)
2025-03-31 22:26:29,072:INFO:Checking exceptions
2025-03-31 22:26:29,078:INFO:Preloading libraries
2025-03-31 22:26:29,078:INFO:Set up data.
2025-03-31 22:26:29,080:INFO:Set up index.
2025-03-31 22:28:37,100:INFO:Initializing load_model()
2025-03-31 22:28:37,100:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:28:41,328:INFO:Initializing load_model()
2025-03-31 22:28:41,328:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:28:41,363:INFO:Initializing predict_model()
2025-03-31 22:28:41,363:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D836F210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D2099760>)
2025-03-31 22:28:41,363:INFO:Checking exceptions
2025-03-31 22:28:41,363:INFO:Preloading libraries
2025-03-31 22:28:41,363:INFO:Set up data.
2025-03-31 22:28:41,376:INFO:Set up index.
2025-03-31 22:31:47,274:INFO:Initializing load_model()
2025-03-31 22:31:47,274:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:33:28,437:INFO:Initializing load_model()
2025-03-31 22:33:28,437:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:33:30,254:INFO:Initializing load_model()
2025-03-31 22:33:30,254:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:33:30,725:INFO:Initializing load_model()
2025-03-31 22:33:30,725:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:33:32,099:INFO:Initializing load_model()
2025-03-31 22:33:32,100:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:33:33,327:INFO:Initializing load_model()
2025-03-31 22:33:33,327:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:33:43,026:INFO:Initializing load_model()
2025-03-31 22:33:43,026:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:33:49,716:INFO:Initializing load_model()
2025-03-31 22:33:49,716:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:33:49,886:INFO:Initializing load_model()
2025-03-31 22:33:49,903:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:33:49,944:INFO:Initializing predict_model()
2025-03-31 22:33:49,944:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D3E326D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D83D7E20>)
2025-03-31 22:33:49,945:INFO:Checking exceptions
2025-03-31 22:33:49,945:INFO:Preloading libraries
2025-03-31 22:33:49,945:INFO:Set up data.
2025-03-31 22:33:49,947:INFO:Set up index.
2025-03-31 22:35:47,989:INFO:Initializing load_model()
2025-03-31 22:35:47,989:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:35:56,195:INFO:Initializing load_model()
2025-03-31 22:35:56,195:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:37:18,779:INFO:Initializing load_model()
2025-03-31 22:37:18,779:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:37:33,149:INFO:Initializing load_model()
2025-03-31 22:37:33,149:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:37:41,397:INFO:Initializing load_model()
2025-03-31 22:37:41,397:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:37:42,411:INFO:Initializing load_model()
2025-03-31 22:37:42,411:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:37:43,395:INFO:Initializing load_model()
2025-03-31 22:37:43,395:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:38:02,727:INFO:Initializing load_model()
2025-03-31 22:38:02,727:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:38:11,105:INFO:Initializing load_model()
2025-03-31 22:38:11,105:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:38:11,305:INFO:Initializing load_model()
2025-03-31 22:38:11,305:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:38:11,350:INFO:Initializing predict_model()
2025-03-31 22:38:11,350:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D844C450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D2F567A0>)
2025-03-31 22:38:11,350:INFO:Checking exceptions
2025-03-31 22:38:11,350:INFO:Preloading libraries
2025-03-31 22:38:11,350:INFO:Set up data.
2025-03-31 22:38:11,350:INFO:Set up index.
2025-03-31 22:50:32,495:INFO:Initializing load_model()
2025-03-31 22:50:32,495:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:50:38,504:INFO:Initializing load_model()
2025-03-31 22:50:38,505:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-03-31 22:50:38,574:INFO:Initializing predict_model()
2025-03-31 22:50:38,575:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D2180090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D1BEDDA0>)
2025-03-31 22:50:38,575:INFO:Checking exceptions
2025-03-31 22:50:38,575:INFO:Preloading libraries
2025-03-31 22:50:38,576:INFO:Set up data.
2025-03-31 22:50:38,578:INFO:Set up index.
2025-04-01 11:16:42,765:INFO:Initializing load_model()
2025-04-01 11:16:42,765:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 11:16:46,863:INFO:Initializing load_model()
2025-04-01 11:16:46,863:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 11:16:48,962:INFO:Initializing load_model()
2025-04-01 11:16:48,962:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 11:16:49,027:INFO:Initializing predict_model()
2025-04-01 11:16:49,027:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D3B941D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D39E0FE0>)
2025-04-01 11:16:49,027:INFO:Checking exceptions
2025-04-01 11:16:49,027:INFO:Preloading libraries
2025-04-01 11:16:49,027:INFO:Set up data.
2025-04-01 11:16:49,038:INFO:Set up index.
2025-04-01 11:17:02,901:INFO:Initializing load_model()
2025-04-01 11:17:02,901:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 11:17:04,373:INFO:Initializing load_model()
2025-04-01 11:17:04,373:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 11:17:13,010:INFO:Initializing load_model()
2025-04-01 11:17:13,011:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 11:17:16,082:INFO:Initializing load_model()
2025-04-01 11:17:16,082:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 11:17:16,382:INFO:Initializing load_model()
2025-04-01 11:17:16,397:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 11:17:16,482:INFO:Initializing predict_model()
2025-04-01 11:17:16,482:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B7D3E393D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7D1BEE840>)
2025-04-01 11:17:16,482:INFO:Checking exceptions
2025-04-01 11:17:16,482:INFO:Preloading libraries
2025-04-01 11:17:16,482:INFO:Set up data.
2025-04-01 11:17:16,488:INFO:Set up index.
2025-04-01 11:42:37,665:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\scipy\__init__.py:145: UserWarning: A NumPy version >=1.21.6 and <1.28.0 is required for this version of SciPy (detected version 2.0.1)
  warnings.warn(f"A NumPy version >={np_minversion} and <{np_maxversion}"

2025-04-01 11:54:41,604:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\scipy\__init__.py:145: UserWarning: A NumPy version >=1.21.6 and <1.28.0 is required for this version of SciPy (detected version 2.0.1)
  warnings.warn(f"A NumPy version >={np_minversion} and <{np_maxversion}"

2025-04-01 11:55:53,818:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\scipy\__init__.py:145: UserWarning: A NumPy version >=1.21.6 and <1.28.0 is required for this version of SciPy (detected version 2.0.1)
  warnings.warn(f"A NumPy version >={np_minversion} and <{np_maxversion}"

2025-04-01 12:08:11,425:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\scipy\__init__.py:145: UserWarning: A NumPy version >=1.21.6 and <1.28.0 is required for this version of SciPy (detected version 2.2.4)
  warnings.warn(f"A NumPy version >={np_minversion} and <{np_maxversion}"

2025-04-01 12:09:55,186:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\scipy\__init__.py:145: UserWarning: A NumPy version >=1.21.6 and <1.28.0 is required for this version of SciPy (detected version 2.2.4)
  warnings.warn(f"A NumPy version >={np_minversion} and <{np_maxversion}"

2025-04-01 12:38:53,716:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 12:38:53,717:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 12:38:53,717:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 12:38:53,717:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 12:38:57,366:INFO:Initializing load_model()
2025-04-01 12:38:57,366:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 12:38:57,578:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 12:39:21,684:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 12:39:21,684:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 12:39:21,684:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 12:39:21,684:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 12:39:22,199:INFO:Initializing load_model()
2025-04-01 12:39:22,199:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 12:39:22,339:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 12:40:41,370:INFO:Initializing load_model()
2025-04-01 12:40:41,370:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 12:40:41,370:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 12:40:42,620:INFO:Initializing load_model()
2025-04-01 12:40:42,620:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 12:40:42,628:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 12:40:43,220:INFO:Initializing load_model()
2025-04-01 12:40:43,220:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 12:40:43,229:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 12:40:49,008:INFO:Initializing load_model()
2025-04-01 12:40:49,008:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 12:40:49,013:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 12:40:52,252:INFO:Initializing load_model()
2025-04-01 12:40:52,252:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 12:40:52,260:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 12:40:52,501:INFO:Initializing load_model()
2025-04-01 12:40:52,506:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 12:40:52,510:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 12:40:58,841:INFO:Initializing load_model()
2025-04-01 12:40:58,842:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 12:40:58,843:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 12:40:59,426:INFO:Initializing load_model()
2025-04-01 12:40:59,426:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 12:40:59,430:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 12:41:00,860:INFO:Initializing load_model()
2025-04-01 12:41:00,860:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 12:41:00,865:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 12:43:34,525:INFO:Initializing load_model()
2025-04-01 12:43:34,525:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 12:43:34,531:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 12:43:36,938:INFO:Initializing load_model()
2025-04-01 12:43:36,938:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 12:43:36,942:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 12:43:37,026:INFO:Initializing predict_model()
2025-04-01 12:43:37,026:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B392EE8C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B393267BA0>)
2025-04-01 12:43:37,026:INFO:Checking exceptions
2025-04-01 12:43:37,026:INFO:Preloading libraries
2025-04-01 12:43:37,026:INFO:Set up data.
2025-04-01 12:43:37,026:INFO:Set up index.
2025-04-01 12:44:35,551:INFO:Initializing load_model()
2025-04-01 12:44:35,551:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 12:44:35,559:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 12:44:49,889:INFO:Initializing load_model()
2025-04-01 12:44:49,889:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 12:44:49,891:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 12:51:05,546:INFO:Initializing load_model()
2025-04-01 12:51:05,546:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 12:51:05,549:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 12:51:12,129:INFO:Initializing load_model()
2025-04-01 12:51:12,129:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 12:51:12,138:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 12:51:12,179:INFO:Initializing predict_model()
2025-04-01 12:51:12,180:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B392A64450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B394D77060>)
2025-04-01 12:51:12,180:INFO:Checking exceptions
2025-04-01 12:51:12,180:INFO:Preloading libraries
2025-04-01 12:51:12,181:INFO:Set up data.
2025-04-01 12:51:12,184:INFO:Set up index.
2025-04-01 12:52:40,595:INFO:Initializing load_model()
2025-04-01 12:52:40,595:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 12:52:40,597:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 12:52:44,652:INFO:Initializing load_model()
2025-04-01 12:52:44,652:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 12:52:44,652:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 12:52:44,703:INFO:Initializing predict_model()
2025-04-01 12:52:44,703:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B395661650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B39325A200>)
2025-04-01 12:52:44,703:INFO:Checking exceptions
2025-04-01 12:52:44,703:INFO:Preloading libraries
2025-04-01 12:52:44,703:INFO:Set up data.
2025-04-01 12:52:44,703:INFO:Set up index.
2025-04-01 13:23:48,022:INFO:Initializing load_model()
2025-04-01 13:23:48,022:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 13:23:48,025:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 13:23:50,081:INFO:Initializing load_model()
2025-04-01 13:23:50,082:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 13:23:50,085:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 13:23:55,825:INFO:Initializing load_model()
2025-04-01 13:23:55,825:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 13:23:55,825:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 13:23:58,762:INFO:Initializing load_model()
2025-04-01 13:23:58,762:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 13:23:58,766:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 13:23:58,893:INFO:Initializing load_model()
2025-04-01 13:23:58,893:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 13:23:58,899:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 13:23:58,934:INFO:Initializing predict_model()
2025-04-01 13:23:58,934:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B392ECEB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B39622E520>)
2025-04-01 13:23:58,934:INFO:Checking exceptions
2025-04-01 13:23:58,934:INFO:Preloading libraries
2025-04-01 13:23:58,934:INFO:Set up data.
2025-04-01 13:23:58,934:INFO:Set up index.
2025-04-01 13:24:30,579:INFO:Initializing load_model()
2025-04-01 13:24:30,579:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 13:24:30,579:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 13:24:31,028:INFO:Initializing load_model()
2025-04-01 13:24:31,028:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 13:24:31,028:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 13:24:31,795:INFO:Initializing load_model()
2025-04-01 13:24:31,795:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 13:24:31,795:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 13:24:32,350:INFO:Initializing load_model()
2025-04-01 13:24:32,350:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 13:24:32,350:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 13:24:32,764:INFO:Initializing load_model()
2025-04-01 13:24:32,764:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 13:24:32,767:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 13:24:33,514:INFO:Initializing load_model()
2025-04-01 13:24:33,514:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 13:24:33,514:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 13:24:34,856:INFO:Initializing load_model()
2025-04-01 13:24:34,856:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 13:24:34,856:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 13:24:42,692:INFO:Initializing load_model()
2025-04-01 13:24:42,692:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 13:24:42,692:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 13:24:42,789:INFO:Initializing load_model()
2025-04-01 13:24:42,789:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 13:24:42,806:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 13:24:42,841:INFO:Initializing predict_model()
2025-04-01 13:24:42,841:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B392EC4790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B394BCCA40>)
2025-04-01 13:24:42,841:INFO:Checking exceptions
2025-04-01 13:24:42,841:INFO:Preloading libraries
2025-04-01 13:24:42,841:INFO:Set up data.
2025-04-01 13:24:42,855:INFO:Set up index.
2025-04-01 13:49:04,446:INFO:Initializing load_model()
2025-04-01 13:49:04,446:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 13:49:04,462:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 13:49:15,797:INFO:Initializing load_model()
2025-04-01 13:49:15,797:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 13:49:15,797:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 13:49:18,042:INFO:Initializing load_model()
2025-04-01 13:49:18,042:INFO:load_model(model_name=huber_model_halfmarathon_time, platform=None, authentication=None, verbose=True)
2025-04-01 13:49:18,042:WARNING:C:\Users\kgust\miniconda3\envs\halfmarathon_time\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.2.3', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.4.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.0.2', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-04-01 13:49:18,078:INFO:Initializing predict_model()
2025-04-01 13:49:18,078:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B39562A610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['5 km Czas', '5 km Tempo', 'Wiek'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['Płeć'],
                                    transformer=OrdinalEncoder(cols=['Płeć'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Płeć',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': K      0
M      1
NaN   -1
dtype: int64}]))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B395713A60>)
2025-04-01 13:49:18,078:INFO:Checking exceptions
2025-04-01 13:49:18,080:INFO:Preloading libraries
2025-04-01 13:49:18,080:INFO:Set up data.
2025-04-01 13:49:18,081:INFO:Set up index.
